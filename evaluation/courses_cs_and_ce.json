[
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=710382&pOrgNr=1",
        "name": "Active SportGames: Sportliche Spiele mit Ganzkörperinteraktion",
        "kennung": "IN2265",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls sind Studierende in der Lage, eine Auswahl aktuell am Markt verfügbarer neuartiger Interaktionsgeräte zum Motion Capturing eigenständig in Spieleanwendungen einzubeziehen. Desgleichen können sie einfache virtuelle Charaktere erstellen und steuern. Sie kennen Softwaresysteme zur Interpretation von Bewegungsdaten, sowie Komponenten einer Pipeline zum Anlernen ausgewählter Gesten kennen. Durch den praktischen Umgang mit diesen Systemen haben sie Erfahrungen, wie der Schwierigkeitsgrad ausgesuchter Ideen für interaktiven athletische Sportspiele von der aktuellen Qualität und den Grenzen verfügbarer Interaktionsgeräte und Gesteninterpretationssoftware abhängt. Die Lernergebnisse entsprechen denen im parallelen Modul IN2264 (Tanz und Schauspiel im Virtuellen Studio) – aber die Spielszenarien sind unterschiedlich.",
        "inhalt": "Grundlegende Kenntnisse und Umsetzungserfahrung in den Bereichen:\n+ Ansteuerung und Einbindung neuer Interaktionsgeräte\n+ Interpretation von Trackingdaten als Körperbewegungen\n+ Charakter Animation",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1,\nIN0002 Praktikum: Grundlagen der Programmierung,\nIN0038 Echtzeit-Computergrafik,\nIN0033 Interaktionsmethoden und -geräte\nAusschluss: IN2264 Tanz und Schauspiel im Virtuellen Studio darf NICHT absolviert sein",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": "2023S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3786711&pOrgNr=1",
        "name": "Additional Advanced Games-Specific Practical Course (Additional Games Lab)",
        "kennung": "CIT4210001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students are able to:\n• apply and combine techniques and models of real-time computer graphics, game physics, and software engineering in teams for implementation and testing of an advanced game as a team effort\n• analyze, compare, evaluate and apply existing technological building blocks (e.g. game engines, specialized software for game physics, client-server architectures and corresponding implementations, HCI hardware) for advanced game development\n• analyze, evaluate, and apply techniques, algorithms, and models from games-related modules in their lines of specialization",
        "inhalt": "• Designing an advanced game in a team\n• Implementing an advanced game in a team\n• Playtesting an advanced game",
        "voraussetzungen": "• CIT4210000 Advanced Games-Specific Practical Course (Games Lab)\nBachelor Informatics: Games Engineering, especially\no IN0038: Realtime Computer Graphics\no IN0039: Realtime Computer Graphics Lab Course\no IN0006: Introduction to Software Engineering\no IN0037: Game Physics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3307469&pOrgNr=1",
        "name": "Advanced Concepts of Programming Languages",
        "kennung": "CIT3230000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, students are familiar with an assortment of programming language constructs from popular programming languages. They understand the semantics of these constructs as well as the implementation consequences, that they inflict on the implementation as well as the runtime behavior of compiler and runtime system. They are able to analyze and compare different language based approaches, to discuss their relative merits and potential workarounds in case certain language features are missing. By means of this knowledge, they are able to extend existing compilers to handle the aforementioned constructs as well as able to re-encode concepts from one language by means of another language.",
        "inhalt": "This is not a beginners programming course – Instead, this lecture focusses on the semantics of various programming language concepts, and their implementation from the point of view of a compiler engineer. Topics may include, among others:\n- Relaxed Memory Models\n- Wait-/Lock-free Programming\n- Locks, Monitors & Condition Variables\n- Transactional Memory\n- Gotos, Co-Routines and Continuations\n- Single/Multi-Dispatching\n- (Multiple-) Inheritance\n- Delegation and Prototype Based Programming\n- Aspect Oriented Programming\n- Meta programming",
        "voraussetzungen": "IN0001 Introduction to Informatics,\nIN0002 Fundamentals of Programming (Exercises & Laboratory),\nIN0003 Functional Programming and Verification,\nat least one programming language",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2809077&pOrgNr=1",
        "name": "Advanced Deep Learning for Computer Vision: Dynamic Vision",
        "kennung": "IN2389",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks, in particular in the context of video analysis for computer vision tasks. In addition to the theoretical foundations, a significant aspect lies on the practical realization and training of neural networks.",
        "inhalt": "Note, this lecture is closely related (and mutually exclusive) to the lecture “Advanced Deep Learning for Computer Vision: Visual Computing”. The two lectures share some theoretical content, but the “Dynamic Vision” module provides a clear focus on video analysis tasks, which is especially important for the practical part in the form of a semester-long project.\n\nCommon lectures with “ADL4CV: Visual Computing” lecture:\n- Recap of Neural Networks and CNNs\n- Advanced Auto-encoders: Probabilistic approaches and the mathematical foundations (e.g., variational auto-encoders)\n- Generative Adversarial Networks (from Goodfellow to CycleGANs and Progressive GANs)\n- Autoregressive Networks and their parallelization\n- Probabilistic vs deterministic generative methods\n- Graph neural networks\n- Transformers\n- Open Problems in Deep Learning for Computer Vision\n\nUnique lectures for this module:\n- Siamese neural networks and deep metric learning\n- Visualization techniques\n- Multi-dimensional CNNs: spatio-temporal neural networks.\n- Active learning and semi-supervised learning",
        "voraussetzungen": "MA0902 Analysis für Informatiker\nMA0901 Lineare Algebra für Informatiker\nIN2346 Introduction to Deep Learning (expert knowledge required!)\nIN2375 Computer Vision 3: Detection, Segmentation, and Tracking\n\nDies ist die weiterführende Veranstaltung von Deep Learning mit einem speziellen Fokus auf Computer Vision für Video Analyse. Der Kurs „Introduction to Deep Learning“ ist Voraussetzung.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2808965&pOrgNr=1",
        "name": "Advanced Deep Learning for Computer Vision: Visual Computing",
        "kennung": "IN2390",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks, in particular in the context of computer vision tasks in visual computing. In addition to the theoretical foundations, a significant aspect lies on the practical realization and training of neural networks.",
        "inhalt": "Note, this lecture is closely related (and mutually exclusive) to the lecture “Advanced Deep Learning for Computer Vision: Dynamic Vision”. The two lectures share some theoretical content, but the “Visual Computing” module provides a clear focus on visual computing tasks, which is especially important for the practical part in the form of a semester-long project.\n\nCommon lectures with “ADL4CV: Dynamic Vision” lecture:\n- Recap of Neural Networks and CNNs\n- Advanced Auto-encoders: Probabilistic approaches and the mathematical foundations (e.g., variational auto-encoders)\n- Generative Adversarial Networks (from Goodfellow to CycleGANs and Progressive GANs)\n- Autoregressive Networks and their parallelization\n- Probabilistic vs deterministic generative methods\n- Graph neural networks\n- Transformer Networks\n- Open Problems in Deep Learning for Computer Vision\n\nUnique lectures for this module:\n- Multi-dimensional CNNs: from audio to 3D scene environments; 3D vs multi-view CNNs, sparse CNNs (e.g., Octrees);\n- Pointer Networks (focus on Scene Understanding, Meshes and 3D Geometry)\n- Neural rendering: From Novel View Point synthesis, Video Generation and Editing\n- Deep Fakes: Creation and Detection\n- CNNs on meshes: learning on structured and unstructured graphs. Mesh data structures and derived convolution operators on meshes using differential geometry.",
        "voraussetzungen": "MA0902 Analysis für Informatiker\nMA0901 Lineare Algebra für Informatiker\nIN2346 Introduction to Deep Learning (expert knowledge required!)\n\nDies ist die weiterführende Veranstaltung von Deep Learning mit einem speziellen Fokus auf Computer Vision. Der Kurs „Introduction to Deep Learning“ ist Voraussetzung.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=930142&pOrgNr=1",
        "name": "Advanced Deep Learning for Physics",
        "kennung": "IN2298",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "This course targets deep learning techniques and numerical simulation\nalgorithms for materials such as fluids and deformable objects. In particular,\nthis course will focus on advanced deep learning concepts such as generative\nmodels and time series prediction, with possible applications in the context of\ncomputer graphics or vision. After taking this course the students have gained\nknowledge about the underlying concepts for deep learning algorithms. They are\nfamiliar with topics such as auto-encoders, adversarial training, recurrent\nneural networks, and specialized loss functions.\nIn addition they know about the physical principles of elastic and plastic\nmaterials, with an emphasis on fluids: conservation of mass and momentum,\ndivergence free motion, and vorticity. Students can explain common discrete and\ncontinuous representations of the phenomena, such as phase functions, level-sets and Cartesian or tetrahedral meshes.\nThe core component of this lecture are numerical algorithms to work with\npartial differential equations. Students can memorize the steps of the\nalgorithms and are able to apply the learned techniques such as computing loss\nfunction derivatives, finite-difference discretizations, explicit and implicit\nintegration, in new contexts. They are able to construct working training\nalgorithms, by choosing suitable activation and loss functions, and can choose\nthe right network architecture for different regression / generation tasks.\nAdditionally, students are able to evaluate learning and simulation algorithms\nin terms of accuracy and computational complexity. Given a set of specific\nrequirements of a problem they can construct a solver based on the different\ncomponents discussed in the lecture.\nIn the homework assignments they have acquired practical experience\nimplementing central components of these solvers in a high-level programming\nlanguage, and they have gained experience working with software APIs\nimplementing higher level functionality.",
        "inhalt": "Navier-Stokes equations and physics of fluids, finite difference discretizations, advection schemes and their stability properties, Poisson problems, numerical iterative solvers for systems of linear equations, surface representations, and boundary conditions; Physics of elastic materials, stress-strain relationships, finite-element modeling, types of basis functions, tetrahedral meshing, plasticity and fracture.",
        "voraussetzungen": "MA0902 Analysis für Informatiker\nMA0901 Lineare Algebra für Informatiker\nIN0037 Physikalische Grundlagen für Computerspiele\nIN2346 Introduction to Deep Learning",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3784022&pOrgNr=1",
        "name": "Advanced Games-Specific Practical Course (Games Lab)",
        "kennung": "CIT4210000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students are able to:\n• apply and combine techniques and models of real-time computer graphics, game physics, and software engineering in teams for implementation and testing of a game as a team effort\n• understand and apply specific techniques and models of game design and game testing that go beyond general software engineering principles\n• analyze, compare, evaluate and apply existing technological building blocks (e.g. game engines, specialized software for game physics, client-server architectures and corresponding implementations, HCI hardware) for game development\n• analyze, evaluate, and apply techniques, algorithms, and models from games-related modules in their lines of specialization (e.g. VR- or AR-techniques from “Interaction and Communication”, business analytics and mechanism design techniques from “Game Theory and Algorithmic Economics”, deep-learning-based computer vision techniques from “Visual Computing” or advanced deep learning for game physics techniques from “Computer Graphics and Animation”)\n• analyze, and evaluate ethical aspects of their game designs and game mechanics.",
        "inhalt": "• Designing a game in a team\n• Prototyping a game in a team\n• Implementing a game in a team\n• Playtesting and evaluation of a game\n• Ethics of Games",
        "voraussetzungen": "Bachelor Informatics: Games Engineering, especially\n• IN0038: Realtime Computer Graphics\n• IN0039: Realtime Computer Graphics Lab Course\n• IN0006: Introduction to Software Engineering\n• IN0037: Game Physics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3471254&pOrgNr=1",
        "name": "Advanced Machine Learning: Deep Generative Models",
        "kennung": "CIT4230003",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students will be able to understand the theoretical foundations of advanced machine learning principles. They will be able to identify the core building blocks of generative models such as normalizing flows, GANs, or diffusion models. Moreover, they will be able to apply and implement these learning algorithms in modern programming languages. Furthermore, the students will be able to evaluate and compare the learned methods regarding their qualitative properties.",
        "inhalt": "The module covers advanced machine learning principles, specifically discussing the field of deep generative models. The topics include:\n\n1. Normalizing Flows\n• Forward and Reverse Parametrization\n• Jacobian Determinant Computation\n2. Variational Inference\n• Latent variable models\n• ELBO\n3. Variational Autoencoders\n• Encoder-Decoder\n• Amortized Inference\n4. Generative Adversarial Networks (GANs)\n• Likelihood-free inference\n5. Generative Diffusion Models\n• Score function matching\n• Forward (diffusion) and reverse (denoising) algorithms",
        "voraussetzungen": "Machine Learning, IN2064",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3391371&pOrgNr=1",
        "name": "Advanced Natural Language Processing",
        "kennung": "CIT4230002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students are able to:\n• understand state of the art deep learning methods presented in scientific publications and are able to explain what motivates and justifies these approaches compared to previous state of the art.\n• apply and combine the building blocks of the presented approaches to /into solutions of problems in other fields of modern NLP that were not explicitly discussed in one of the topical blocks.\n• on the basis of discussed approaches, able to develop and implement their own deep learning architectures or architecture variants for NLP research (e.g. thesis topics) and NLP applications (in a professional environment).\n• analyze, compare and evaluate own and foreign deep architectures for specific NLP problems and applications. Especially, in terms of analysis, students are able to identify elements that are true SOTA advancements (compared to mere “fine-tuning” successes) which have the potential to exceed the scope of nice applications. Here, evaluation is not restricted to algorithmic measures of performance but encompasses evaluating pragmatic choices in view of human NLP applications (ethics, explainability etc.)",
        "inhalt": "This module covers selected advanced topics in modern NLP:\nBlock 1: Modern Transformer-based architectures & XAI for NLP\n• Evolution of modern Transformer-based architectures (BERT, GPT-n etc.)\n• Correlation between model size, training data, training mode, and performance.\n• Zero-shot, few-shot learning, fine-tuning.\n• Pre-training, meta-learning, in-context learning, verbalization.\n• Adapters.\n• XAI methods for NLP\nBlock 2: NMT for low resource languages\n• Seq2Seq evaluation and metrics\n• Synthetic data generation\n• Integration of monolingual LMs into NMT systems\n• Transfer-learning between languages\n• Multilingual model trade-offs\nBlock 3: Argument Mining and Ethical Aspects of modern NLP\n• Argument Mining\n• Bias in Data, Debiasing efforts and their problems\n• Toxicity and Hate Speech Detection\n• Fairness in NLP system outcomes\nBlock 4: Conversational AI and the link to symbolic AI\n• Open-domain chatbots and task-oriented dialogue systems\n• end-to-end dialogue system\n• Pipeline-elements for dialogue systems\nBlock 5: Quantum NLP\n• Basic approaches to Quantum Natural Language Processing\n• The potential of multi-purpose expression\nBlock 6: Auto-Summarization\n• Abstractive, extractive, contrastive, temporal summarization concepts\n• Summarization metrics, comparison, and deficiencies\n• Extractive Summarization algorithm deep-dive.\n• Abstractive summarization approaches (classical, neural, hybrid, contrastive learning)\nBlock 7: (Open Block): AI models combining natural language and images",
        "voraussetzungen": "• IN2346: Introduction to Deep Learning (necessary)\n• IN2361: Natural Language Processing (recommended)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454189&pOrgNr=1",
        "name": "Advanced Programming",
        "kennung": "IN1503",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, participants are able to develop software for scientific computing in C++, balancing performance and maintainability.\n\nMore specifically, they are able to:\n- choose fitting built-in types and decompose problems into functions;\n- list prominent software failures (frequently with crucial consequences) in Computational Science related to data types and their usage and are able to explain the sequence of events as well as their causalities;\n- explain the basic memory layout and apply appropriate C++ techniques for dynamic resource management;\n- solve common programming problems using object-oriented techniques;\n- apply generic programming techniques to reduce code duplication;\n- apply common performance evaluation, modeling, and optimization techniques and can analyze and compare different implementations in respect to their performance;\n- make use of given parts of the C++ documentation to choose and apply fitting STL algorithms in their programs; and\n- use development tools essential for working with complex scientific software projects.",
        "inhalt": "- Von Neumann architecture\n- Variables and built-in data types in C++, floating point representation, arrays and vectors, ranged-for loops\n- Prominent Software Failures in Computational Science\n- Functions: arguments, call-by-value/-reference, overloading, recursion, anonymous functions (lambda)\n- Resource management: references and pointers, managing dynamically allocated memory, memory layout (stack and free store), avoiding memory leaks, iterators\n- Build time: preprocessor, compiler, and linker, compile-time calculation (constexpr), header files, modules, build systems\n- Object oriented programming: classes, visibility, essential operators (constructor, destructor, assignment, copy, move), operator overloading, classes managing dynamic memory, member initialization, inheritance, virtual functions, runtime polymorphism\n- Generic programming: function templates, class templates, non-type template parameters, template specialization, constraints and concepts\n- The C++ Standard Library: containers, iterator types, STL algorithms, ranges, execution policies.\n- Performance modelling: cache concepts, pipelining, out-of-order execution, roofline model\n- Code optimization: profiling, compiler optimizations, function inlining, avoiding expensive computations, memory alignment, loop transformations\n- Vectorization: levels of parallelization, superscalar architectures, SIMD instructions and registers, auto-vectorization, structure of arrays, array of structures, intrinsics\n- Legacy and future of C++\n- Contributing to a free software project",
        "voraussetzungen": "Competence in any programming language. Familiarity with statically-typed languages (e.g. C++, C, Fortran, Java) and/or object-oriented languages (e.g. C++, Java, Python) is helpful.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1060130&pOrgNr=1",
        "name": "Advanced Topics of Software Engineering",
        "kennung": "IN2309",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul verstehen die Studierenden die zentralen Aufgaben und Methoden des Requirements Engineering. Sie kennen alle relevanten Qualitätsattribute für Software. Sie wissen, wie entsprechende Anforderungen erhoben, spezifiziert und verwaltet werden; wie sie sich in Softwarearchitekturen wiederfinden und umgekehrt, welchen Einfluss eine Architektur auf diese Attribute hat; wie Anforderungen, Architekturen und Code bzgl. dieser Attribute bewertet werden können; welche Zielkonflikte zwischen Qualitätsattributen bestehen und welchen Einfluss der Entwicklungsprozess hat. Sie können dieses Wissen in der Praxis in kleineren Projekten anwenden.",
        "inhalt": "Für die erfolgreiche Entwicklung großer Software-Systeme ist es erforderlich, dass sowohl die verschiedenen Aktivitäten im Prozess als auch die entstehenden Artefakte sehr eng miteinander verknüpft und aufeinander abgestimmt sind. Zentrale Erfolgsfaktoren sind:\n- Iterative Ermittlung und Umsetzung der Anforderungen\n- Architekturentwurf als Rückgrat der Entwicklung\n- Beherrschung der Qualität in ihren unterschiedlichen Ausprägungen\nDie Vorlesung Advanced Software Engineering legt dar, wie die Themengebiete Requirements Engineering, Spezifikation, Architektur, Feinentwurf, Codierung, Softwarequalität und Qualitätssicherung miteinander verwoben sind. Es wird diskutiert, wie insbesondere nichtfunktionale Anforderungen in der Architektur reflektiert sind; welche Zielkonflikte mit funktionalen Anforderungen und externen sowie internen Qualitätsattributen bestehen; und wie diese Anforderungen formuliert und durch Tests überprüft werden können.\nIm Einzelnen werden betrachtet:\n1.Requirements Engineering: Techniken für die Erhebung, Analyse, Priorisierung, Spezifikation, Validierung funktionaler und nicht-funktionaler Anforderungen; Anti-Requirements.\n2.Software-Architektur: Prinzipen, Views&Styles, Architekturdokumentation, Muster, Frameworks, Referenzarchitekturen, Produktlinien, Analysen der Architekturqualität und von Zielkonflikten\n3.Softwarequalität: Interne und externe Qualitätsattribute, u.a. Wartbarkeit, Testbarkeit, Verständlichkeit sowie Performanz, Sicherheit, Verfügbarkeit; Software-Metriken\n4.Qualitätssicherung: Bewertung, Priorisierung, Konfliktauflösung und Reviews von Anforderungen; Messverfahren für Architekturqualität bzgl. externer und interner Qualitätsattribute; Test- und Reviewverfahren für funktionale und nicht-funktionale Anforderungen im Code; Fehlermodelle\n5.Einfluss des Entwicklungsprozesses",
        "voraussetzungen": "Einführung in die Softwaretechnik (IN0006)",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4390207&pOrgNr=1",
        "name": "AI Governance",
        "kennung": "CIT323002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After attending this class, students can understand, assess, and contextualize different facets of AI governance based on the EU AI Act and its operationalization at the level of university education.",
        "inhalt": "As AI technologies increasingly permeate various sectors, it is crucial for future developers to understand the ethical, legal, and social dimensions of their work. The lecture series “AI Governance” will invite experts to talk about topics ranging from responsible AI over participatory AI to the European AI Act. The structure of the lecture series is provided by the EU AI Act's obligations to high-risk AI system providers, including data and data governance, transparency, human oversight, or risk management. The lecture series will provide students with both theoretical and practical approaches to AI governance based on the European legal framework.\nAll lectures will link to \"Responsible AI\" and “Participatory AI”, covering principles such as fairness, accountability, and transparency, and exploring the role of diverse stakeholders in the AI development process. Thereby, methods for engaging communities and ensuring that AI solutions reflect a wide range of perspectives and needs will be highlighted. With a focus on regulatory frameworks, particularly the EU AI Act, students will learn about risk assessment, compliance, and the responsibilities of AI practitioners in adhering to the AI Act.\n\nThe lecture series will include sessions on:\n- The context of the EU AI Act\n- The EU AI Act as legal framework\n- Risk Management (Art 9)\n- Risk Management (e.g., NIST)\n- Data and Data Governance (Art 10)\n- Record-Keeping (Art 12)\n- Transparency (Art 13)\n- Human Oversight (Art 14)\n- Accuracy and Robustness (Art 15)\n- Cybersecurity (Art 15)\n- Post-Market Monitoring (Art 72)\n- Quality Management System (Art 17)\n- AI literacy (Art 4)\n- Fundamental Rights Impact Assessment (Art 27)\n- AI Audits",
        "voraussetzungen": "Basic understanding of the fundamentals of artificial intelligence",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4279940&pOrgNr=1",
        "name": "AI Testing",
        "kennung": "CIT423002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The course is aimed at master students interested in the quality assurance and quality control processes for AI-based software systems. Participants would gain a deeper understanding of the unique challenges and best practices for testing these types of applications.\nThe students learn how to critically analyze a given software system. They acquire the analytical and interdisciplinary skills to adapt the testing concepts from traditional software to the new AI-based systems. The course will introduce them to the theory, exercise, and scientific research for all the topics presented in the course. They mature the necessary writing skills to present the main aspects of their topic in a written form.",
        "inhalt": "The course focuses on the challenges and advancements in testing software applications in which the decision making and logic is heavily based on artificial intelligence (AI-based systems). AI-based systems are becoming increasingly prevalent in various industries, such as automotive, healthcare, and e-commerce. These applications must be thoroughly tested to ensure that they can operate efficiently and accurately.\n\nAmong the suggested topics, the course will focus on:\n\n- Strategies for testing AI-enabled such as autonomous driving systems;\n- Tools and techniques for managing and manipulating large volumes of data during testing;\n- Best practices for designing test cases and test data for data-intensive applications;\n- Performance metrics for AI-based systems;\n- Testing non-functional properties (e.g., bias, fairness).",
        "voraussetzungen": "- Basics of CS\n- Basics of software engineering and software testing\n- Basics of artificial intelligence\n\nIN0006 Introduction to Software Engineering\nIN2084 Software testing: Processes and Methods",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1333663&pOrgNr=1",
        "name": "Algorithmen für Uncertainty Quantification",
        "kennung": "IN2345",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, participants can describe the basic principles and goals of UQ. They are able to classify, explain, and analyze central algorithms for forward UQ problems. The participants are able to elaborate on measures of complexity for UQ problems as well as to explain the underlying potential of parallel computations.\nThey are familiar with the curse of dimensions of high-dimensional stochastic parameter spaces and can explain why/how certain schemes can overcome this issue. Participants are able to list and differentiate current state-of-the-art software developments in UQ as well as to implement simple scenarios using the python package chaospy.",
        "inhalt": "Computer simulations of different phenomena heavily rely on input data which – in many cases – are not known as exact values but face random effects.\nUncertainty Quantification (UQ) is a cutting-edge research field that supports decision making under such uncertainties. Typical questions tackled in this course are \"How to incorporate measurement errors into simulations and get a meaningful output?\", \"What can I do to be 98.5% sure that my robot trajectory will be safe?\", \"Which algorithms are available?\", \"What is a good measure of complexity of UQ algorithms?\", \"What is the potential for parallelization and High-Performance Computing of the different algorithms?\", or \"Is there software available for UQ or do I need to program everything from scratch?\"\nIn particular, this course will cover\n- Brief repetition of basic probability theory and statistics\n- 1st class of algorithms: sampling methods for UQ (Monte Carlo): the brute-force approach\n- More advanced sampling methods: Quasi Monte Carlo & Co.\n- Relevant properties of interpolation & quadrature\n- 2nd class of algorithms: stochastic collocation via the pseudo-spectral approach: Is it possible to obtain accurate results with (much) less costs?\n- 3rd class of algorithms: stochastic Galerkin: Are we willing to (heavily) modify your software to gain accuracy?\n- Dimensionality reduction in UQ: apply hierarchical methodologies such as tree-based sparse grid quadrature. How does the connection to Machine Learning and classification problems look like?\n- Which parameters actually do matter? => sensitivity analysis (Sobol’ indices etc.)\n- What if there is an infinite amount of parameters? => approximation methods for random fields (KL expansion)\n- Software for UQ: What packages are available? What are the advantages and downsides of major players (such as chaospy, UQTk, and DAKOTA)\n- Outlook: inverse UQ problems, data aspects, real-world measurements",
        "voraussetzungen": "Basics of statistics and/or probability theory such as \"Discrete Probability Theory\" (IN0018); A basic understanding of numerical simulation is advantageous as covered for example in \"Modelling and Simulation\" (IN2010), \"Numerical Programming\" (IN0019), or \"Scientific Computing 1\" (IN2005).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1477688&pOrgNr=1",
        "name": "Algorithmen und Datenstrukturen",
        "kennung": "IN8009",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Während der Teilnahme an dem Modul werden die Studierenden mit der Arbeitsweise der Informatik vertraut gemacht. Nach der erfolgreichen Teilnahme an dem Modul sind die Studierenden in der Lage, reale Aufgabenstellungen in Form abstrakter Problemstellungen zu formulieren sowie Algorithmen für die Problemlösung auszuwählen, gegebenenfalls auch zu entwerfen, zu optimieren, zu bewerten und zu implementieren. Darüber hinaus bauen die Studierenden Verständnis für elementare Begriffe und Konzepte der Informatik auf und lernen diese zu handhaben.",
        "inhalt": "Mögliche Inhalte:\nEntwurf und Analyse einfacher Algorithmen, Komplexitätsmaße.\nAbstrakte Datenstrukturen, Graphen, Bäume, Listen, Schlangen, Stapel.\nSortieren, Suchen, Algorithmen auf Graphen, numerische Algorithmen, optional: Datenkompression.",
        "voraussetzungen": "Mathematische Grundkenntnisse aus der Schule\nKeine Voraussetzungen innerhalb des Studiums",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=629351&pOrgNr=1",
        "name": "Algorithmic Game Theory",
        "kennung": "IN2239",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden in der Lage\n- die Grundlagen algorithmischer Spieltheorie zu verstehen,\n- unterschiedliche Darstellungen von n-Spieler Spielen zu analysieren,\n- verschiedene Lösungskonzepte zu berechnen und zu vergleichen,\n- diese Lösungskonzepte komplexitätstheoretisch zu untersuchen und\n- einfache Algorithmen zur Bestimmung von Lösungen spieltheoretischer Probleme zu analysieren und zu skizzieren.",
        "inhalt": "Algorithmische Spieltheorie ist ein junges Forschungsgebiet in der Schnittmenge zwischen theoretischer Informatik, Mathematik und den Wirtschaftswissenschaften, das sich mit optimalem strategischen Verhalten in interaktiven Situationen beschäftigt. Besondere Aufmerksamkeit wird in dieser Vorlesung den algorithmischen Aspekten spieltheoretischer Lösungskonzepte wie beispielsweise Nash Gleichgewichten und der Gestaltung von ökonomischen Mechanismen gewidmet.",
        "voraussetzungen": "Modul IN0015 Diskrete Strukturen (oder äquivalent)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456346&pOrgNr=1",
        "name": "Algorithms for Scientific Computing",
        "kennung": "IN2001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to identify, explain, and implement selected hierarchical methods that are of particular interest to the informatical aspects of scientific computing because of their algorithmic structure and their significance for practical applications.\nParticipants can analyse and judge the efficiency of such methods by deriving statements about the required computational cost and - where applicable - the achieved accuracy and by comparing them with corresponding results for other methods. \nThe students are able to transfer the methodology to new methods for related problems.",
        "inhalt": "Discrete Fourier transform and related transforms\n- FFT: derivation and implementation\n- Fast discrete cosine/sine transforms: derivation and implementation via FFT\n- Applications: multi-dimensional data (images, video, audio) and FFT-based solvers for linear systems of equations\n\nSpace-filling curves\n- Peano- and Hilbert curves: representation by algebraic and grammatical means\n- Applications: organisation of multi-dimensional data; parallel, adaptive, and cache oblivious algorithms\n\nHierarchical numerical methods\n- Hierarchical bases for one- and multi-dimensional problems\n- Computational cost versus accuracy; Sparse Grids\n- Adaptive representation of continuous data\n- Applications: numerical quadrature, differential equations\n- Outlook: multigrid methods, wavelets",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456348&pOrgNr=1",
        "name": "Algorithms for Scientific Computing II",
        "kennung": "IN2002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to adapt numerical methods to ambitious applications from the practice of scientific computing. They understand and are familiar with advanced problems and methods in scientific computing. These advanced methods comprise in particular hierarchical aspects that students are able to understand, explain and apply to more complex applications.",
        "inhalt": "Courses of this module exist in three different specifications:\n- Sparse Matrices (Huckle):\n++ Data structures, Sparsity Graphs\n++ Sparse BLAS\n++ Reordering\n++ Direct solution of linear equations and algebraic pivoting\n++ Iterative solution of linear equations and preconditioning.\n- Scientific Computing (Mendl):\n++ Introduction to quantum mechanics\n++ Bell inequalities\n++ Quantum circuits and algorithms\n++ Quantum error correction\n++ Mapping of NP problems to quantum ground states\n++ Numerical methods for quantum systems\n- Scientific Computing (Bungartz):\n++ Molecular dynamics simulation\n++ Sparse grid methods\n++ Algebraic multigrid methods",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2930921&pOrgNr=1",
        "name": "Artificial Intelligence in Medicine",
        "kennung": "IN2403",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students should be able to recall the important topics in the area of artificial intelligence in medicine, understand the relations between the topics, apply their knowledge to own deep learning projects, analyse and evaluate social and ethical implications and develop own strategies to apply the learned concepts to their own work.",
        "inhalt": "• Introduction: Clinical motivation, clinical data, clinical workflows\n• ML for medical imaging\n• Data curation for medical applications\n• Domain shift in medical applications: Adversarial learning and Transfer learning\n• Self-supervised learning and unsupervised learning\n• Learning from sparse and noisy data\n• ML for unstructured and multi-modal clinical data\n• NLP for clinical data\n• Bayesian approaches to deep learning and uncertainty\n• Interpretability and explainability\n• Federated learning, privacy-preserving ML and ethics\n• ML for time-to-event modeling, survival models\n• ML for differential diagnosis and stratification\n• Clinical applications in pathology/radiology/omics",
        "voraussetzungen": "Introduction to Deep Learning (IN2346)\nComputer Aided Medical Procedures I (IN2021)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3126243&pOrgNr=1",
        "name": "Artificial Intelligence in Medicine II",
        "kennung": "IN2408",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students should be able to recall advanced topics in the area of artificial intelligence in medicine, understand the relations between the topics, apply their knowledge to own AI projects, analyse and evaluate social and ethical implications and develop own strategies to apply the learned concepts to their own work.",
        "inhalt": "Introduction and examples of advanced prediction and classification problems in medicine; ML for prognostic and diagnostic tasks; risk scores, time-to-event modeling, survival models, differential diagnosis & population stratification, geometric deep learning: point clouds & meshes, mesh-based segmentation, shape analysis, trustworthy AI in medicine: bias and fairness, generalizability, AI for affordable healthcare, clinical deployment and evaluation, data harmonization, causal inference, transformers, reinforcement learning in medicine, ML for neuro: structural neuroimaging, functional neuroimaging, diffusion imaging, ML for CVD: EEG analysis",
        "voraussetzungen": "IN2403 Artificial Intelligence in Medicine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=487476&pOrgNr=1",
        "name": "Auction Theory and Market Design",
        "kennung": "IN2211",
        "organisation": "Department Computer Science",
        "anmerkung": "seit WS15/16 5 ECTS und 4 SWS",
        "lernergebnisse": "Nach der Teilnahme an dem Modul verstehen die Studierenden die funktionalen Eigenschaften wie z.B. offene und geschlossene Formate und Zahlungsregel verschiedenster Auktionsformate. Sie können spieltheoretische Modelle zur Interpretation, der aus den genannten Eigenheiten entstehenden, strategischen Interaktion sowohl zwischen Bietern als auch zwischen Bietern und dem Auktionator kritisieren. Darauf aufbauend sind sie insbesondere dazu befähigt grundlegende Problematiken, wie z.B. Anreiz- und Komplexitätsprobleme (Bestimmung des Gewinners unter anderem), beim Entwurf kombinatorischer Auktionen zu erklären. Auch können die Studierenden die Wahl verschiedener Auktionsformate basierend auf gewünschten Eigenschaften der Marktallokation, wie z.B. Effizienz oder Ertragsmaximierung, verteidigen.",
        "inhalt": "- Spieltheoretische Grundkonzepte (dominante Strategie, Nash Gleichgewicht unter vollständiger und unvollständiger Information etc.)\n- Mechanismus-Design-Theorie\n- Grundlagen der Auktionstheorie (geschlossene und offene Auktionen, Revenue Equivalence, Optimal Auctions etc. )\n- Kombinatorische Auktionen\n- Assignment markets\n- Herausforderungen bei der Entwicklung kombinatorischer Auktionen (iterative kombinatorische Auktionen und combinatorial clock auctions)\n- Anwendungen kombinatorischer Auktionen (Frequenzauktionen, Beschaffung)\n- Approximations Mechanismen\n- Matching Märkte",
        "voraussetzungen": "IN0022 Planen und Entscheiden in betrieblichen Informationssystemen oder IN0024 Operations Research, Lineare Optimierung",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456372&pOrgNr=1",
        "name": "Augmented Reality",
        "kennung": "IN2018",
        "organisation": "Department Computer Science",
        "anmerkung": "Ab WS13/14 6 Credits",
        "lernergebnisse": "At the end of the module students are able to describe and analyze the underlying mathematical and programming aspects (tracking and rendering) of AR systems, and they can extend them towards own, further-reaching solutions. They can also evaluate existing input and output devices regarding their suitability for special application scenarios.",
        "inhalt": "Foundations of Augmented Reality\n- Geometric transformations (homogeneous matrices, projective geometry, scene graph)\n- Three-dimensional information presentation (OpenGL, 3D APIs)\n- Head-mounted displays and other display devices\n- Physical foundations of several tracking devices\n- Mathematical foundations of optical tracking, sensor fusion and device calibration\n- Concepts: augmented reality in comparison with mixed reality, ubiquitous computing, etc.",
        "voraussetzungen": "IN0001 Introduction to Informatics, IN0006 Introduction to Software Engineering, IN0007 Fundamentals of Algorithms and Data Structures, MA0901 Linear Algebra for Informatics, Basic mathematical and programming skills.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1357567&pOrgNr=1",
        "name": "Auktionstheorie und Marktdesign (Doktorat)",
        "kennung": "IN2350",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul verstehen die Studierenden die funktionalen Eigenschaften wie z.B. offene und geschlossene Formate und Zahlungsregel verschiedenster Auktionsformate. Sie können spieltheoretische Modelle zur Interpretation, der aus den genannten Eigenheiten entstehenden, strategischen Interaktion sowohl zwischen Bietern als auch zwischen Bietern und dem Auktionator kritisieren. Darauf aufbauend sind sie insbesondere dazu befähigt grundlegende Problematiken, wie z.B. Anreiz- und Komplexitätsprobleme (Bestimmung des Gewinners unter anderem), beim Entwurf kombinatorischer Auktionen zu erklären. Auch können die Studierenden die Wahl verschiedener Auktionsformate basierend auf gewünschten Eigenschaften der Marktallokation, wie z.B. Effizienz oder Ertragsmaximierung, verteidigen.",
        "inhalt": "- Spieltheoretische Grundkonzepte (dominante Strategie, Nash Gleichgewicht unter vollständiger und unvollständiger Information etc.)\n- Mechanismus-Design-Theorie\n- Grundlagen der Auktionstheorie (geschlossene und offene Auktionen, Revenue Equivalence, Optimal Auctions etc. )\n- Kombinatorische Auktionen\n- Assignment markets\n- Herausforderungen bei der Entwicklung kombinatorischer Auktionen (iterative kombinatorische Auktionen und combinatorial clock auctions)\n- Anwendungen kombinatorischer Auktionen (Frequenzauktionen, Beschaffung)\n- Approximations Mechanismen\n- Matching Märkte",
        "voraussetzungen": "IN0022 Planen und Entscheiden in betrieblichen Informationssystemen, Operations Research/Lineare Optimierung",
        "modulniveau": "",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=480320&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Algorithmen und Wissenschaftliches Rechnen",
        "kennung": "IN3400",
        "organisation": "Department Computer Science",
        "anmerkung": "5 ECTS ab SS18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Algorithmen und Wissenschaftlichem Rechnen und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Algorithmen und Wissenschaftliches Rechnen an. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet Algorithmen und Wissenschaftliches Rechnen (AWR) wählen.",
        "voraussetzungen": "Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=480428&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Computergrafik und -vision",
        "kennung": "IN3200",
        "organisation": "Department Computer Science",
        "anmerkung": "5 ECTS ab SS 18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Computergrafik und -Vision und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Bereich Computergrafik und Bildverstehen\nan. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet\nComputergrafik und Bildverstehen (CGV) wählen.",
        "voraussetzungen": "Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456400&pOrgNr=1",
        "name": "Automata and Formal Languages",
        "kennung": "IN2041",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "On successful completion of the module, students will be able to\n- use finite automata as a data structure for representation of finite and infinite sets;\n- understand and determine the computational complexity of different operations for different classes of automata;\n- move to and fro logical and automata-theoretic descriptions;\n- apply automata to problems in pattern matching and formal verification.",
        "inhalt": "The module is divided into two parts. The first part deepens and expands the study of finite automata initiated in IN0011 (Introduction to theoretical computer science), while the second introduces automata on infinite words. In both parts automata are seen as a data structure for the manipulation of (possibly infinite) sets and relations. The module shows how to implement Boolean operations and joins for different automata classes (nondeterministic and deterministic automata, binary decision diagrams, Büchi automata). It also introduces the connection between automata and logic. The algorithms are applied to a variety of problems, ranging from pattern-matching to program verification and solution of Diophantine equations.",
        "voraussetzungen": "IN0011 Introduction to Theory of Computation",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1629492&pOrgNr=1",
        "name": "Automated Programming",
        "kennung": "IN2367",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After participation of this module the participants have foundational knowledge of the current state-of-the-art of the dimensions of automated program synthesis at the intersection of software engineering, artificial intelligence, and machine learning, including various specification approaches of functional, reactive, and probabilistic programs as well as specialized techniques for searching for, possibly optimized or robust, programs satisfying the given high-level specification.\n\nThe automated programming techniques covered in class are at the intersection of the software engineering, artificial intelligence, and machine learning.\n\nThe participants will also gain an overview of the capabilities and limitations or current approaches to program synthesis as a prerequisite for further scientific work (e.g. bachelor thesis, master thesis) or for applying program synthesis techniques in specialized applications.",
        "inhalt": "Automated Programming\n1. Deductive Program Synthesis\n2. Searching for programs\n3. Programs from proofs\n4. Transformational program synthesis\n5. Synthesis of probabilistic programs\n6. Synthesis of reactive programs\n7. Programming by example\n8. Inductive logic programming\n9. Deep learning program synthesis\n10. Application I: synthesis of data analysis programs\n11. Application II: synthesis of robotic programs\n12. Application III: synthesis of planetary software\n13. Application IV: programmer’s assistence",
        "voraussetzungen": "Software Engineering IN2309 and/or IN0006, Foundations of Program and System Development IN2078, Logic IN2049, Semantics IN2055, Discrete Probability Theory IN0018",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456408&pOrgNr=1",
        "name": "Automaten und formale Sprachen II",
        "kennung": "IN2042",
        "organisation": "Department Computer Science",
        "anmerkung": "ab SS13 4 SWS und 5 Credits",
        "lernergebnisse": "Nach erfolgreicher Teilnahme ist der Studierende dazu befähigt:\n- zu erklären, warum Automaten, über die klassichen Anwendungen hinaus, interessant sind und welche Anwendung diese haben,\n- das zu einer gegebenen Sprache passende Automatenmodelle auszuwählen und den entsprechenden Automaten zu berechnen,\n- verschiedene Operationen auf Automaten durchzuführen und ihrer Laufzeitkomplexität abzuschätzen,\n- automatentheoretische Techniken auf Problem aus Bereichen wie Textanalyse, Programmverifikation oder -analyse anzuwenden.",
        "inhalt": "The course deals with advanced topics in automata theory. Possible contents are:\n- Tree automata: tree languages, regular expressions, logics, tree transducers\n- Weighted automata: finite and pushdown weighted automata, logics\n- Automata for infinite-state verification: pushdown systems, well-structured systems",
        "voraussetzungen": "IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN0011 Einführung in die Theoretische Informatik, IN2052 Automata and Formal Languages",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261483&pOrgNr=1",
        "name": "Automotive Software - Methoden und Technologien",
        "kennung": "IN2114",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, einfache eingebettete Systeme in der automotive Domäne zu entwickeln. Sie können die verschiedenen Anwendungsgebiete von Software im Automobil differenzieren und verstehen die Unterschiede sowie die Konsequenzen für die Entwicklung. Sie kennen zentrale Bestandteile einschlägiger Entwicklungsprozesse sowie typische Werkzeuge und können diese beurteilen.",
        "inhalt": "Im Fahrzeug nimmt die strategische Bedeutung von Software rapide zu. In der Vorlesung werden drei unterschiedliche Softwaredomänen im Fahrzeug vorgestellt: Infotainment, Karosserie/Komfort, Fahrerassistenz und Sicherheits-Elektronik. Zu jeder Domäne werden in einer Vorlesung die Anforderungen und Besonderheiten, sowie die theoretischen Grundlagen vermittelt.\nNach den drei Softwaredomänen werden drei Querschnittsthemen zentral adressiert: Entwicklungsprozess, Architektur und Qualitätssicherung\n- Einleitung und Überblick \"Software und Software Engineering im Automotive Kontext\"\n- \"Embedded Systems\" Anwendung Karosserie und Komfort Elektronik\n- \"Echtzeit und Regelungstechnik\" Anwendung in Sicherheitselektronik und Fahrwerksregelung\n- \"Embedded Java\" Anwendung in Infotainement\n- \"Sensorik / Aktuatorik\" Anwendung Fahrerassistenzsysteme\n- \"Entwicklungsprozess I\" Anforderungen, logische Architektur\n- \"Entwicklungsprozess II\" von der logischen Architektur zum integrierten System\n- Modellbasieierte Entwicklung: embedded Middleware\n- Tools und Ausführungsmodelle: ASCET, Rose RT, MATLAB\n- Test und Qualitätssicherung\n- Software im Produktlebenszyklus\n- Herausforderungen der Zukunft\n\nIn der Übung sind 3 spezielle Programmieraufgaben zu lösen.\n\nDie Vorlesung kann parallel mit IN2084 \"Prozesse und Methoden beim Testen von Software\" gehört werden.",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik,\nKenntnisse in Java und/oder C sind Voraussetzung für die Übung.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=480825&pOrgNr=1",
        "name": "Basic Mathematical Methods for Imaging and Visualization",
        "kennung": "IN2124",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die grundlegenden mathematischen Techniken und Methoden. Sie sind dann in der Lage, reale Aufgabenstellungen im Gebiet Imaging und Visualisierung zu formulieren sowie Methoden für die Problemlösung auszuwählen, zu optimieren und zu bewerten. Sie können diese Techniken und Methoden auch auf andere Ingenieurs-Disziplinen wie Künstliche Intelligenz, Machine Learning, Computergrafik, Robotik, etc. anwenden.",
        "inhalt": "Grundlegende, oft angewandte Techniken werden in der Vorlesung präsentiert und anhand von Anwendungen aus Image Processing und Computer Vision demonstriert. Dieselben mathematischen Methoden kommen aber auch in anderen Ingenieurs-Disziplinen wie Künstliche Intelligenz, Machine Learning, Computergrafik, Robotik etc. zum Einsatz.\n\nFolgende Inhalte werden beispielhaft behandelt:\n- Lineare Algebra\n++ Vektorräume und Basen\n++ Lineare Abbildungen und Matrizen\n++ Lineare Gleichungssysteme, Lösen von linearen Gleichungssystemen\n++ Methode der kleinsten Quadrate\n++ Eigenwertprobleme und Singulärwertzerlegung\n- Analysis\n++ Metrische Räume und Topologie\n++ Konvergenz, Kompaktheit\n++ Stetigkeit und Differenzierbarkeit im Mehrdimensionalen, Taylor-Entwicklung\n- Optimierung\n++ Existenz und Eindeutigkeit von Minimierern, Identifikation von Minimierern\n++ Gradientenabstieg, Conjugate Gradient\n++ Newton-Verfahren, Fixpunktiterationen\n- Wahrscheinlichkeitstheorie\n++ Wahrscheinlichkeitsräume, Zufallsvariablen\n++ Erwartungswert und bedingte Erwartung\n++ Schätzer, Expectation Maximization Methode\n\nIn den Übungen gibt es die Möglichkeit für die Teilnehmer bei der Implementation oder Anwendung der Methoden zur Lösung von realen Problemstellungen ein tieferes Verständnis zu erlangen und praktische Erfahrung zu sammeln.",
        "voraussetzungen": "IN0015 Diskrete Strukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie, IN0019 Numerisches Programmieren, MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=708272&pOrgNr=1",
        "name": "Betriebssysteme und hardwarenahe Programmierung für Games",
        "kennung": "IN0034",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul sind die Studierenden in der Lage die Funktionsweise von modernen Rechnerarchitekturen und deren Verwaltung durch das Betriebssystem zu verstehen, Verfahren und Strategien zur Verwaltung von Betriebsmitteln anzuwenden sowie neue Entwicklungen in beiden Bereichen (Rechnerarchitekturen und Betriebssysteme), insbesondere auch im Hinblick auf den Einsatz im Games-Bereich, zu bewerten. Zudem haben sie eine Programmiersprache zur hardwarenahen Programmierung (in der Regel die Sprache C) erlernt, so dass sie bestehende Systeme verstehen und mit der sie Lösungen für Teilprobleme selber entwickeln können.",
        "inhalt": "In der Vorlesung werden die angegebenen Inhalte vorgestellt und erläutert. In den begleitenden Übungen werden neben dem Verständnis der Inhalte die Programmierfähigkeiten erlernt und anhand von Aufgaben eingeübt:\n- Schichtenmodell und Überblick\n++ Von Neumanns Architekturkonzept: Speicher, Rechenwerk, Leitwerk, Ein-/Ausgabe\n++ Hardware-Schichten: Phys. Schicht, Bauelementeschicht, Gatterschicht, Mikroarchitektur\n++ Software-Schichten: Betriebssystem (Kernel, Treiber, ...), Anwendungen\n- Hardware--Software-Schnittstelle\n++ Codierung von Daten (Ganzzahlen, Gleitkommazahlen, Zeichenketten, Referenzen, zusammengesetzte Datentypen)\n++ Arithmetische und logische Operationen\n++ Speicherzugriff, Adressierung\n++ Kontrollflußoperationen\n++ Vektoroperationen (SIMD)\n++ Prozeduraufrufe, Stack, Heap\n++ Unterbrechungen und Ausnahmen\n- Mikroprozessoren\n++ Speicheranbindung, Caches\n++ Pipelining (Befehlszyklus, Konflikte, Gegenmaßnahmen)\n++ Mehrkern-Systeme (Zugriffskonflikte, Speicherkonsistenz)\n- Prozess- und Prozessorverwaltung\n++ Nebenläufigkeit\n++ Realisierung von Prozessen\n++ Scheduling und Dispating\n- Speicherverwaltung\n++ Virtueller Speicher\n- Prozesskommunikation\n++ IPC-Konzepte, Sockets\n- Ein-Ausgabe",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1, IN0006 Einführung in die Softwaretechnik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=768297&pOrgNr=1",
        "name": "BGCE Compact Course",
        "kennung": "IN2272",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to reproduce and discuss methods of the corresponding field of computational engineering treated in the course. The participants can analyse the approaches with respect to performance, usability, and limitations and are able to implement simple variants of the underlying algorithms.",
        "inhalt": "An invited, internationally renowned researcher presents - in a block-course format - an advanced topic from his/her area of specialisation in computational engineering.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=768294&pOrgNr=1",
        "name": "BGCE Conference Contribution",
        "kennung": "IN2269",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to design a scientific poster and present it at a national or international conference. They have experience in describing and explaining the content of the underlying scientific project work.",
        "inhalt": "Preparation of a contribution for a national or international conference followed by a corresponding participation.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=768296&pOrgNr=1",
        "name": "BGCE ENB Softskill Course",
        "kennung": "IN2271",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Depending on the concrete softskill course variant of this module, offered by the Elite Network of Bavaria (ENB) of the \"Bayerisches Staatsministerium fuer Wissenschaft, Forschung und Kunst\", the participants are able to remember, understand, and apply the corresponding topics (concerning teamwork and rhetoric, e.g.). The students realise contacts to other members of the ENB.",
        "inhalt": "Depending on the concrete ENB softskill course variant, topics such as teamwork, motivation, leadership, etc. will be treated. The course will typically take place in block format.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=768295&pOrgNr=1",
        "name": "BGCE Ferienakademie",
        "kennung": "IN2270",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to immerse into (complex) topics of computational engineering as well as to structure and create a corresponding presentation. The participants are able to follow and discuss the topics illustrated in the talks.",
        "inhalt": "A special topic in the area of engineering, natural sciences, informatics or an interdisciplinary field.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458552&pOrgNr=1",
        "name": "BGCE Honours Project",
        "kennung": "IN2191",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to run or contribute, either individually or in small groups, to a larger project in the field of Computational Science and Engineering. They are experienced in the special software engineering requirements of scientific computing. The participants can autonomously study new scientific problems and methods, are able to select suitable methods, and implement them in a software project. They are familiar with basic project management techniques and apply them in scientific computing projects.",
        "inhalt": "The lecturers offer suitable topics from computational science and engineering.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457052&pOrgNr=1",
        "name": "BGCE Leading Yourself and Others",
        "kennung": "IN2142",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After successful participation in this module, participants are able to apply their improved skills to leadership problems such as conflict handling and group dynamics, especially based on experience by means of feedback and reflexion. They have extended their strengths and reduced their shortcomings based on a realistic self-assessment. They are able to give and receive constructive feedback.",
        "inhalt": "- Individual definition of leadership; competence profile of successful executives\n- Determining your position: strengths and weaknesses, claim of leadership\n- Perception, assessment, communication, feedback\n- Leading individual staff members: situations of leadership, dialogs\n- Leading groups: group dynamics, resistance\n- Conflict handling\n- Giving presentations, leading meetings\n- Instruments and styles of leadership (including coaching)\n- Leadership in the case of conflicting interests of the corporation and the employees",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=768293&pOrgNr=1",
        "name": "BGCE Opening Weekend",
        "kennung": "IN2268",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to remember, understand, and analyse different roles in a team structure. They can give and receive constructive feedback. Participants are able to apply the acquired knowledge to different situations and to design, realise, and evaluate a stepping-out phase of a team near the end of the common project.",
        "inhalt": "- Roles in and structure of a team\n- Development phases of a team\n- Perception, communication, feedback within team structures\n- Conflict handling in a team\n- Leading and moderating meetings\n- Organising and postprocessing the end of a team project",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458538&pOrgNr=1",
        "name": "BGCE Research Day",
        "kennung": "IN2185",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, the participants are able to independently work out and give presentations on a challenging scientific topic using various formats. They are proficient in interpreting, discussing, and analysing the presented interdisciplinary research according to the respective scientific practices.",
        "inhalt": "The participants present their current research work (Master's Thesis, BGCE honours project, internships and practical work, student assistant projects) in diverse presentation formats and discuss the presented research. The seminar program is accompanied by invited presentations of senior researchers.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458288&pOrgNr=1",
        "name": "BGCE Scientific Writing",
        "kennung": "IN2184",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful participation at the module, students are able to contribute to scientific publications and to individually compose scientific articles. They know the required scientific skills and conventions, and are able to select and apply them in practice. The participants can analyse and review peer publications with respect to scientific writing criteria.",
        "inhalt": "The seminar covers the following topics:\n- The review and publishing process for scientific publications\n- Classification and characteristics of different scientific publications (thesis, journal article, proceedings paper, etc.)\n- How to structure scientific publications (introduction, materials and methods, results, discussion)\n- How to write title and abstract\n- How to write the introduction\n- Presentation of materials and methods\n- How to present and discuss results\n- Efficient tables and graphs\n- Styles and conventions for citing scientific literature\n- Language issues in scientific writing\n- Design a scientific poster\n- How to generate a CV",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458546&pOrgNr=1",
        "name": "BGCE Supervised Teaching",
        "kennung": "IN2188",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After participation in the module Supervised Teaching, students are able to autonomously plan and perform a lesson or exercise with a given content. They know the most important principles of good didactics and rhetoric and can implement them in the course. Furthermore, the participants are able to reflect their teaching on their own and together with students and colleagues.",
        "inhalt": "The module is given as a tutoring activity accompanying an introductory course in the field of computational science and engineering, for example, in \"Advanced Programming\" (IN1503) or in the \"Scientific Computing Lab\" (IN2182).\n\nWithin this framework, the participants present both contents and programming or theoretical exercises. Furthermore, they discuss with the participants of the respective course the solutions of the course assignments.\n\nTo understand the basic elements of the evaluation process, the participants elaborate an evaluation questionnaire employed for the internal evaluation of the tutorials and lectures, respectively.\n\nVarious teaching techniques such as active structuring, activating elements, and usage of media are applied, trained, and analysed.",
        "voraussetzungen": "IN1503 Advanced Programming, IN2157 Grundlegende Algorithmen (CSE), IN2147 Parallele Programmierung, IN2005 Einführung in das Wissenschaftliche Rechnen, Solide Programmierkenntnisse der Tutoren sind Voraussetzung",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1132031&pOrgNr=1",
        "name": "BioInnovation: von offenen klinischen Fragestellungen zu Lösungskonzepten",
        "kennung": "IN8021",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul sind die Studierenden in der Lage:\n• In einem anspruchsvollen medizinischem Fachgebiet Lösungskonzepte für die jeweilige Fachdisziplin (z.B. Urologie, Gefäßchirurgie, Unfallchirurgie) zu entwickeln.\n• Medizinische Probleme im klinischen Alltag zu identifizieren, um daraus entsprechende ungelöste klinische Bedürfnisse abzuleiten.\n• Auf Basis identifizierter klinischer Bedürfnisse im Team erfolgreich Brainstormings durchzuführen und Lösungskonzepte abzuleiten.\n• Komplette Entwicklungsprozesse für Medizin- und Medizintechnikprodukte zu verstehen, wobei der Ablauf von der Auffindung klinischer Bedürfnissen bis zum Test erster Prototypen durchlaufen wird.\n• Erfolgreiche klinische Observation mit Ärzten und medizinischem Personal durchzuführen, sowie im klinischen Alltag passiv teilzunehmen (Beobachtung).\n• Medizinische Abläufe innerhalb der Klinik für eine spezielle Fachrichtung zu verstehen.\n• Methoden für eine erfolgreiche Teambildung anzuwenden.",
        "inhalt": "In diesem Praktikum lernen Studenten, wie klinische Bedürfnisse erfolgreich innerhalb des normalen Klinikalltags identifiziert werden und daraus mögliche und realistische Lösungsansätze zu deren Behebung gefunden werden können. Hierfür lernen Studenten Werkzeuge kennen, die dabei helfen, erfolgreich und innovativ in der Medizintechnik zu arbeiten. Der Kurs beinhaltet dabei alle Schritte von der Identifikation klinischer Bedürfnisse, deren Auswahl und Evaluierung, sowie der Ausarbeitung entsprechender Konzepte und dem Bau erster Prototypen mit entsprechender Tests.\n\n\n\nInnerhalb des Kurses werden dabei die notwendigen Schritte zur Erstellung von Ideen und Konzepten durchlaufen, wobei die Studenten in interdisziplinären Teams aus verschiedenen Fachbereichen arbeiten, darunter Ingenieurwesen, Wirtschaftswissenschaften und Design. Während der Projektphase werden die Teams von Coaches sowohl aus dem Ingenieurwesen als auch aus der Medizin begleitet, um direkten und kontinuierlichen Austausch untereinander zu fördern.\n\nInsgesamt werden folgenden Punkte im Kurs behandelt:\n\n- Identifikation von klinischen Bedürfnissen\n\n- Konzeption mittels Brainstormings\n\n- Ausarbeitung von Konzepten und Bau von Prototypen\n\n- Arbeit in interdisziplinären Teams\n\nWeiter Informationen können auf der Kursseite gefunden werden:\n\nhttp://campar.in.tum.de/Chair/TeachingWS15ClinicalNeedToConcept",
        "voraussetzungen": "Erweiterte allgemeine Kenntnisse in der jeweiligen Fachrichtung (Master-Niveau)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1616748&pOrgNr=1",
        "name": "Blockchain-based Systems Engineering",
        "kennung": "IN2359",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, Blockchain-basierte Anwendungssysteme zu analysieren, für gegebene Nutzungsszenarien zu entwerfen und die jeweils passenden Blockchain-Technologien zu wählen. Sie verstehen die technologischen Grundlagen, sodass sie befähigt sind, zukünftige bzw. alternative Distributed-Ledger-Technologien zu verstehen und zu bewerten.",
        "inhalt": "Die Blockchain-Technologie und allgemeiner Distributed Ledger-Technologien (DLT) stellen die technische Grundlage für die Entwicklung und den Einsatz von innovativen dezentralisierten, verteilten Systemen dar.\nIn dieser Vorlesung werden die Eigenschaften der Technologie analysiert. Ebenso sollen Studierende zu einer erfolgreichen Bewertung und Entwicklung von auf Blockchain basierenden Lösungen befähigt werden. Geplante Vorlesungsinhalte umfassen:\n• Kryptographische Grundlagen\n• Peer2Peer-Netzwerke\n• Datenstruktur und Aufbau der Blockchain\n• Consensus-Mechanismen\n• Smart Contracts & Smart Contract Engineering\n• Mögliche Anwendungsszenarien\n• Alternative Distributed-Ledger Ansätze\n• Risiken & Herausforderungen sowie Limitationen der Technologie\n• Aktuelle Forschungsarbeiten und Entwicklungen der Technologie",
        "voraussetzungen": "• IN0002: Praktikum: Grundlagen der Programmierung\n• IN0006: Einführung in die Softwaretechnik\n• IN0009: Grundlagen: Betriebssysteme und Systemsoftware",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2863073&pOrgNr=1",
        "name": "Business Analytics and Machine Learning",
        "kennung": "IN2028",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul kennen Studierende verbreitete Verfahren für Klassifikation, numerische Vorhersage und Clustering. Sie kennen die Annahmen verschiedener Verfahren und verstehen deren Funktionsweise und ausgewählte wirtschaftswissenschaftliche Einsatzgebiete. Teilnehmer können Datensätze mit der Programmiersprache R analysieren und die Ergebnisse der Analysen interpretieren.",
        "inhalt": "Regression Analysis, Regression Diagnostics, Generalized Linear Models, Naïve Bayes, Decision Tree Classifiers, Data Preparation, Causal Inference, Model Selection, Ensemble Methods, Clustering, High-Dimensional Problems, Neural Networks, Convex Optimization",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik, IN0018 Diskrete Wahrscheinlichkeitstheorie oder MA9712 Statistik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1357575&pOrgNr=1",
        "name": "Business Analytics (Doktorat)",
        "kennung": "IN2351",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul kennen Studierende verbreitete Verfahren für Klassifikation, numerische Vorhersage und Clustering. Sie kennen die Annahmen verschiedener Verfahren und verstehen deren Funktionsweise und typische betriebswirtschaftliche Einsatzgebiete. Teilnehmer können Datensätze mit der Programmiersprache R analysieren und die Ergebnisse der Analysen interpretieren.",
        "inhalt": "Inferential Statistics, Multi-linear Regression, Logistic and Poisson Regression, Naïve Bayes and Bayes Nets, Decision Tree Classifiers, Data Preparation, Evaluation of Classifiers and Learning Theory, Ensemble Methods and Clustering, Dimensionality Reduction, Association Rules",
        "voraussetzungen": "IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN0008 Grundlagen: Datenbanken",
        "modulniveau": "",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1769266&pOrgNr=1",
        "name": "Business-Simulationen gestalten",
        "kennung": "IN2300",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Modulveranstaltung sind die Studierenden in der Lage den Einsatz verschiedener Formen von Planspielen für unterschiedliche Anwendungsszenarien zu bewerten. Im Detail können die Studierenden Anforderungen an Planspiele analysieren, technische Designkonzepte entwickeln und Kernbestandteile von Planspielen modellieren.",
        "inhalt": "Die Teilnehmer erarbeiten in selbstgesteuerter eigenverantwortlicher Teamarbeit eine Business Simulation für ausgewählte Themen der Wirtschaftslehre und Wirtschaftsinformatik und evaluieren diese im Rahmen einer Lerneinheit.\nDie Teilnehmer festigen und erweitern Skills wie Kommunikation und Problemlösung im Team, Agile Softwareentwicklung, Projektmanagement, Moderation, Präsentation und Diskussion, Arbeiten mit wissenschaftlicher Literatur, Prinzipien und Konzepte von Serious Games im Allgemeinen und Business Simulationen im speziellen.\nE-Learning: didaktische Gestaltung und Bewertung von Unterricht mit Serious Games sowie Design, Implementierung und Test von IT-basierten Simulationen.\nVerwendete Werkzeuge sind Learning-Management-Systeme, Autorentools, Entwicklungsumgebungen für Computerspiele (z.B. Unity) und 3D Entwicklungsumgebungen.",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3494723&pOrgNr=1",
        "name": "Causal Inference in Time Series",
        "kennung": "CIT4230006",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "By the end of the course, the student must be able to:\n● Understanding of causal models and causal reasoning in dynamical systems.\n● Identify situations in which a problem can be thought of as a network.\n● Analyze data appropriately using a variety of network analytic techniques.\n● Ability to apply different methods for causal structure learning\n● Propose action based on sound interpretation of network analytics.\nTransversal skills:\n● Continue to work through difficulties to find optimal solutions.\n● Demonstrate the capacity for critical thinking (Causal reasoning)\n● Access and evaluate appropriate sources of information.",
        "inhalt": "● Introduction: What is causal inference?\n● Review of useful preliminaries\n○ Random variable, Time series, Spectral analysis\n○ Sequential predictors,\n● Causality in Times Series\n○ Granger causality\n○ Directed information graphs\n○ Efficient algorithms\n● Causal structure learning in time series\n○ Structures with Latent variables\n● Time-Varying networks\n○ change-point detection\n● Concrete Applications\n○ Computational neuroscience\n○ Financial markets\n○ Social networks",
        "voraussetzungen": "In order to be successful in this course, it is recommended that you have a basic knowledge of:\n● Statistics & probability (e.g. IN0018, or IN2332, or MA2409 or MA9712)\n● Machine Learning (e.g. IN2064)\n● Detection and estimation (MA5426 or BGU31007 or EI7006)\n● Some programming experience (e.g. IN0002 Praktikum: Programming Basics)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3138501&pOrgNr=1",
        "name": "Causality",
        "kennung": "IN2410",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of this module, students understand the basic concepts of causal inference from data and know about essential algorithms for causal discovery and cause-effect estimation. For a given problem setting they are able to decide whether causal inference is possible from the given data and assumptions, choose appropriate methods and derive how to adequately apply them to solve the problem at hand.",
        "inhalt": "Reminder of probability theory and graph theory; probabilistic graphical models; basic concepts of causation; Neyman-Rubin causal models; structural equation models; do-calculus and interventions; counterfactuals; matching; propensity score weighting; doubly robust methods; instrumental variables; differences in differences; sensitivity analysis",
        "voraussetzungen": "Basics of Probability Theory (e.g. IN0018 Discrete Probability Theory or IN2332 Statistical Modeling and Machine Learning, alternatively MA2409),\nAnalysis MA0902 (alternatively MA1001/2),\nLinear Algebra MA0901 (alternatively MA1101/2),\nand programming preferably in Python (e.g. IN0002 Praktikum: Programming Basics)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460554&pOrgNr=1",
        "name": "Challenges for the CIO (Berufsfeldspezialisierung CIO)",
        "kennung": "IN2103",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul verstehen die Studierenden das Berufsbild des Chief Information Officers (Aufgaben, Ziele, Zuständigkeiten, organisatorische Verankerung in Unternehmen, aufbau- und ablauforganisationale Aspekte) in unterschiedlichen Branchen. Zudem sind ihnen ausgewählte aktuelle Themen und Herausforderungen der CIOs bekannt. Sie sind in der Lage, ausgewählte Methoden und Ansätze des Informationsmanagements auf diese aktuellen Herausforderungen anzuwenden.\nZudem fördert das Modul die Fähigkeit der Studenten, aktuelle IT-Themen zu analysieren und über deren effektive Kommunikation nachzudenken. Nach der Teilnahme sind die Studenten außerdem mit (Kommunikations-)Fähigkeiten ausgestattet, die es ihnen ermöglicht in einem professionellen IT-Umfeld erfolgreich zu sein.",
        "inhalt": "- Ausarbeitung von aktuellen Themen und Herausforderungen für einen CIO in einem bestimmten Unternehmenskontext\n- Erstellung eines wissenschaftlichen Berichtes zu einem dieser Themen\n- Erstellung einer Handlungsempfehlung für einen Entscheidungsträger mit Hilfe einer Management Summary\n- Präsentation der Ausarbeitung\n- Austausch und Diskussion mit zahlreichen IT-Verantwortlichen aus Unternehmen",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457002&pOrgNr=1",
        "name": "CIO Planspiel",
        "kennung": "IN2104",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Im CIO-Planspiel schlüpfen die Studierenden in die Rolle des CFO (Chief Financial Officer), CMO (Chief Marketing Office), COO (Chief Operations Officer) und CIO (Chief Information Officer), um eine Bank zu führen und managen.\nMit dem Modul CIO-Planspiel sollen mehrere Lernergebnisse bei den Studierenden angestrebt werden. Nach der Teilnahme an dem CIO-Planspiel sind die Studierenden in der Lage:\n- zu verstehen, wie das Management einer Bank funktioniert,\n- strategisch zu denken und Entscheidungen zu treffen,\n- Wechselwirkungen zwischen Kennzahlen und Unternehmensbereichen zu analysieren,\n- Entscheidungen zur Unternehmensführung aus Sicht des CFO, CMO und COO, jedoch insbesondere aus Sicht des CIO (Chief Information Officer) zu verstehen und zu bewerten, - selbstständig Themengebiete (z. B. Unternehmensbewertung, ITIL Service Management) zu erarbeiten und vor Mitstudierenden zu präsentieren.",
        "inhalt": "Profil, Aufgabenbereiche und Managementaspekte des CIO, CFO, CMO und COO; Zusammenhang zwischen IT und Unternehmensstrategie; Vision und Strategie einer Bank; das Instrument der Balanced Scorecard innerhalb einer Bank; Projektportfoliomanagement; Human Resources Management; Unternehmensbewertung; verschiedene ITIL-Themen (z. B. Service Portfolio Management, Demand Management, Financial Management, ...)",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3453883&pOrgNr=1",
        "name": "Cloud Information Systems",
        "kennung": "CIT3230002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students are able to:\n- understand and analyze public cloud services.\n- define the requirements and challenges when architecting, implementing and managing cloud-native information systems.\n- design cost-efficient and scalable cloud information systems using current cloud technologies.",
        "inhalt": "- Introduction to foundational technologies (virtualization, containers, orchestration)\n- Architecture of cloud-native information systems (client/server, middleware, microservices)\n- Cost optimization in public clouds (cost and pricing models)\n- Economic cloud architecture comparison\n- Multi-cloud deployments\n- Implications of SaaS (DevOps, security)\n- Case studies of public clouds\n- Case studies of cloud-native information system architectures and their building blocks (e.g., cloud object stores, key/value stores, OLTP DBMS, OLAP DBMS)",
        "voraussetzungen": "IN0010 Introduction to Computer Networking and Distributed Systems (recommended)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2690341&pOrgNr=1",
        "name": "Cloud-Based Data Processing",
        "kennung": "IN2386",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students are able to:\n* define the requirements and challenges when architecting, building and managing a large-scale data processing service in the cloud.\n* use the theoretical foundations of distributed algorithms to construct the building blocks for a scalable data system design in relation to distributed storage, coordination and computation.\n* understand and analyze the different trade-offs when designing scalable data processing systems that need to run in the public cloud.\n* design, implement and evaluate a three-tier system using current cloud technologies.\n* identify the scalability bottlenecks and vulnerabilities of a complex computer system.",
        "inhalt": "Introduction\n* Intro to Data-centers\n* Latest trends in Cloud Computing\n\nFundamentals for managing distributed data\n* Data replication and quorums\n* Data partitioning\n* Fault-tolerance and unreliable components\n* Distributed system model\n* Consensus protocols and coordination services\n* Consistency models and distributed key value stores\n\nDesign of cloud-based data processing systems\n* Distributed transactions\n* Cloud-native OLTP databases\n* Cloud-native data warehouses\n* Dataflow computing (i.e., derived data)\n* Cloud-scale data streaming systems\n* Query-as-a-Service (QaaS) (serverless data processing)\n* Resource management and scheduling\n\nOther related topics:\n* Novel data storage formats (e.g., data lakes, data-mash, etc.)\n* Security and Privacy for data processing in the cloud\n* Accelerators and impact of new hardware technology",
        "voraussetzungen": "IN0008 Fundamentals of Databases\nIN0009 Basic Principles: Operating Systems and System Software\nIN0010 Introduction to Computer Networking and Distributed Systems",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3310961&pOrgNr=1",
        "name": "Codegenerierung für Datenverarbeitung",
        "kennung": "CIT3230001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage, eine effiziente Ausführungsumgebung für datenverarbeitende Programme auf Basis von Codegenerierung zu implementieren. Die Studierenden können für Hochsprachen, Datenbankabfragen und Maschinencode geeignete Programmrepräsentationen entwerfen, diese zu performantem Maschinencode übersetzen, und geeignete Optimierungen und Sicherheitsmaßnahmen (Sandboxing) verwenden.",
        "inhalt": "- Grundlegende Ausführungsmodelle von Programmen (Intepretation, Verwendung von Bytecode, Maschinencodeerzeugung, etc.)\n- Verschiedene Programmrepräsentationen (Quelltext, Intermediate Representations (IRs), verschiedene Formen von Bytecode)\n- Klassische Techniken der Codegenerierung\n- SSA und Optimierungstechniken am Beispiel von LLVM-IR\n- Maschinencodegenerierung: Instruktionsselektion und Registerallokation\n- Ausführung von Programmen in virtuellen Maschinen (z.B. WebAssembly, BPF, JavaScript)\n- Sandboxing und Optimierungen für JIT-Kompilierung\n- Ausführung von Datenbankanfragen (z.B. SQL, Data Frame API)\n- Ausführungsmodelle und Coderepräsentationen\n- Ausführung von Maschinencode/Binary Translation (z.B. RISC-V)\n- Besonderheiten bei der Übersetzung von Maschinencode",
        "voraussetzungen": "IN0004 Einführung in die Rechnerarchitektur;\nIN0008 Grundlagen: Datenbanken",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=520233&pOrgNr=1",
        "name": "Compilerbau I",
        "kennung": "IN2227",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul beherrschen die Studierenden Grundbegriffe und Techniken des Compilerbaus. Sie verstehen praktisch relevante Verfahren, die in den drei Bestandteilen eines Compilers, dem Frontend, dem Middleend und dem Backend eingesetzt werden. Mit deren Hilfe sind sie in der Lage, einen Compiler zu schreiben, der für eine einfache Programmiersprache und eine einfache Zielarchitektur Code erzeugt.",
        "inhalt": "Ein Compiler ist ein wesentlicher Bestandteil der Systemsoftware, dessen Aufgabe darin besteht, Programme einer höheren Programmiersprache - etwa C oder Java - in Folgen von Maschinenbefehlen eines realen Rechners zu übersetzen. Compiler sind relativ komplexe Programme; bei ihrer Konstruktion finden die Ideen und Methoden aus vielen Bereichen ihre Verwendung. Themen der Vorlesung sind damit unter anderem:\n\n- Lexikalische Analyse;\n- Syntaktische Analyse;\n- Typüberprüfung für imperative Programmierspachen;\n- Typinferenz für funktionale Programmiersprachen;\n- Codeerzeugung für eine abstrakte Maschine.",
        "voraussetzungen": "IN0011 Einführung in die Theoretische Informatik, IN0009 Grundlagen: Betriebssysteme und Systemsoftware, Kenntnis einer Programmiersprache, Erfahrung mit Systemsoftware, Automatentheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=455706&pOrgNr=1",
        "name": "Complexity Theory",
        "kennung": "IN2007",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls kennen die zentralen Methoden der Komplexitätstheorie. Sie wissen um Berechnungsmodelle, Komplexitätsklassen, Reduktionen, Vollständigkeit und kennen ausführlich weiterführende Konzepte wie Diagonalisierung, die Polynomialhierarchie, Platzkomplexität, Alternierung, Boolesche Schaltkreise, Randomisierung und Interaktive Beweissysteme. Des Weiteren können sie die entsprechenden Methoden und Konzepte anwenden, um neue Probleme in ihrer Komplexität zu analysieren.",
        "inhalt": "Das Modul behandelt zunächst gründlich Turing-Maschinen. Zeit- und Platzkomplexität werden studiert. Ferner werden Schaltkreise als Berechnungsmodell untersucht. Die Komplexitätsklassen L, NL, P, NP, PSPACE, EXP, NEXP, PH werden eingeführt. Anschließend werden Vollständigkeit und fundamentale strukturelle Zusammenhänge zwischen Komplexitätsklassen hergeleitet. Weiterhin behandelt das Modul das Konzept der Alternierung, Boolesche Schaltkreise, Randomisierung und Interaktive Beweissysteme.",
        "voraussetzungen": "IN0011 Einführung in die Theoretische Informatik, IN0015 Diskrete Strukturen, IN0007 Grundlagen: Algorithmen und Datenstrukturen",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3307984&pOrgNr=1",
        "name": "Computational Modeling for System Genetics",
        "kennung": "CIT4230001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students understand / are able to practically implement:\n- the challenges of complex trait genetics\n- statistical models for QTL mapping and GWAS\n- methods for adjustment for multiple testing\n- regularized linear models and its applications in genetics\n- linear mixed models to deal with population structure\n- experimental techniques to measure gene expression\n- efficient algorithms for expression QTL analysis\n- statistical concepts for causal inference such as Mendelian randomization\n- network inference methods such as Graphical Gaussian models and application to omics data (metabolome, transcriptome)\n- apply some of the above-mentioned techniques on an actual problem from systems genetics. Evaluate model performance, calibration and provide biological interpretation of its application to real data.",
        "inhalt": "This is a two-part module: (1) Seven lectures\nintroduce basics of systems genetics, and statistical models employed. The six lectures are supported with exercise sessions in R or python. This is followed by (2) an eight-week hands-on project.\n\nThe lectures are organized around the following topics:\n- Introduction to human genetics and genome-wide association studies (GWAS)\n- Populations structure\n- Polygenic risk score\n- Gene-mapping and variant fine-mapping\n- Gene expression QTLs (eQTLs)\n- Causal inference with omics data (metabolomics, transcriptomics, etc.)\n- Omics approaches for rare diseases\n\nOver these lectures, computational methods are introduced including:\n- Linear regression and hypothesis testing\n- Linear mixed models\n- Regularized linear models\n- Multiple testing correction\n- Graphical Gaussian models\n- Denoising autoencoders",
        "voraussetzungen": "Bachelor in mathematics, bioinformatics, computer science,\nphysics, statistics or a related field. Students from medicine with background in statistics and some basic programming experience could also join. One basic lecture in statistics (e.g. IN0018, IN2339) or in machine learning (e.g IN2064; MA4802). Strong interest in biological and medical research questions.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1102305&pOrgNr=1",
        "name": "Computational Physiology for Medical Image Computing",
        "kennung": "IN2319",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of the module, the participants will be able to use computational models for extracting diagnostic information from different types of clinical image data sets. These data sets may provide information, for example, about blood perfusion or microstructural tissue properties, about metabolic processes, or patterns of disease progression. The participants will understand the physiological concepts underlying the computational algorithms employed, and will know of advantages and shortcomings of different modeling strategies. This will allow them to analyze clinical imaging protocols with respect to the underlying physiological information, and to propose diagnostic algorithms that combine anatomical and physiological information of different imaging modalities.",
        "inhalt": "1) Physiological imaging: Computational models for extracting local physiological information from imaging modalities such as magnetic resonance, computed tomography, or positron emission topography (e.g., MR and PET models for blood flow, metabolism, tissue microstructure)\n\n2) Organ models: Computational models describing anatomy and function at the organ level as well as its variation across the population (e.g., 3D and 4D population atlases describing structure and shape)\n\n3) Disease and diagnostics: Computational models describing pathophysiological processes and the progression of diseases (functional models from biophysics and theoretical biology, empirical models for clinical decisions)\n\n4) Use cases, for example, from cardiac imaging, tumor analysis, and neuro-degenerative diseases",
        "voraussetzungen": "CAMP 1, or other introductory lecture on image processing; proficiency in a computing language such as Matlab, Python, or CPP.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=557075&pOrgNr=1",
        "name": "Computational Social Choice",
        "kennung": "IN2229",
        "organisation": "Department Computer Science",
        "anmerkung": "ab WS12/13 6 Credits",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden in der Lage\n* die Grundlagen kollektiver Entscheidungsfindung zu verstehen,\n* axiomatische Eigenschaften von Präferenzbündelungsverfahren zu untersuchen,\n* Ergebnisse verschiedener Präferenzbündelungsverfahren zu berechnen und zu vergleichen und\n* algorithmische Eigenschaften dieser Verfahren zu analysieren.",
        "inhalt": "\"Social Choice Theory\" beschäftigt sich mit Methoden zur kollektiven Entscheidungsfindung. Neben den klassischen Anwendungen wie Wahlverfahren, haben diese Methoden in den letzten Jahren Anwendung in verschiedenen Teilgebieten der Informatik gefunden. Der Schwerpunkt dieser Vorlesung liegt auf der Analyse und dem Vergleich von Verfahren, die auf der Mehrheitsrelation beruhen. Insbesondere werden dabei algorithmische Aspekte dieser Verfahren betrachtet. Themenübersicht: Präferenzen, Wahlverfahren, Choice Theory (Rationalisierbarkeit, Konsistenz), Satz von May, Arrows Unmöglichkeitssatz, Punkteverfahren, Fishburns Klassifikation von Condorcet-Verfahren, Satz von McGarvey, Top Cycle, Uncovered Set, Slater Set, Banks Set, Minimal Covering Set, Tournament Equilibrium Set, Kemeny-Young-Verfahren, Berechnungskomplexität von Wahlverfahren.",
        "voraussetzungen": "Modul IN0015: Diskrete Strukturen (oder äquivalent).\nEs wird erwartet, dass Teilnehmer Erfahrung mit der selbständigen Anfertigung von Beweisen haben und mit grundlegenden Beweistechniken vertraut sind. Zusätzlich sind Grundlagen der Komplexitätstheorie hilfreich (Z.B. Modul IN0011).",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2917510&pOrgNr=1",
        "name": "Concept Art und Game Design",
        "kennung": "IN2401",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul können die Studierenden wichtige gestalterische, technische und organisatorische Grundlagen zur praxisbezogenen Konzeption und Umsetzung digitaler Spiele umsetzen. Sie sind in der Lage, wichtige gestalterische Grundprinzipien, wie beispielsweise die grafische Darstellung, Bildkomposition und die Bildwahrnehmung beim Game Design einzusetzen. Insbesondere beherrschen sie den gestalterischen Entwurf und die technische Umsetzung von 3D Game Charakteren und 3D Spielumgebungen. Die Studierenden verstehen die Gestaltung dieser Elemente innerhalb des professionellen Workflows (Pipeline) in der Spieleentwicklung. Sie erlernen, diese Abläufe mit den üblichen Softwarepaketen gestalterisch, technisch und organisatorisch umzusetzen und die Arbeit in einem Team erfolgreich zu koordinieren.",
        "inhalt": "Im Zentrum des Moduls steht die Auseinandersetzung mit gestalterischen, technischen und organisatorischen Grundlagen für die professionelle Spieleentwicklung. Es werden notwendiges theoretisches Wissen und Kenntnisse der Konzeption und praktischen Umsetzung von Computerspielen behandelt. In Form eines Praxisprojekts erfolgt die Bearbeitung anhand ausgesuchter Projektarbeit in kleinen Teams.\n\nThemenschwerpunkte sind: Concept Art, Game Environments und 3D Character Design. Dazu gehören Projektionsarten, Perspektivische Projektion, Bildgestaltung und Bildkomposition, Bildwahrnehmung, Bildformat und \"Gleichgewicht\", Figur und Grund, Gestalt und Bildtiefe, wahrgenommene \"Bewegung\" im Bild, Mensch und Raum, Figur und Proportion, Character Design für Film und Games, 3D Modeling, Texturing, Lighting und Rendering, Lichtfarbe und Farbgestaltung, Lichtrichtung und Bildwirkung, Rigging and Animation, Game Engine Integration, sowie der professionelle Workflow (Pipeline and Stages in Lean Game Development) und Datenaustausch im 3D Game Development.\n\nDie Lehrveranstaltung nutzt die Software Blender und eine Game Engine (Unity, Unreal Engine). Die Lehrveranstaltung gliedert sich in neun Workshops und sechs Projektwochen. In den Projektwochen haben die Studierenden die Gelegenheit, die erworbenen Kenntnisse in einem praktischen Projekt umzusetzen. Alle Workshopergebnisse werden gesammelt und abschließend präsentiert.\n\nNeben der universitätseigenen Hardware bringen alle Teilnehmer auch jeweils eigene Hardware (Notebooks etc.) mit vorinstallierten Softwarepaketen in der jeweils aktuellen Version mit.",
        "voraussetzungen": "IN0031 Einführung in Informatik für Games Engineering, IN0038 Echtzeit-Computergrafik, IN0033 Interaktionsmethoden und -geräte",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4110214&pOrgNr=1",
        "name": "Concepts of C++ Programming",
        "kennung": "CIT323000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer beherrschen die unten genannten Konzepte der C++ Programmierung. Sie sind in der Lage, diese eigenständig zu analysieren und die entsprechenden Analysen auf verwandte Probleme der Programmierung anzuwenden. Ferner sind die Teilnehmer in der Lage, die behandelten C++ Programmierkonzepte einzusetzen, sie ggf. zu modifizieren und verschiedene Lösungen in ihrer Güte zu vergleichen.",
        "inhalt": "Das Modul behandelt zunächst die grundlegenden Konzepte der C++ Programmiersprache (Syntax, starke Typisierung, Typableitungen, Fokus auf Laufzeiteffizienz). Danach werden in dem Modul die zentralen, modernen C++ Programmierkonzepte vorgestellt.\n- Konzepte für das effiziente Ressourcen Management: Das Modul behandelt RAII, smart pointers, universelle Referenzen, Eigentümer und Kopieren/Bewegen.\n- Konzepte der prozeduralen Programmierung: Das Modul behandelt die C++ Mechanismen zur prozeduralen Programmierung, wie Funktionen, Parameterübergabe, Lambdas, Überladung, und Fehlerbehandlung.\n- Konzepte der objektorientierten Programmierung: Das Modul untersucht Klassen, Vererbung (einfach und mehrfach), Polymorphie, und RTTI.\n- Konzepte der generischen Programmierung: Das Modul behandelt Templates, Variadische Templates und Fold Expressions, Expression Templates für lazy evaluation, und typische Patterns wie CRTP - Konzepte der Compile-time Programmierung: Das Modul untersucht Konzepte wie Template Rekursion, constexpr und type traits.\n- Konzepte für Container, Iteratoren und Ranges: Das Modul behandelt die STL Standard-Container, Algorithmen und Laufzeitgarantien, Iteratoren-Konzepte sowie Views und Ranges.\n- Konzepte für Build-Systeme und Abhängigkeitsmanagement: Untersucht werden Konzepte zum automatischen Kompilieren, Linken sowie Management von Abhängigkeiten. Ausserdem werden Konzepte zum kontinuierlichen Testen und Integrieren behandelt.\n- Optional werden Konzepte zur parallelen Programmierung behandelt, wie Threads, Atomics und async/futures, und sehr neue C++-Konzepte wie Modules und Concepts.",
        "voraussetzungen": "IN0001: Einführung in die Informatik\nIN0002: Praktikum: Grundlagen der Programmierung\nIN0007: Grundlagen: Algorithmen und Datenstrukturen",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1734330&pOrgNr=1",
        "name": "Concepts of C++ Programming",
        "kennung": "IN2377",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer beherrschen die unten genannten Konzepte der C++ Programmierung. Sie sind in der Lage, diese eigenständig zu analysieren und die entsprechenden Analysen auf verwandte Probleme der Programmierung anzuwenden. Ferner sind die Teilnehmer in der Lage, die behandelten C++ Programmierkonzepte einzusetzen, sie ggf. zu modifizieren und verschiedene Lösungen in ihrer Güte zu vergleichen.",
        "inhalt": "Das Modul behandelt zunächst die grundlegenden Konzepte der C++ Programmiersprache (Syntax, starke Typisierung, Typableitungen, Fokus auf Laufzeiteffizienz). Danach werden in dem Modul die zentralen, modernen C++ Programmierkonzepte vorgestellt.\n- Konzepte für das effiziente Ressourcen Management: Das Modul behandelt RAII, smart pointers, universelle Referenzen, Eigentümer und Kopieren/Bewegen.\n- Konzepte der prozeduralen Programmierung: Das Modul behandelt die C++ Mechanismen zur prozeduralen Programmierung, wie Funktionen, Parameterübergabe, Lambdas, Überladung, und Fehlerbehandlung.\n- Konzepte der objektorientierten Programmierung: Das Modul untersucht Klassen, Vererbung (einfach und mehrfach), Polymorphie, und RTTI.\n- Konzepte der generischen Programmierung: Das Modul behandelt Templates, Variadische Templates und Fold Expressions, Expression Templates für lazy evaluation, und typische Patterns wie CRTP\n- Konzepte der Compile-time Programmierung: Das Modul untersucht Konzepte wie Template Rekursion, constexpr und type traits.\n- Konzepte für Container, Iteratoren und Ranges: Das Modul behandelt die STL Standard-Container, Algorithmen und Laufzeitgarantien, Iteratoren-Konzepte sowie Views und Ranges.\n- Konzepte für Build-Systeme und Abhängigkeitsmanagement: Untersucht werden Konzepte zum automatischen Kompilieren, Linken sowie Management von Abhängigkeiten. Ausserdem werden Konzepte zum kontinuierlichen Testen und Integrieren behandelt.\n- Optional werden Konzepte zur parallelen Programmierung behandelt, wie Threads, Atomics und async/futures.\nIm Stoffspektrum des Moduls ist auch ein Ausblick auf zukünftige C++ Konzepte vorgesehen, wie Modules, Concepts und Metaklassen.",
        "voraussetzungen": "IN0001: Einführung in die Informatik\nIN0002: Praktikum: Grundlagen der Programmierung\nIN0007: Grundlagen: Algorithmen und Datenstrukturen",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": "2024S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1378124&pOrgNr=1",
        "name": "CSE Seminar Scientific Computing",
        "kennung": "IN2183",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, the participants are able to independently acquire knowledge and expertise on a well-defined scientific topic in CSE and to present this topic to a group of peers in written and lecture form. The students are proficient in the required scientific writing and presentation techniques.\nThey are able to identify and select relevant scientific literature for the defined topic and work out a seminar paper that summarizes the most important aspects. They can identify key aspects that determine the reproducibility of scientific work and discuss or even demonstrate approaches that allow to reproduce respective results.\n\nThey have also intensified their discipline-specific communication skills: in their peer group, they are able to discuss aspects of trustworthiness, reproducibility and impact (e.g., on science, industry or society) of methods, techniques or results presented in their talks, also comparing between different approaches to tackle problems.\n\nThey can identify strengths and weaknesses in peer presentations, and are able to communicate constructive and scientifically based feedback to fellow participants.",
        "inhalt": "The lecturers determine a current research area in Computational Science and Engineering that defines the overall seminar theme and motivates the individual topics for the participating students.\n\nSeminar themes shall reflect current trends and novel developments in Computational Science and Engineering. Hence, while seminars might be repeatedly offered on the same or a similar topic, lecturers can also choose themes that are only offered once.\n\nSome examples of such seminar topics are:\n- Dynamical Systems & Scientific Computing\n- Fluid-Structure Interaction\n- Fundamentals of Wave Simulation\n- Fluid-Structure Interaction\n- Future Trends in Computing and CSE\n- High-Dimensional Methods and Problems in CSE\n- Case Studies in CSE\n- Software Engineering in Computational Intensive Applications\n\nA strong focus is put on acquiring and training presentation and scientific writing skills during the seminar. This includes (among others):\n• Typical structure of scientific papers and presentations (e.g., introduction, materials & methods, results, …); role of these components.\n• Explaining materials & methods in papers and presentations\n• Discussing related work (with appropriate citation, etc.)\n• Presentation and discussion of results in papers and publications\n• Appropriate use of tools for scientific papers and presentations; how to include illustrative examples and practical demonstrations\n• Appropriate use of media in presentations (projection, blackboard/flipchart, etc.)\nIn that context, the CSE-specific conventions, styles and habits of presenting or scientific writing shall be acquired, but also differences of such conventions between various disciplines shall be discussed.",
        "voraussetzungen": "None",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1254188&pOrgNr=1",
        "name": "Data Analysis and Visualization in R",
        "kennung": "IN2339",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to:\n- 1. produce scripts that automatically generate data analysis report\n- 2. import data from various sources into R\n- 3. apply the concepts of tidy data to clean and organize a dataset\n- 4. decide which plot is appropriate for a given question about the data\n- 5. generate such plots\n- 6. know the methods of hierarchical clustering, k-means, PCA\n- 7. apply the above methods and interpret their outcome on real-life datasets\n- 8. know the concept of statistical testing\n- 9. devise and implement resampling procedures to assess statistical significance\n- 10. know the conditions of applications and how to perform in R the following statistical tests: Fisher test, Wilcoxon test, T-test.\n- 11. know the concept of regression and classification\n- 12 apply regression and classification algorithms in R\n- 13. know the concept of error in generalization, cross-validation\n- 14. implement in R a cross-validation scheme.\n- 15. know the concepts of sensitivity, specificity, ROC curves\n- 16. assess the latter in R",
        "inhalt": "R programming basics 1\nR programming basics 2 (including report generation with R markdown)\nData importing\nCleaning and organizing data: Tidy data 1\nCleaning and organizing data: Tidy data 2\nBase plot\nGrammar of graphics 1\nGrammar of graphics 2\nUnsupervised learning (hierarchical clustering, k-means, PCA)\nCase study I\nDrawing robust interpretations 1: empirical testing by sampling\nDrawing robust interpretations 2: classical statistical tests\nSupervised learning 1: regression, cross-validation\nSupervised learning 2: classification, ROC curve, precision, recall\nCase study II",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=476873&pOrgNr=1",
        "name": "Data Mining und Knowledge Discovery",
        "kennung": "IN2030",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "On successful completion of the module, students\n- understand the different types of data and relations;\n- understand, apply, and evaluate data preparation, analysis, and visualization methods;\n- understand, apply, and evaluate linear and nonlinear correlation, regression and forecasting methods;\n- are able to compare classification and clustering, and to understand, apply, and evaluate the corresponding methods;\n- are able to select, apply, and evaluate suitable data mining methods for given applications.\nThe main didactic goal is to introduce students to a variety of methods and provide them with the basic notions necessary to extend their knowledge by accessing the literature on their own. The work that the students must invest to achieve this goal corresponds the 3 credits assigned to the module.",
        "inhalt": "- data sources, characteristics, and errors\n- data preprocessing and filtering\n- data visualization\n- data projections (principal component analysis, multidimensional scaling, Sammon mapping, auto associator)\n- data transformation and feature selection\n- correlation and regression\n- forecasting\n- classification (Bayes, discriminance, support vector machine, nearest neighbor, learning vector quantization, decision trees)\n- clustering (sequential, protype based, fuzzy, relational, heuristic)",
        "voraussetzungen": "Basic mathematics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3499417&pOrgNr=1",
        "name": "Data Processing on Modern Hardware",
        "kennung": "CIT3230004",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students are able to:\n\n* implement data processing engines that run faster on modern machines using a variety of techniques:\n- optimize data structures and algorithms for the memory hierarchy\n- effectively adjust the program structure of the execution engine and the data pipelines to better exploit modern hardware features (AVX, SGX,\n- apply custom-parallelization techniques to most common data-processing algorithms\n- efficiently synchronize data structures\n\n* learn how to best leverage new hardware technologies in the context of (distributed) data processing engines:\n- accelerators (e.g., FPGAs, smart NICs, etc.)\n- low-latency high-bandwidth networks\n- modern storage and memory (non-volatile, memory extensions, far memory, CXL)\n\n* reason about software abstractions and programming models for modern hardware, especially in the context of data-intensive applications.\n\n* apply the knowledge in real data management systems:\n- understand what happens in the background\n- do performance analysis and debugging of hot spots and bottlenecks\n- optimize algorithms and data structures to run well both in isolation and alongside other programs (e.g., multi-tenancy).",
        "inhalt": "* Cache hierarchy awareness and how it influences the design of modern data storage formats and indexes.\n* Memory-, threading- and execution models for data processing on modern machines\n* Latest practices for query execution, compilation and optimization\n* Exploiting parallelism in multi-core machines for in-memory data management systems, with particular focus on crafting for non-uniformity in memory access latencies\n* Building efficient distributed data processing at scale through the use of modern network and storage technologies",
        "voraussetzungen": "IN0004 Introduction to Computer Organization and Technology – Computer Architecture\nIN0008 Fundamentals of Databases\nIN0007 Fundamentals of Algorithms and Data Structures",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3471253&pOrgNr=1",
        "name": "Data Structure Engineering",
        "kennung": "CIT3230003",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Students can design efficient and compact data structures. They are capable of implementing custom, domain-specific data structure variants and of synchronizing them for multi-core processors in a scalable fashion.",
        "inhalt": "Data structure engineering is the process of designing and implementing in-memory and out-of-memory data structures to support the efficient storage, organization, and retrieval of data. On modern hardware a low asymptotic complexity alone does not guarantee high performance; one must also take features of today's processors and storage technologies into account. The course first introduces the necessary hardware background, before studying different data structures such as hash tables, search trees, and tries and how to optimize them for modern hardware.",
        "voraussetzungen": "IN0007 Fundamentals of Algorithms and Data Structures (recommended)\nIN0004 Introduction to Computer Organization and Technology - Computer Architecture (recommended)\nKnowledge of low-level language, e.g., C/C++, Rust",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473867&pOrgNr=1",
        "name": "Database Systems on Modern CPU Architectures",
        "kennung": "IN2118",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden\n- verstehen die Interaktion von Datenbanksystemen/-algorithmen und modernen Rechnerarchitekturen (hier: CPU, Cache, Primärspeicher) und\n- lernen, wie die Interna von Datenbanksystemen zu entwickeln bzw. zu modifizieren sind, um die Eigenschaften dieser Rechnerarchitekturen mit Gewinn nutzen zu können.",
        "inhalt": "- Architektur moderner CPUs und die Speicherhierarchie\n- Cache-Speicher, TLB, assoziative Speicher\n- Sprungvorhersage in CPUs\n- Sequentieller und randomisierter Speicherzugriff\n- Speicherzugriffsmuster bei der Anfrageauswertung in RDBMS\n- Tupelspeicherung in relationalen DBMS (RDBMS)\n- Vertikal fragmentierte RDBMS und Anfrageauswertung\n- Cache-bewusste Datenbank-Algorithmen (z.B. Joins, Sortierung)\n- Hauptspeicherdatenbanksysteme\n- Kompression zur Datendurchsatzsteigerung",
        "voraussetzungen": "IN0004 Einführung in die Rechnerarchitektur, IN0008 Grundlagen: Datenbanken, Bachelor (empfohlen)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261085&pOrgNr=1",
        "name": "Datenbanksysteme für Hörer anderer Fachrichtungen",
        "kennung": "IN8002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden lernen den systematischen Einsatz von Relationalen Datenbanksystemen (RDBMS). Die Teilnehmer sind in der Lage, reale Miniwelten (Applikationen) auf die Tabellenstrukturen des RDBMS abzubilden und die so entworfenen Datenbanken zu manipulieren und anzufragen. Es wird Verständnis für Grundlagen, Interna und Grenzen von RDBMS vermittelt, so dass die Studierenden Datenbanksysteme intelligent einsetzen und bewerten können.",
        "inhalt": "Diese Vorlesung vermittelt das Basiswissen, um relationale (tabellen-orientierte) Datenbanksysteme intelligent und effektiv einsetzen zu können. Dazu wird der Prozess des konzeptuellen Datenbankentwurfes (die Identifikation und Abbildung von realen Applikations-Miniwelten auf Entity-Relationship-Modelle) systematisch und detailliert vermittelt. Diese ER-Modelle werden anschließend in Tabellenstrukturen - Relationen - überführt, die letztendlich dem Datenbanksystem direkt zugänglich sind. Die Vorlesung diskutiert die Qualität solcher Abbildungen und führt dazu in die Grundlagen der Normalformenlehre ein. In der Folge bespricht die Vorlesung die Formulierung von Anfragen, vor allem formuliert in SQL, gegen die so entstandenen Relationen. Dabei aufgeworfene Fragen der Performanz und Konsistenz von Datenbanken werden untersucht, indem grundlegende Interna der Anfragebearbeitung, Indexstrukturen und Transaktionsverwaltung erläutert werden. Die Einbindung von Datenbanksystemen in web-gestützte Applikationen (Einbettung in Programmier- und Skriptsprachen) wird vorgestellt, bevor ein Ausblick auf Datenbanksysteme für nicht-relationale Daten (vor allem XML) die Vorlesung absschließt. In den Übungen zur Vorlesung wird der praktische Umgang mit Datenbanksystemen erlernt.",
        "voraussetzungen": "Grundlegende Programmierkenntnisse",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4132629&pOrgNr=1",
        "name": "DevOps: Engineering for Deployment and Operations",
        "kennung": "CIT423001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "This module focuses on the practical application of the covered content. After completing the course, students will be able to:\n• Explain DevOps Principles: Critically examine and differentiate between the cultural and organizational aspects of DevOps to optimize the software development lifecycle.\n• Apply Virtualization and Cloud Integration: Implement and execute virtualization and cloud technologies to enhance operational efficiency.\n• Design Deployment Strategies: Construct continuous integration and delivery pipelines using systematic planning and creative problem-solving.\n• Evaluate Monitoring and User Feedback: Assess monitoring strategies and interpret user feedback to refine and improve the development process.\n• Apply Security and Compliance Best Practices: Integrate security processes and compliance measures by incorporating cross-cutting security aspects to facilitate risks.\n• Create Microservices and Scalable Architectures: Design and develop scalable microservice architectures, applying innovative solutions to complex system requirements.\n• Operate Production Environments: Configure deployment software measures, apply best practices for incident management and resolve problem, e.g. rollbacks.\n• Investigate Advanced DevOps Topics: Explore and research advanced concepts and current trends in DevOps to foresee the impact on future methodologies and practices.",
        "inhalt": "DevOps is an integrative approach to software engineering, blending development (Dev) and operations (Ops) to optimize the software development lifecycle, enhance collaboration, and streamline workflows. It emphasizes the use of automated processes, continuous integration, and deployment strategies to improve the efficiency and quality of software systems. It has become a widely adopted practice in the software industry, since it leads to shorter release cycles of software while achieving high quality. Key topics in DevOps include, among others:\n• Introduction and Overview of DevOps\n• DevOps Culture and Organization\n• Software Engineering in DevOps\n• Virtualization, Containers, and Cloud Integration\n• Deployment Strategies and Continuous Delivery\n• Monitoring, Feedback, and User-Centric Approaches\n• Security, Risk Management, and Compliance\n• Microservices and Scalable Architectures\n• Post-Production Management\n• Advanced Topics and Emerging Trends",
        "voraussetzungen": "This module is designed for students with an advanced understanding of computer science or information systems, typically acquired through a computer science-oriented bachelor's program. To ensure readiness for this course, students should possess the following foundational knowledge and skills:\n1. Solid Programming Background: Familiarity with fundamental programming concepts and techniques is essential. Relevant coursework includes \"Fundamentals of Programming\" (IN0002).\n2. Understanding of Internet/Networking Protocols: A grasp of the basics in computer networking and distributed systems is crucial. This can be achieved through courses like \"Introduction to Computer Networking and Distributed Systems\" (IN0010).\n3. Basic Software Engineering and Architecture Knowledge: An understanding of software engineering principles, including distributed version control and software architecture, is required. Suitable courses include \"Introduction to Software Engineering\" (e.g., IN0006) and \"Software Architectures\" (e.g., IN2088).\n\nAdditionally, familiarity with the following areas will be beneficial, though not mandatory:\n• Cloud Technologies: Knowledge of cloud computing, virtual machines, and containers (e.g., Cloud Computing, IN2073).\n• Internet Security: Understanding of the key concepts and challenges related to internet security (e.g., IT Security, IN0042).\n• Software Development Methodologies: Familiarity with approaches to software development and project management.\n• Deployment and Operation: Insights into the processes involved in the deployment and operation of software systems.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=961565&pOrgNr=1",
        "name": "Didaktik von Planspielen",
        "kennung": "IN2301",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage...\n- Einsatzmöglichkeiten für computerunterstützte Planspiele zu erläutern\n- lerntheoretische Grundlagen auf computerunterstützte Planspiele anzuwenden\n- unterschiedliche Formen von Planspielen zu kategorisieren\n- Konzepte zum didaktischen Design von Planspielen zu erarbeiten",
        "inhalt": "- Ansätze der Lerntheorie\n- Mediendidaktische Grundlagen computerunterstützter Planspiele\n- Einsatzmöglichkeiten für computerunterstützte Planspiele\n- Didaktisches Design von Planspielen\n- Konzepte für Planspiele\n- Phasen der Planspiel-Arbeit",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473930&pOrgNr=1",
        "name": "Didaktisches und pädagogisches Training für Tutoren",
        "kennung": "IN9028",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer können elementare Konzepte der Lernpsychologie und der Lehr-Lernforschung verstehen und anwenden. Zudem beherrschen sie Methoden zur Planung, Organisation und Durchführung von Tutorübungen. Lehrmethoden und Medien zur Förderung des individuellen Lernfortschritts können sie auswählen, bewerten und anwenden.",
        "inhalt": "1. Grundlagen der allgemeinen Lehr-/Lernforschung, insbesondere psychologische Grundlagen des Lernens. Grundzüge des Konstruktivismus als Lehr-/Lernkonzept\n2. Techniken und Hilfsmittel zur Vermittlung informatischer Inhalte\n3. Leistungsbeurteilung, Gender-Aspekte und -Effekte\n4. Konzeption, Gestaltung und Bewertung von Tutorübungen in der Informatik\n5. Planung, Organisation und Durchführung von Tutorübungen in der Informatik",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454051&pOrgNr=1",
        "name": "Diskrete Strukturen",
        "kennung": "IN0015",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls\n- beherrschen Teilnehmer die Grundbegriffe sowie die Grundlagen des Umgangs mit logischen, algebraischen und algorithmischen Kalkülen,\n- können kombinatorische Problemstellungen lösen,\n- können Probleme mit Methoden der Graphentheorie modellieren und lösen und\n- sind zur quantitativen Betrachtung der Effizienz von Lösungsmethoden und Algorithmen in der Lage.",
        "inhalt": "Die Vorlesung ist eine Einführung in die Begriffe und Bereiche der Diskreten Mathematik für Informatiker. Sie gliedert sich in fünf Teilen:\n\n1) Grundbegriffe der Mengen, Relationen und Funktionen:\n- Mengen: Grundoperationen, Äquivalenzgesetze, KV-Diagramme,\nAbzählbarkeit, Satz von Cantor\n- Relationen: Join, Transitive Hülle, Relationale Algebra\n- Funktionen: Grundeigenschaften, Komposition, Inverse\n\n2) Grundlagen der Aussagenlogik und Logik erster Stufe:\n- Aussagenlogik:\n- Syntax und Semantik\n- Wahrheitstabellen und Bezug zu KV-Diagramme\n- Äquivalenzgesetze\n- KNF, DNF, Normalisierungsverfahren, Erfüllbarkeitsäquivalenz\n- SAT-Verfahren: DPLL, Resolution. Korrektheitsnachweis\n- Modellierung mit Aussagenlogik\n- Prädikatenlogik\n- Syntax und Semantik\n- Äquivalenzgesetze\n- Modellierung mit Prädikatenlogik\n\n3) Grundlagen der Kombinatorik:\n- Zählprinzipien\n- Ziehung von Bällen aus Urnen: Variationen, Permutationen, Kombinationen.\n- Binomialkoeffizienten: Symmetrie, Identitäten von Pascal und Vandermonde\n- Verteilungsprobleme\n- Stirling-Zahlen der ersten und zweiten Art\n- Geordnete und ungeordnete Zahlpartitionen\n- Anwendung Lastverteilung\n\n4) Grundlagen der Graphentheorie:\n- Grunddefinitionen\n- Bäume\n- Eulerkreise: Satz von Euler. Hamiltonkreise: Sätze von Dirac und Ore\n- Planargraphen: Eulersche Polyederformel, Satz von Kuratowski\n- Matchings: Heiratssatz, augmentierende Pfade\n- Matchings mit Präferenzen: Satz von Gale-Shapley\n\n5) Algebraische Grundlagen:\n- Grunddefinitionen: Algebra, Gruppe, Ring, Körper\n- Gruppen\n- Ordnung: Satz von Lagrange, Erzeuger, Gruppenexponent\n- Zyklische Gruppen\n- Zahlentheoretische Grundlagen: Größter gemeinsamer Teiler,\nErweiterter euklidischer Algorithmus, Eulersche phi-Funktion\n- Multiplikative Restklassengruppen\n- RSA",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454053&pOrgNr=1",
        "name": "Diskrete Wahrscheinlichkeitstheorie",
        "kennung": "IN0018",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls\n- sind die Teilnehmer mit wichtigen Konzepten der diskreten und kontinuierlichen Wahrscheinlichkeitsräume sowie der stochastischen Prozesse vertraut und können diese in weiten Teilen selbst herleiten\n- beherrschen Rechenregeln zur Bestimmung und Abschätzung von Wahrscheinlichkeiten, Erwartungswerten und Varianzen,\n- sind in der Lage, reale Probleme auf abstrakte Wahrscheinlichkeitsräume abzubilden und\n- können einfache statistische Tests fachgerecht anwenden.",
        "inhalt": "-Grundlagen der (diskreten) Wahrscheinlichkeitstheorie\n++ Wahrscheinlichkeitsräume, Ereignisse, Prinzip der Inklusion/Exklusion, Boolesche Ungleichung, bedingte Wahrscheinlichkeit, Multiplikationssatz, Satz der totalen Wahrscheinlichkeit, Satz von Bayes, Unabhängigkeit\n++ Zufallsvariablen, Erwartungswert, Varianz, Linearität des Erwartungswertes, bedingte Zufallsvariablen und deren Erwartungswert, Varianz, Momente und zentrale Momente, mehrere Zufallsvariablen und deren gemeinsame Dichte & Verteilung, Unabhängigkeit von Zufallsvariablen, Momente zusammengesetzter Zufallsvariablen, Indikatorvariablen\n++ diskrete Verteilungen: Bernoulli-Verteilung, Binomialverteilung, geometrische Verteilung, Coupon-Collector-Problem, Poisson-Verteilung, Zusammenhänge unter den Verteilungen\n++ Methoden zur Abschätzung von Wahrscheinlichkeiten, Ungleichungen von Markov und Chebyshev, Chernoff Schranken\n++ Gesetz der großen Zahlen\n++ wahrscheinlichkeitserzeugende Funktionen und deren Anwendung auf Verteilungen, momenterzeugende Funktionen mit verschiedenen Anwendungen\n\n-Kontinuierliche Wahrscheinlichkeitsräume\n++ kontinuierliche Zufallsvariablen, Kolmogorov Axiome, sigma-Algebren, Lebesgue-Integrale, Rechnen mit kontinuierlichen Zufallsvariablen, Simulation von Zufallsvariablen\n++ kontinuierliche Verteilungen: Gleichverteilung, Normalverteilung und lineare Transformation, Exponentialverteilung und Warteprozesse, Zusammenhang mit diskreten Verteilungen\n++ mehrere kontinuierliche Zufallsvariablen, Randverteilungen und Unabhängigkeit, Summen von Zufallsvariablen\n++ Momenterzeugende Funktionen für kontinuierliche Zufallsvariablen\n++ Zentraler Grenzwertsatz\n\n-Induktive Statistik\n++ Schätzvariablen, Maximum-Likelihood-Prinzip, Konfidenzintervalle, Testen von Hypothesen, Entwicklung und Anwendung von statistischen Tests\n\n-Stochastische Prozesse\n++ Prozesse mit diskreter Zeit, Markovketten, Übergangswahrscheinlichkeiten, Ankunftswahrscheinlichkeiten, Übergangszeiten, Rückkehrzeiten, Fundamentalsatz für ergodische Markovketten",
        "voraussetzungen": "IN0015 Diskrete Strukturen, MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1517636&pOrgNr=1",
        "name": "Echtzeit-Computergrafik",
        "kennung": "IN0038",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer erwerben vertiefende Kenntnisse im Bereich der Spieleentwicklung mit dem Fokus auf Echtzeitgrafik, physikalische Bewegungssimulation und Kollisionsdetektion. Nach dem Besuch des Moduls kennen die Teilnehmer die wesentlichen Komponenten von Game Engines und verstehen deren Zusammenspiel. Sie verstehen die grundlegenden Prinzipien der Rasterisierungs-basierten Rendering-Pipeline, sind mit einfachen Methoden zur Simulation von Partikelbewegungen vertraut und kennen die grundlegenden Methoden zur Detektion von Kollisionen zwischen dynamischen Körpern. Die Studierenden demonstrieren die Fähigkeit, die erlernten Konzepte und Methoden anzuwenden und anwendungsspezifisch zu erweitern.",
        "inhalt": "Das Modul ist begleitend zum Modul IN0039 Praktikum Echtzeit-Computergrafik. In der Vorlesung werden grundlegende Algorithmen der Echtzeit-Grafikprogrammierung und der Simulation der Bewegungsdynamik starrer Körper besprochen. Themen sind: Polygon-Modelle, Beleuchtungssimulation und Shading, Texture-Mapping, Rasterisierungs-basierte Graphikpipeline, Bewegungsdynamik, Partikel-Systeme, Kollisionsdetektion und -Auflösung.",
        "voraussetzungen": "Einführung in die Programmierung und gleichzeitiger Besuch des Moduls IN0039 Praktikum: Echtzeit-Computergrafik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456350&pOrgNr=1",
        "name": "Efficient Algorithms and Data Structures",
        "kennung": "IN2003",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Absolvierung des Moduls sind Studierende in der Lage, die Laufzeit und den Speicherplatzbedarf von Algorithmen zu analysieren und zu bewerten. Darüber hinaus verfügen sie über ein grundlegendes Verständnis für die Arbeitsweise zahlreicher fundamentaler Algorithmen und Datenstrukturen. Dieses Verständnis versetzt sie in die Lage, für neue Probleme selbständig Algorithmen und Datenstrukturen zu entwickeln.",
        "inhalt": "Das Modul behandelt zunächst die Grundlagen der Algorithmenanalyse. Anschließend werden fundamentale Datenstrukturen und grundlegende algorithmische Probleme behandelt.\nIm Bereich der Grundlagen der Algorithmenanalyse studiert das Modul verschiedene Maschinenmodelle, Komplexitätsmaße sowie das Lösen von Rekursionsgleichungen.\nAuf dem Gebiet der fundamentalen Datenstrukturen stellt das Modul verschiedene Suchbäume, Hash-Verfahren, Prioritätswarteschlangen und Union-Find-Datenstrukturen vor.\nIm Bereich der grundlegenden Algorithmen konzentriert sich das Modul auf die Entwicklung von zahlreichen Maxflow- und Mincutalgorithmen sowie auf Algorithmen für das Matching-Problem.",
        "voraussetzungen": "IN0015 Diskrete Strukturen, IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=455704&pOrgNr=1",
        "name": "Effiziente Algorithmen und Datenstrukturen II",
        "kennung": "IN2004",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach dem Absolvieren des Moduls verfügen Studierende über umfangreiche Kenntnisse fortgeschrittener algorithmischer Methoden, insbesondere aus dem Bereich der Linearen Optimierung. Darüber hinaus wissen sie um die Bedeutung von Approximationsalgorithmen für die Lösung NP-vollständiger Probleme. Sie kennen verschiedene Techniken, um approximative Lösungen für Probleme aus dem Bereich der kombinatorischen Optimierung zu gewinnen und können diese Techniken selbstständig auf neue Probleme anwenden, die in einer wissenschaftlichen und/oder beruflichen Anwendung auftreten.",
        "inhalt": "Lineare Optimierung\n- Modellierung\n- Simplex-Verfahren\n- Seidels Algorithmus\n- Ellipsoidmethode\n- Karmarkar\n\nApproximationsalgorithmen\n- Greedy Methoden\n- Lokale Suche\n- Rundungsmethoden\n- Primal/Dual-Verfahren",
        "voraussetzungen": "IN0015 Diskrete Strukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie, IN2003 Effiziente Algorithmen und Datenstrukturen",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1254056&pOrgNr=1",
        "name": "Einführung in Audio für Games",
        "kennung": "IN2338",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul haben die Teilnehmenden ein grundsätzliches Verständnis über die Rolle des Sound Designers in der Spieleentwicklung. Die Teilnehmenden haben außerdem ein grundsätzliches Wissen über die Themen Game Music, Sound Effects in Games sowie über Audiosysteme von Game Engines.\nDie Teilnehmenden sind in der Lage, eigenständig in einem Spiel die komplette Audio-Einbindung zu konfigurieren und zu implementieren. Die Teilnehmenden können ein Spiel mit passenden Soundeffekten, Hintergrundmusik und Sprachausgabe vertonen.\nDie während des Kurses vermittelten Grundlagen über Game Music können von den Teilnehmenden praktisch angewendet werden.",
        "inhalt": "Das Seminar gibt detaillierte Einblicke in die Themen Sound Design, Game Music und Sound Effects in Games sowie Audiosysteme in Game Engines. Dabei werden neben den Grundlagen auch Verfahren in den genannten Themenbereichen vorgestellt. Beispiele aus der Praxis zeigen die typischen Anwendungen, wie die vorgestellten Verfahren benutzt und die Grundlagen angewendet werden können. Dabei werden unter anderem folgende Punkte bearbeitet:\n• Entwicklung der Game Music\n• Typische Eigenschaften von Game Music und Abgrenzung zu anderen Musikbereichen\n• Dynamische Musik\n• Grundlagen des Komponierens\n• Typische Eigenschaften von Sound Effects in Games\n• Foley Sound Design\n• Voice Acting\n• Grundlagen der Produktion von Sound Effects\n• Audio-Techniken\n• Audio-Setup in Game Engines\n• Audio-Mixing in Game Engines",
        "voraussetzungen": "IN0031 Einführung in die Informatik für Games Engineering\nIN0038 Echtzeit-Computergrafik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": "2023S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2814357&pOrgNr=1",
        "name": "Einführung in das Datenschutzrecht",
        "kennung": "IN9050",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul sind die Studierenden in der Lage:\n- die geschichtliche Entwicklung des Datenschutzrechts und dessen verfassungsrechtlichen Hintergrund nach zu skizzieren.\n- die Systematik des Datenschutzrechts zu erfassen und dessen Anwendungsbereich prüfen.\n- die Auswirkungen der Grundprinzipien des Datenschutzrechts zu erfassen und auf konkrete Beispiele anzuwenden.\n- die Zulässigkeit der Verarbeitung personenbezogener Daten nach der DSGVO in verschiedenen Einzelfällen zu beurteilen.\n- die Rechte Betroffener und die organisatorischen Pflichten des Verantwortlichen zu nennen und auszuüben.\n- die Besonderheiten bei der Übermittlung personenbezogener Daten ins Ausland darzulegen.\n- Datenschutzverstöße und die passenden Sanktionen, wie Geldbußen, Geld- und Freiheitsstrafen, zu verknüpfen.",
        "inhalt": "Folgende fachlichen Inhalte werden im Modul vermittelt:\nKapitel 1: Geschichte des Datenschutzrechts und verfassungsrechtlicher Hintergrund\nKapitel 2: Systematik und Anwendungsbereich des Datenschutzrechts\n1. Systematik\n2. Anwendungsbereich des deutschen und europäischen Datenschutzrechts\n3. Relevante Akteure des Datenschutzrechts\nKapitel 3: Grundprinzipien des Datenschutzrechts\n1. Überblick\n2. Rechtmäßigkeit\n3. Transparenz\n4. Zweckbindung\n5. Datenminimierung\n6. Rechenschaftsprinzip\nKapitel 4: Zulässigkeit der Verarbeitung personenbezogener Daten\n1. Rechtsgrundlagen der Datenverarbeitung nach der DSGVO\n2. Einwilligung des Betroffenen\n3. Vertragliche Beziehungen\n4. Erfüllung rechtlicher Pflichten\n5. Schutz lebenswichtiger Interessen\n6. Wahrnehmung öffentlicher Aufgaben\n7. Überwiegendes Interesse des Datenverarbeiters\n8. Besondere Kategorien personenbezogener Daten\nKapitel 5: Rechte Betroffener\n1. Allgemeines\n2. Informationspflichten des Verantwortlichen und Auskunftsrecht des Betroffenen\n3. Recht auf Berichtigung\n4. Löschungsanspruch des Betroffenen („Recht auf Vergessenwerden“)\n5. Datenportabilität\n6. Widerspruchsrecht und automatisierte Einzelfallentscheidungen\nKapitel 6: Organisatorische Pflichten des Verantwortlichen\n1. Stärkung der organisatorischen Pflichten durch die DSGVO\n2. Abhängigkeit des Pflichtenumfangs vom Risiko der Verarbeitung\n3. Datenschutz durch Technikgestaltung und durch datenschutzfreundliche Voreinstellungen\n4. Datensicherheit\n5. Meldung von „Datenpannen“\n6. Datenschutz-Folgenabschätzung\n7. Verarbeitungsverzeichnis)\n8. Bestellung eines Datenschutzbeauftragten\n9. Zusammenfassung\nKapitel 7: Übermittlung personenbezogener Daten ins Ausland\n1. Allgemeines\n2. Zwei-Stufen-Test\n3. Angemessenheitsbeschluss der EU\n4. EU-US Privacy Shield\n5. Geeignete Garantien\n6. Ausnahmen für bestimmte Fälle\nKapitel 8: Sanktionen für Datenschutzverstöße\n1. Überblick: Datenschutzordnungswidrigkeiten und Datenschutzstraftaten\n2. Bußgelder für Datenschutzordnungswidrigkeiten\n3. Sanktionen für Datenschutzstraftaten\n4. Straftaten nach dem allgemeinen Strafrecht\nKapitel 9: Praxisbeispiele\n1. Datenschutz im Internet: Fallbeispiel\n2. Datenschutz im Internet: Cookies\n3. Datenschutz im Arbeitsverhältnis: Fallbeispiel\n4. Zulässigkeit einer Corona-Tracing-App",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=455630&pOrgNr=1",
        "name": "Einführung in die Informatik",
        "kennung": "IN0001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Informatik auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau und können mit ihnen verantwortungsvoll umgehen.\nKonzepte dieser Art sind etwa: Algorithmen, Syntax und Semantik, sowie Effizienz im Hinblick auf Speicherverbrauch oder Zeit.\nDie Teilnehmer sind dann in der Lage, in Java oder einer ähnlichen objektorientierten Sprache überschaubare algorithmische Probleme zu lösen und einfache verteilte und nebenläufige Anwendungen zu programmieren. Sie verstehen die diesen Programmiersprachen zugrundeliegenden Konzepte und Modelle und sind deshalb in der Lage, andere zuweisungs- und objektorientierte Programmiersprachen eigenständig zu erlernen.",
        "inhalt": "In dem Modul IN0001 werden beispielhaft folgende Inhalte behandelt:\n- Einführung\n++ Grundlegende Begriffe: Problem - Algorithmus - Programm\n++ Imperative Programmkonstrukte\n- Syntax und Semantik\n++ Syntax von Programmiersprachen: reguläre Ausdrücke und kontextfreie Grammatiken\n++ Semantik von Programmen: Kontrollfluss-Diagramme\n- Grundlegende Datenstrukturen I:\n++ Zahlen, Strings, Felder\n++ Sortieren durch Einfügen\n- Rekursion\n++ Binäre Suche\n++ Rekursionsarten\n- Grundlegende Datenstrukturen II:\n++ Objekte, Klassen, Methoden\n++ Listen, Keller und Schlangen\n- Objektorientierte Programmierung\n++ Vererbung\n++ abstrakte Klassen und Interfaces\n++ Polymorphie\n- Programmieren im Großen (Ausblick und Einbettung in ökonomische, gesellschaftliche und ethische Zusammenhänge)\n- Nebenläufige Programmierung und Threads",
        "voraussetzungen": "Praktikum: Grundlagen der Programmierung (IN0002) sollte gleichzeitig besucht werden",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458528&pOrgNr=1",
        "name": "Einführung in die Informatik für andere Fachrichtungen",
        "kennung": "IN8005",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an Vorlesung und Übung sind die Studierenden in der Lage, wichtige Grundbegriffe, Konzepte und Denkweisen der Informatik, speziell objektorientiertes Programmieren, Datenbanken & SQL und grundlegende Algorithmen und Datenstrukturen zu verstehen, zu überblicken und zur Entwicklung eigener Programme mit Datenbankanbindung grundlegend anwenden zu können.",
        "inhalt": "In dem Modul IN8005 werden beispielhaft folgende Inhalte behandelt:\n- Datenbankmanagementsysteme, ER-Modellierung, relationale Algebra und SQL\n- Java als Programmiersprache:\n++ Grundsätzliche Konstrukte imperativer Programmierung (if, while, for, Arrays etc.)\n++ Objektorientiertes Programmieren (Vererbung, Interfaces, Polymorphie etc.)\n++ Grundlagen von Exception Handling und Generics\n++ Code-Conventions\n++ Java Klassenbibliothek\n- Grundlegende Algorithmen und Datenstrukturen:\n++ Algorithmusbegriff, Komplexität\n++ Datenstrukturen für Sequenzen (verkettete Listen, Arrays, Stacks & Queues)\n++ Rekursion\n++ Hashing (Chaining, Probing)\n++ Suchen (Binäre Suche, balancierte Suchbäume)\n++ Sortieren (Insertion-Sort, Selection-Sort, Merge-Sort)",
        "voraussetzungen": "Empfohlene Voraussetzungen sind die Mathematikmodule des ersten Studienjahrs im Bachelor TUM-BWL sowie das Modul WI000275 'Management Science'.",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3763023&pOrgNr=1",
        "name": "Einführung in die Informatik für andere Fachrichtungen (Mathematik)",
        "kennung": "CIT1230000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss dieses Moduls sind Studierende in der Lage:\n• ER-Modellierung und relationale Modellierung verstehen und für den Entwurf einer Datenbank anwenden\n• SQL verstehen und anwenden, um Informationsanforderungen zu formalisieren und zu beantworten\n• grundlegende prozedurale Programmierung verstehen und anwenden, um Lösungen für einfache Probleme mit mathematischen Komponenten zu erstellen\n• objektorientierte Programmierung verstehen und anwenden, um einfache Probleme mit mathematischen Komponenten zu modellieren\n• die beiden oben genannten Fähigkeiten anwenden, um sich schnell in neue Programmiersprachen (z. B. Python) einzuarbeiten oder Elemente der Java-Klassenbibliothek auf Basis konkreter Anforderungen zu nutzen (z. B. im Hinblick auf parallele Programmierung, Streams, Collections, UI-Bibliotheken (z. B. Java FX). ) usw.)\n• die grundlegende zeitliche Komplexität von Algorithmen und grundlegenden Datenstrukturen (Stapel, Warteschlangen, Suchbäume) verstehen und auf Lösungen für einfache Probleme mit mathematischen Komponenten anwenden",
        "inhalt": "• Block Datenbanken:\no ER-Modellierung\no Relationale Modellierung\no Relationale Algebra\no SQL\n• Block Java:\no Prinzipien der Programmierung und objektorientierten Programmierung\no Primitive Typen und Referenztypen, Arrays\no Elementare prozedurale Programmierung (Anweisungen, Anweisungen, Deklarationen, If-Anweisungen, Schleifen, Methodenaufrufe)\no Klassen, Objekte, Methoden\no Ausnahmebehandlung, Generics\n• Block Algorithmen und Datenstrukturen:\no Algorithmuskonzept\no Elementare Komplexität, Landau-Symbole, P vs. NP\no Datenstrukturen und abstrakte Datentypen\no Datenstrukturen für Sequenzen: dynamische Arrays vs. doppelt verknüpfte Listen\no Anwendung für Sequenzen:\n- Queues: Breitensuche\n- Stacks: Rekursion und Call-Stack\no Hashing\no Suche:\n- Binäre Suche\n- Suchbäume\no Sortieren:\n- Insertion Sort, Bubble Sort, Selection Sort\n- Merge Sort",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": "2024S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=661433&pOrgNr=1",
        "name": "Einführung in die Informatik für Games Engineering",
        "kennung": "IN0031",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage, die wesentlichen Schritte bei der Entwicklung und Produktion von Spielkonzepten, insbesondere im Bereich der Preproduction und Kontentgenerierung, und die grundlegenden technischen Komponenten, wie Game Loops, Kollisionssysteme, Interaktionskonzepte und Szenen Graphen, eines Computerspiels darzulegen, sowie eigene Spielideen in einer bestehenden Entwicklungsumgebung umzusetzen.",
        "inhalt": "Grundlegende Konzepte in den Bereichen:\n- Entwicklungsgeschichte: Gaming\n- Rollen verschiedener Beitragender zur Spieleentwicklung\n- Spielgenres\n- Psychologische Grundlagen von Spielen und Ideen (Motivation, Flow, Kreativität)\n- Spielproduktion\n- Innovationen im Spielebereich\n- Ausgewählte technische Grundlagen der Spieleumsetzung (Game Engine Design, Rendering, Transformationen,\nKollisionserkennung, Künstliche Intelligenz, Nutzerschnittstelle)\n- Im Übungsbetrieb beispielhafte Umsetzung von Spielkonzepten auf Basis einer Game Engine inklusive\nprojektorientierter Anwendungen",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4061438&pOrgNr=1",
        "name": "Einführung in die Informatik für Studierende der Mathematik",
        "kennung": "CIT123000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmenden die wesentlichen Konzepte der Informatik auf einem grundlegenden aber wissenschaftlich fundierten, praxis-orientierten Niveau. Beispiele für solche Konzepte sind: Algorithmen, Syntax und Semantik, oder Effizienz im Hinblick auf Speicherverbrauch oder Zeit.\nDie Teilnehmer sind dann in der Lage, in Java oder einer ähnlichen objektorientierten Sprache überschaubare algorithmische Probleme zu lösen und einfache verteilte und nebenläufige Anwendungen zu programmieren. Sie verstehen die diesen Programmiersprachen zugrundeliegenden Konzepte und Modelle und sind deshalb in der Lage, sich andere imperative und / oder objektorientierte Programmiersprachen eigenständig anzueignen.\nDie Studierenden beherrschen die nach der erfolgreichen Teilnahme an diesem Modul Programmiersprache Java und das Programmieren im Kleinen. Sie können Programme eigenständig entwickeln und dabei wesentliche Konzepte der Informatik auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau anwenden.",
        "inhalt": "In der Vorlesung werden folgende Inhalte behandelt:\n• Grundlegende Begriffe: Problem - Algorithmus - Programm\n• Imperative Programmkonstrukte\n• Syntax und Semantik\n• Syntax von Programmiersprachen: reguläre Ausdrücke und kontextfreie Grammatiken\n• Semantik von Programmen: Kontrollfluss-Diagramme\n• Grundlegende Datenstrukturen und Algorithmen I:\n- Zahlen, Strings, Felder\n- Sortieren durch Einfügen\n- Rekursion, Rekursionsarten\n- Binäre Suche\n• Grundlegende Datenstrukturen II:\n- Objekte, Klassen, Methoden\n- Listen, Keller und Schlangen\n• Objektorientierte Programmierung\n- Vererbung\n- abstrakte Klassen und Interfaces\n- Polymorphie\n• Programmieren im Großen (Ausblick)\n• Nebenläufige Programmierung und Threads\n\nBegleitend behandelt das Programmierpraktikum\nAufgabenstellungen und ihre praktische Umsetzung in Java, die u.a. die kreative Verwendung dieser Inhalte zur Problemlösung einüben",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=768528&pOrgNr=1",
        "name": "Einführung in die Programmierung für Bioinformatiker",
        "kennung": "IN2168",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer verfügen über das zur Lösung einfacher Programmieraufgaben notwendige theoretische und praktische Wissen.\nKenntnisse\n- Linux:\n++ Aufbau der Linux-Dateisystemhierarchie\n++ wichtige und häufig benutzte Unix-Kommandozeilenwerkzeuge\n++ Aufbau von Pipes und Filtern zur Verbindung von Kommandos\n- Shell: Aufbau und Kommandos der Bash, einfache Programmierkonstrukte\n- Perl:\n++ Softwarekomponenten, Laufzeitumgebung\n++ grundlegende Syntax und Programmierkonstrukte\n++ typische Konstrukte\n++ Aufbau regulärer Ausdrücke\n++ O rganisation von Modulen\n++ wichtige Zusatzmodule\n- Java\n++ Syntax und Programmierkonstrukte\n++ Grundlagen der objektorientierten Programmierung\n++ Ableitung von Klassen und Interfaces\n++ Auto-(Un)Boxing\n++ generische Klassen\n++ Klassen zur Unterstützung von regulären Ausdrücken\n++ Klassen für den Netzwerkzugriff\n- Grundzüge der Programmentwicklung\n\nFertigkeiten und Kompetenzen:\nDie Studenten sollen mit Hilfe der vermittelten Kenntnisse in der Lage sein, einfache gestellte Probleme analysieren zu können und einen Lösungsweg vorschlagen zu können. Dieser Lösungsweg soll dann in ein lauffähiges Programm überführt werden können. Die Beherrschung dieser Grundlagen stellt eine wichtige Voraussetzung für die erfolgreiche Teilnahme am Programmierpraktikum dar.",
        "inhalt": "- einfache Linux Kommandos\n- Shell\n- Perl\n- Java",
        "voraussetzungen": "IN0003 Einführung in die Informatik 2, IN0001 Einführung in die Informatik 1",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1219520&pOrgNr=1",
        "name": "Einführung in die Programmierung mit Python",
        "kennung": "IN8026",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Studierende können automatisierte Lösungen für einfache Alltagsprobleme entwickeln und in Python implementieren. Sie kennen einschlägige Prinzipien der Informatik hinsichtlich Problemlösung und Programm-Entwicklung und können diese in der Praxis des Programmierens anwenden. Sie können Programmierung in die Fachdisziplin der Informatik und in die Werkzeugkiste von Ingenieur-Disziplinen einordnen.",
        "inhalt": "Programmieren verhält sich zu Informatik wie Schreiben zu Literatur- oder Kommunikationswissenschaft. Programmieren ist eine Fertigkeit, die überall sinnvoll eingesetzt werden kann, wo es um Automatisierungen geht, die sich mit Hilfe eines Computers ausführen oder unterstützen lassen. Das kann im Alltag sein, aber auch in fachlichen und beruflichen Kontexten. Programmieren ist eine Kulturtechnik, die Bestandteil der Allgemeinbildung sein sollte.\n\nIn diesem Kurs werden die Anfangsgründe der Programmierung anhand der Programmiersprache Python vermittelt. Es geht um grundlegende Konzepte der prozeduralen Programmierung und einen Einstieg in die objekt-orientierte Programmierung. Wir behandeln die folgenden Sprachmittel in Python:\n\neinfache Datentypen\nzusammengesetzte Datentypen (Listen, Dictionaries)\nVariablen, Ausdrücke und Wertzuweisungen\nKontrollstrukturen (bedingte Anweisungen, Schleifen)\nVerwendung vordefinierter Methoden und Klassen\nDefinition eigener Methoden\nDefinition eigener Klassen\n\nWir entwickeln Spiele, angefangen bei einfachen Spielen mit Steuerung über die Tastatur und Ausgabe auf der Konsole bis hin zu Spielen mit graphischen Animationen und Sound-Effekten. Im Kontext der Programmier-Aufgaben ergänzen wir unseren Werkzeugkasten um einschlägige fundamentale Prinzipien zu Problemlösung (Computational Thinking, algorithmisches Denken) und zu Programm-Entwicklung (Qualitätskriterien wie Lesbarkeit, Stabilität, Testbarkeit, Erweiterbarkeit).",
        "voraussetzungen": "Fähigkeit zu systematischem Arbeiten und abstraktem Denken",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": "2021W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452816&pOrgNr=1",
        "name": "Einführung in die Softwaretechnik",
        "kennung": "IN0006",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an dem Modul kennen die Studierenden die Konzepte und Methoden für die verschiedenen Phasen eines Projekts, z.B. Modellierung des Problems, Wiederverwendung von Klassen und Komponenten, und Auslieferung der Software. Sie sind in der Lage für konkrete Probleme die geeigneten Konzepte und Methoden auszuwählen und anzuwenden.\n\nDie Studierenden kennen die wichtigsten Begriffe und Vorgehensweisen der Softwaretechnik und können gegebene Probleme daraufhin analysieren und bewerten. Darüber hinaus haben sie die Fähigkeit konkrete Problemstellungen in der Softwaretechnik, z.B. mit Hilfe von Entwurfsmustern, zu lösen.",
        "inhalt": "Software-Engineering wendet systematische Konstruktionsprinzipien auf die Softwareentwicklung an, die den gesamten Lebenszyklus der Softwareerstellung umfassen, von der Definition der Anforderungen und dem Entwurf der Architektur bis hin zu Codierung, Testung, Bereitstellung, Überwachung und laufender Wartung.\n\nVorlesungseinheiten:\n\nL01 Einführung: Diese Vorlesung gibt einen grundlegenden Überblick über Software-Engineering speziell für Cloud-Umgebungen. Sie behandelt grundlegende Konzepte wie Softwareentwicklungsmethoden, Systemmodellierungstechniken, und Abstraktionsprinzipien. Darüber hinaus werden die Grundlagen des Cloud Computing, einschließlich Cloud-Infrastruktur und Dienstmodelle behandelt.\n\nL02 Systementwurfsanforderungen und Softwarearchitekturen: Diese Lerneinheit konzentriert sich auf die kritischen Aspekte des Requirements Engineering und unterscheidet zwischen funktionalen und nicht-funktionalen Anforderungen. Anschließend werden verschiedene Softwarearchitekturen wie Client-Server-, Schichten-, monolithische und Microservice-Architekturen untersucht, wobei deren Kommunikationsmechanismen und Bereitstellungsüberlegungen detailliert erläutert werden.\n\nL03 Systementwurf I: Modularität und Datenmanagement: Diese Vorlesung befasst sich mit der Komplexität des Systementwurfs, wobei der Schwerpunkt auf Modularität, Datenmanagement und Entwurfsmustern liegt. Außerdem werden verschiedene Lösungen für die Datenverwaltung untersucht.\n\nL04 Systementwurf II: Leistung, Gleichzeitigkeit und Skalierbarkeit: Diese Einheit befasst sich mit Leistungsoptimierung, Gleichzeitigkeitsmanagement und Skalierbarkeitsstrategien.\n\nL05 Systementwurf III: Sicherheit, Zuverlässigkeit und Verfügbarkeit: Diese Vorlesung konzentriert sich auf den Entwurf sicherer, zuverlässiger und hochverfügbarer Systeme.\n\nL06 Software-Tests: In dieser Einheit werden verschiedene Softwaretestmethoden zur Gewährleistung von Softwarequalität und -zuverlässigkeit untersucht. Sie deckt Unit-Tests, Integrationstests, automatisierte groß angelegte Testtechniken, Mock-Tests und Testverdopplungen ab.\n\nL07 Programmanalyse: Statische und dynamische Analyse: Diese Vorlesung behandelt Techniken der Programmanalyse, einschließlich statischer und dynamischer Analyse.\n\nL08 Softwaremanagement, Build-Systeme und DevOps: Diese Einheit deckt die wichtigsten Praktiken des Softwaremanagements ab, einschließlich Quellcodeverwaltung, Build-Systeme, Release-Management und kontinuierliche Integration/Lieferung/Deployment (CI/CD) sowie kontinuierliche Tests.\n\nL09 Software-Bereitstellung und -Überwachung: Diese Vorlesung befasst sich mit Cloud-Bereitstellungsmodellen, containerbasierter Entwicklung und Orchestrierung sowie der Überwachung von Cloud-Systemen.\n\nL10 Softwarequalität und Projektmanagement: Diese Lerneinheit umfasst Techniken der Software-Qualitätssicherung (Code-Reviews, Refactoring, formale Verifizierung) und Grundsätze des Projektmanagements.",
        "voraussetzungen": "IN0002 Grundlagenpraktikum: Programmierung",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454045&pOrgNr=1",
        "name": "Einführung in die Theoretische Informatik",
        "kennung": "IN0011",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Theoretischen Informatik auf einem grundlegenden, aber wissenschaftlichen Niveau. Teilnehmer wissen, was reguläre Ausdrücke, kontextfreie Grammatiken, die Chomsky Hierarchy, endliche Automaten und Turingmaschinen sind. Sie können gegebene formale Sprachen mit dem passenden Beschreibungsmittel definieren und sie können zeigen, falls sich eine gegebene Sprache nicht mit einem bestimmten Beschreibungsmittel definieren lässt. Sie können beweisen, dass bestimmte Beschreibungsmittel äquivalent sind und können verschiedene Beschreibungen algorithmisch ineinander transformieren. Sie können die grundlegenden Konzepte der Komplexitätstheorie erklären und können Entscheidungsprobleme unter gegebenen Komplexitätsschranken algorithmisch aufeinander reduzieren.",
        "inhalt": "Formale Sprachen, Grammatiken, Chomsky Hierarchy.\n\nReguläre Sprachen: DFA, NFA mit und ohne ε-Transitionen, reguläre Ausdrücke und Übersetzungen dazwischen; Systeme von Gleichungen zwischen Sprachen; Abschluss unter Booleschen Operationen; Ardens Lemma; Pumping Lemma; Entscheidungsprobleme; Minimierung; Satz von Myhill-Nerode.\n\nCFLs: PDAs und Übersetzungen zw. CFGs und PDAs; Beweis, dass DPDAs schwächer als PDAs sind; Abschlusseigenschaften; CYK Algorithmus; Pumping Lemma; Chomsky und Greibach Normalformen.\n\nKontextsensitive Sprachen und LBAs.\n\nBerechenbarkeit: Berechenbarkeit, Entscheidbarkeit, Halb-Entscheidbarkeit, rekursive Aufzählbarkeit und ihre Beziehungen; Existenz nichtberechenbarer Funktionen; Turing Maschinen, akzeptierte Sprachen und Typ-0 Sprachen; Äquivalenz von Turing Maschinen, While-Programmen und Goto-Programmen; Primitive und µ-rekursive Funktionen; Reduktionen zwischen Problemen; das Halteproblem; universelle Turing Maschinen; Satz von Rice und Satz von Rice-Shapiro; Unentscheidbarkeit des Postschen Korrespondenzproblems und wichtiger Probleme auf CFGs.\n\nKomplexitätstheorie: Zeit und Platzkomplexitätsklassen; Polynomialzeitreduktionen; die Klassen P und NP; NP-Vollständigkeit; Satz von Cook; wichtige NP-vollständige Probleme und Reduktionen zwischen ihnen.\n\nAlle Beweise werden behandelt.",
        "voraussetzungen": "IN0015 Diskrete Strukturen, MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=455450&pOrgNr=1",
        "name": "Einführung in die Wirtschaftsinformatik",
        "kennung": "IN0021",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage wichtige Paradigmen und Teilgebiete der Wirtschaftsinformatik zu verstehen, Wirtschaftsinformatik neben anderen Disziplinen einzuordnen und von der Informatik und Betriebswirtschaftslehre abzugrenzen. Zusätzlich verstehen die Studierenden Informationssysteme und deren Nutzen in verschiedenen Branchen. Außerdem sind sie in der Lage Modelle (insb. Prozess- und Datenmodelle) als Grundlage für die Gestaltung von Informationssystemen zu modellieren. Studierende werden in die Lage versetzt, prozessorientierte Anwendungen entwickeln können. Hierbei verstehen Studierende den gesamten Prozess von der Modellierung einer solchen Anwendung über deren Verifikation und Analyse bis hin zur Implementierung in einer Process Engine. Die Studierenden erkennen die Bedeutung von prozessorientierten Anwendungen anhand von Realweltprozessen in Produktion und Pflege/Health Care und können dadurch auch den Beitrag der Wirtschaftsinformatik für die digitale Transformation in Unternehmen einordnen. Schlussendlich verstehen die Studierenden Grundlagen der Informationssicherheit als wichtigen Aspekt der Wirtschaftsinformatik.",
        "inhalt": "‒ Grundlegende Begriffe der Wirtschaftsinformatik\n‒ Informationssysteme in Unternehmen, Modellierung betrieblicher Informationssysteme\n‒ Modellierung von Geschäftsprozessen und Daten (ERM, BPMN, EPK)\n‒ Entwicklung von prozessorientierten Anwendungen\n‒ Einsatz prozessorientierter Anwendungen in der Praxis am Beispiel von Produktion und Pflege/Health Care\n‒ Beitrag der Wirtschaftsinformatik zur digitalen Transformation\n‒ Informationssicherheit",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2863063&pOrgNr=1",
        "name": "Einführung in die wissenschaftliche Programmierung",
        "kennung": "IN8008",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage, sich an grundlegende Techniken des Rechnereinsatzes bei der Bearbeitung naturwissenschaftlich-technischer Fragestellungen zu erinnern und diese zu beschreiben.\nSie sind weiterhin in der Lage, Beispiele für Algorithmen aus dem Bereich des wissenschaftlichen Rechnens zu verstehen, sie in einer objektorientierten Programmiersprache zu implementieren sowie zur Lösung von Beispielproblemen einzusetzen und zu beurteilen (insbesondere hinsichtlich des Bedarfs an Rechenzeit und Speicherplatz, ggf. im Verhältnis zur erzielten Genauigkeit).",
        "inhalt": "Elemente der Programmierung (elementare und zusammengesetzte Datentypen, Ausdrücke und Anweisungen, Techniken zur Strukturierung von Programmen, Objektorientierung) Werkzeuge des wissenschaftlichen Rechnens, insbesondere zur Visualisierung der Berechnungsergebnisse.\nBeispiele, die einerseits den Einsatz dieser Techniken demonstrieren und gleichzeitig exemplarisch typische\nVerfahren aus den folgenden Themenbereichen vorstellen sind: Gleichungslöser, numerische Quadratur sowie gewöhnliche und partielle Differentialgleichungen.",
        "voraussetzungen": "keine Voraussetzungen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1816255&pOrgNr=1",
        "name": "Einführung in Quantum Computing",
        "kennung": "IN2381",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul beherrschen die Studierenden die Grundlagen und den mathematischen Formalismus von Quantum Computing. Sie sind in der Lage, Quanten-Algorithmen, wie z.B. Grover-Suche, zu analysieren und Quantenschaltungen für einfache Algorithmen zu entwickeln. Die Studierenden können entsprechende Software-Tools (wie Qiskit oder Cirq) anwenden, sowie mögliche Einsatzgebieten von (zukünftigen) Quantencomputern einschätzen.",
        "inhalt": "- Mathematischer Formalismus und Grundlagen der Quantenmechanik\n- Quantenschaltungen\n- Quantenteleportation\n- Bellsche Ungleichung\n- Grundlegende Quantenalgorithmen",
        "voraussetzungen": "Lineare Algebra, z.B. MA0901 Lineare Algebra für Informatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261475&pOrgNr=1",
        "name": "Einsatz und Realisierung von Datenbanksystemen",
        "kennung": "IN2031",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer beherrschen die Komponenten moderner Datenbanksysteme sowie die unterschiedlichen Einsatzgebiete moderner Datenbanksysteme im Detail, sie können die zugrundeliegenden Algorithmen und Datenstrukturen implementieren und kritisch einschätzen sowie bei realistischen Szenarien konkrete Einsatzmöglichkeiten skizzieren und kritisch bewerten. Sie sind in der Lage diese für unterschiedliche Randbedingungen weiter zu entwickeln.",
        "inhalt": "Implementierung von Datenbanksystemen\n- Transaktionsverwaltung\n- Fehlerbehandlung (Recovery)\n- Mehrbenutzersynchronisation\n- Physische Datenorganisation\n- Anfragebearbeitung (logische und physische Optimierung von Anfragen, Kostenmodelle)\n\nEinsatz von Datenbanksystemen\n- Verteilte Datenbanken\n- Betriebliche Anwendungen (OLTP, OLAP)\n- XML und Datenbanksysteme\n- Leistungsbewertung\n- Web Services",
        "voraussetzungen": "IN0008 Grundlagen: Datenbanken, IN0007 Grundlagen: Algorithmen und Datenstrukturen",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3475235&pOrgNr=1",
        "name": "Engineering Resilient Cognitive Systems",
        "kennung": "CIT4230005",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "By the end of the module, the students will be able to describe the basic concepts of resilience for cyber-physical cognitive systems and to discuss the underlying concepts of safety & reliability engineering as well as of self-adaptive software systems. In particular, the students will be able to model resilient architectures by applying dedicated engineering methodologies and using architectural patterns and tactics.",
        "inhalt": "Most cyber-physical cognitive systems such as automated vehicles have to work in highly dynamic, uncertain contexts. In consequence, it is hardly possible to engineer a safe and reliable system a-priori at design time. At the same time, safety and reliability are inevitable quality attributes. Therefore, cognitive systems must be resilient, i.e. they must be enabled to be aware of their context and their own state and to adapt themselves dynamically at runtime to their context in order to optimize their utility whilst preserving safety. Thus, resilience will play an essential for future cognitive systems.\nThe goal of this module is to understand the basic of concepts of resilient architectures for cyber-physical cognitive systems and to partly apply them to small example problems. Particularly this includes:\n\n1. Resilience: Terminology, fundamental concepts, conceptual framework\n2. Safety Architectures: Introduction to terminology and fundamental concepts of safety and reliability of software-intensive systems; architectural patterns and tactics for safety-critical systems\n3. Self-adaptive Systems: Terminology and fundamental concepts, conceptual frameworks, self-adaptive architectures, models at runtime\n4. Adaptive Resilience Management: resilience-related context awareness, dynamic risk/utility assessment, adaptation planning\n5. Learning methods: training context awareness and resilience tactics for flexible, yet safe adaptations to known and unknown contexts",
        "voraussetzungen": "Helpful, but not necessary:\nIN2309 Advanced Topics of Software Engineering\nIN2081 Patterns in Software Engineering\nIN222 Cognitive Systems\nIN2247 Functional Safety",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460623&pOrgNr=1",
        "name": "Enterprise Information Systems",
        "kennung": "IN9012",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul ist der Studierende in der Lage, den technischen Betrieb und die Anwendung von Unternehmenssoftware sowie die Integration grundlegender Geschäftsprozesse aus den Bereichen Materialwirtschaft, Vertrieb und Finanzwesen zu verstehen. Darüber hinaus ist der Studierende in der Lage die vermittelten theoretischen Grundlagen unter Verwendung von Standardsoftwarelösungen (z.B. SAP ERP, SAP BW etc.) praktisch anzuwenden.",
        "inhalt": "- Managementorientierte Betrachtung von Unternehmenssoftware\n- Einführung von Unternehmenssoftware in Unternehmen\n- Aufbau der technischen Basis von SAP-Software\n- Betrieb/Hosting von Unternehmenssoftware\n- Praktische Arbeit mit SAP-Software (mit Übungen)\n- Einblick in weiterführende Themen: Entwicklung, Business Intelligence, Integration",
        "voraussetzungen": "keine Vorkenntnisse erforderlich",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473891&pOrgNr=1",
        "name": "Entrepreneurship for Small Software-oriented Enterprises",
        "kennung": "IN9006",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss dieses Moduls sind die Studierenden mit dem Basiswissen für die erfolgreiche Gründung und das langfristige Management eines kleinen softwareorientierten Unternehmens vertraut.\nInsbesondere sind die Studierenden in der Lage\n- das Business Model Canvas zu nutzen, um ihr angestrebtes Geschäftsmodell zu konzipieren und zu detaillieren,\n- eine SWOT-Analyse ihres Geschäftsmodells durchzuführen,\n- einen Drei-Jahres-Finanzplan für ihr Startup-Unternehmen zu entwickeln,\n- ihre Start-up-Idee selbstbewusst und gründlich zu präsentieren, gestützt auf das Wissen und das Feedback, das sie erhalten haben.",
        "inhalt": "Inhalte umfassen:\n- Techniken zur Marktanalyse\n- Vorgehen bei der Finanzplanung\n- Methoden zur Entwicklung eines Business Plans\n- Konzept der \"Unique Selling Proposition\"",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457042&pOrgNr=1",
        "name": "Entwicklungspraktikum Internetbasierte Geschäftssysteme",
        "kennung": "IN2131",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Teilnehmer in der Lage Architekturen und Techniken zum Entwurf und zur Implementierung internetbasierter Informationssysteme zu bewerten. Zudem können sie Grundlagen solcher Systeme unter Verwendung etablierter Standards und Werkzeuge selbstständig entwickeln.",
        "inhalt": "Java Programmierung ObjektorienMertes Design-Web Anwendungen & Java APIs- Lösung von OpMmierungsproblemen mit Gurobi",
        "voraussetzungen": "IN0008 Grundlagen: Datenbanken, IN2085 Software Engineering für betriebliche Anwendungen - Bachelorkurs, IN0006 Einführung in die Softwaretechnik, Java oder andere objektorientierten Programmiersprache, Prinzip dynamischer Serverkomponenten oder Web-Anwen",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2862515&pOrgNr=1",
        "name": "Entwicklungspraktikum Realisierung prozessorientierter Anwendungen",
        "kennung": "IN2130",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Modulteilnahme sind die Studierenden in der Lage:\n‒ Prozesslogik in Form von BPMN zu beschreiben.\n‒ Ausführbarkeit von Prozesslogik zu verifizieren.\n‒ Prozesslogik mit Hilfe einer Open Source Process Engine ausführbar zu machen.\n‒ Eine Einbindung von menschlichen und Computing Ressourcen praktisch umzusetzen.\n‒ Message Correlation Patterns für asynchrone Kommunikation mit/zwischen prozessgestützten Systemen praktisch anzuwenden.\n‒ BPMN-basierte Prozessmodell zu parsen und zu transformieren.\n‒ Granularitätsüberlegungen bei der Umsetzung von konkreten Szenarien, z.B. im Manufacturing Umfeld mit Sensoren, Werkzeugmaschinen und Robotern, selbstständig anzustellen und umzusetzen.\n‒ Ihr Entwicklungsprojekt in verschiedenen Meilensteinen gegliedert unterschiedlichen Stakeholdern zu präsentieren.",
        "inhalt": "Das Modul führt zunächst die Grundlagen der prozessorientierten Anwendungsentwicklung ein, insbesondere zum Entwurf, Verifikation, Implementierung und Ausführung von Prozessen. Weiterhin werden Realweltbeispiele aus verschiedenen Anwendungsdomänen gezeigt. Dieser motivierende Grundlagenteil wird dann im Projektteil von den Studierenden praktisch umgesetzt und vertieft und zwar durch Prozessmodellierung in BPMN, Programmierung von Web Services, Programmierung von\nStand-alone Tools zur Prozessverifikation und Prozesstransformation (z.B. auf Basis von Petrinetzen), Verwendung einer Process Engine (hauptsächlich (cpee.org), Verwendung von Standards wie OPC-UA, XES, und Techniken aus der XML-Familie. Programmiersprachen sind frei wählbar. Der Projektteil erweitert dabei die Grundlagen insbesondere auch in Richtung weiterführender Konzepte prozessorientierter Anwendungen, etwa Arbeitslistenkonzepte und in Richtung von Anforderungen aus Anwendungsdomänen, etwa die Anbindung von Cobots und Sensoren in der Produktion. Die Studierenden gewinnen somit theoretische Einblicke und vor allem praktische Erfahrung mit prozessorientiertem Entwurf und Entwicklung in eigenständiger Weise. Dies beinhaltet auch die Präsentation der Projektergebnisse.",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik, IN0008 Grundlagen: Datenbanken, IN2085 Software Engineering für betriebliche Anwendungen - Bachelorkurs, IN2088 Softwarearchitekturen",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457038&pOrgNr=1",
        "name": "Entwicklungspraktikum Software Engineering für betriebliche Informationssysteme",
        "kennung": "IN2129",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind nach der Teilnahme an dem Modul in der Lage, im Team Methoden der objektorientierten Analyse und des objektorientierten Entwurfs in der Entwicklung einer Web-Anwendung anzuwenden. Studierende besitzen nach der Teilnahme die notwendige Kompetenz Web-Anwendungen mit aktuellen Programmiersprachen und Werkzeugen (Bibliotheken, Web-Frameworks und Datenbanken) kompetent umsetzen. Zudem sind die Studierenden in der Lage die Konzepte, Techniken und Werkzeuge zur kundenorientierten Entwicklung innovativer Web-Anwendungen zu bewerten und können diese bei der Erstellung eines entsprechenden Systems anwenden. Darüber hinaus verfügen die Studierenden nach der Teilnahme an dem Modul die Fähigkeit, eine Systemrealisierung im Team durchzuführen und die Ergebnisse zu präsentieren.",
        "inhalt": "Die Studenten realisieren in kleinen Gruppen eine innovative Web-Anwendung mittlerer Komplexität in JavaScript, CSS, HTML, o.ä. Dabei benutzen sie für Web-Anwendungen zweckhafte Bibliotheken und Frameworks zur Web-Visualisierung, Realisierung der Anwendungslogik und persistenten Datenhaltung.\nEs werden die Phasen Anforderungsanalyse und Entwurf mit Hilfe von UML durchlaufen. Die Studenten sind für das Projekt- und Qualitätsmanagement selbst verantwortlich. Die regelmäßige Präsentation des Projektfortschritts ist Bestandteil des Projekts.",
        "voraussetzungen": "IN2087 Software Engineering für betriebliche Anwendungen - Masterkurs",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457036&pOrgNr=1",
        "name": "Entwicklungspraktikum Unternehmenssoftware",
        "kennung": "IN2128",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Modulteilnahme sind die Teilnehmenden in der Lage, die Architektur moderner Unternehmenssoftware zu verstehen und eigene Erweiterungen zu modellieren und zu programmieren.\nSie können technologische und wirtschaftliche Anforderungen hinsichtlich ihrer Umsetzbarkeit in Unternehmenssoftware bewerten sowie eigene Lösungsvorschläge erarbeiten.\nZudem können Sie aktuelle Entwicklungswerkzeuge für den Entwurf, die Implementierung und die Analyse von eigenen Applikationen bedienen.\nDie Teilnehmden sind in der Lage, die Bearbeitung einer komplexen Aufgabenstellung im Team durchzuführen.",
        "inhalt": "Das Modul besteht aus einem theoretischen und einem praktischen Teil. Im theoretischen Teil werden Konzepte und domänen-spezifische Besonderheiten der Unternehmensanwendungen erläutert und gängige Entwicklungswerkzeuge aus der Informatik vorgestellt. Dabei werden Architekturen, die zugrundeliegenden Geschäftsprozesse sowie methodische Grundlagen erläutert. Zudem werden im praktischen Teil die einzelnen Lerninhalte durch Programmierübungen und weitere eigenständige Ausarbeitungen vertieft. Hierbei stehen das Umsetzen der vermittelten Konzepte auf andere Aufgabenstellungen sowie die selbstständige Aneignung zusätzlicher Konzepte zur Lösung der Aufgabenstellung im Mittelpunkt. Dies beinhaltet u.a. das Identifizieren von Problemen, das Erarbeiten von Anforderungen, sowie die Implementierung und Evaluierung eigener Lösungen. Die Studenten trainieren das eigenständige Arbeiten und die kritische Reflexion eigener Ergebnisse, sowie die Präsentation der Ideen, Konzepte und Ergebnisse in verschiedenen praxisnahen Formen.",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik, IN0008 Grundlagen: Datenbanken, IN2085 Software Engineering für betriebliche Anwendungen - Bachelorkurs, IN2088 Softwarearchitekturen, IN9012 Enterprise Information Systems vorteilhaft",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=819263&pOrgNr=1",
        "name": "Event Processing",
        "kennung": "IN2288",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Processing paradigms. Apply event processing formalisms, patterns and languages to use cases. Analyze capabilities of emerging standards and products on event processing. Know the background and theory of event processing.",
        "inhalt": "Introduction to Event Processing (EP) applications. After the module the student knows the common building blocks EP systems and can apply them. The outline of the module is as following. First, a introduction in EP is given, What EP support is required? What are the characteristics and requirements of EP? Then more theoretical background is given: Event processing terminology, theories of events & philosophical perspectives. Throughout the module multiple distributed, local, and event processing languages are presented which are then used in the course project. Additional in the lecture the following things are presented and discussed: event processing patterns, event generation, event detection, event filtering and event correlation algorithms. To model event-based systems formalisms are presented, e.g., event calculus, event algebra or Petrie nets. Additionally covered are event processing paradigms, models for event stream processing, event processing languages, Publish/Subscribe, Tuple spaces, Rule-based event processing, Trigger processing, Continuous query processing. Additional keywords which are presented are EP Languages and data models, window semantics, matching, filtering, Rete matching, staged-event driven architecture and emerging standards & products as case studies. The content is supported by examples and case studies. Also the content is practically used within the course project.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1855630&pOrgNr=1",
        "name": "Fortgeschrittene Datenverarbeitungs- und Visualisierungstechniken",
        "kennung": "IN2379",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Absolvieren des Moduls sind die Studenten in der Lage:\n- eine Pipeline für die Datenextraktion und -integration aus Biologischen Ressourcen zu erstellen\n- Techniken anzuwenden, um die Daten effizient zu verarbeiten\n- die Daten zu analysieren und entsprechende Visualisierungen ihrer Analysen zu erzeugen\n- Visualisierungstechniken anzuwenden und zu evaluieren\n- angemessene NoSQL Lösungen im Hinblick auf ihre Daten auszuwählen",
        "inhalt": "- Vektorisierte Operationen\n+ Einführung in Python\n+ Vektorisierte Operationen\n+ Effekt Vektorisierung auf Berechnungen\n- Datenbanke & Visualisierung\n+ Biologische Datenbanken\n+ Integration von biologischen Daten\n+ Verarbeitung von biologischen Daten\n+ Visuelle Datenexploration\n+ Vorhersage basierend auf biologischen Daten\n+ Jenseits von SQL: Dokumenten-orientierte Datenbanke\n+ Jenseits von SQL: Graphdatenbanken\n+ Verteilte Datenverarbeitung\n- Kommunikation der Ergebnisse\n+ Laufzeitanalyse des Codes und Optimierung von Engpässen\n+ WWW: Bereitstellung eines online-Dienstes\n+ Interaktive Visualisierungstechniken",
        "voraussetzungen": "Datenbank- und Programmierkenntnisse auf Bachelor Niveau.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2981021&pOrgNr=1",
        "name": "Fortgeschrittene Konzepte des Quantum Computing",
        "kennung": "IN2400",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul beherrschen die Studierenden fortgeschrittene Konzepte und Algorithmen im Bereich Quantum Computing, insbesondere die Quanten-Fouriertransformation, Quantenoperationen und Quanten-Fehlerkorrektur. Sie können Quanten-Fouriertransformation von anderen Algorithmen differenzieren, verstehen deren Relevanz für Ganzzahlfaktorisierung, und können Quanten-Fouriertransformation in neuen Szenarien anwenden. Zudem verstehen die Studierenden den mathematischen Formalismus von Quanten-Fehlerkorrektur und verwandten Konzepten wie den Stabilizer-Formalismus.",
        "inhalt": "- Quanten-Fouriertransformation\n- Shor-Algorithmus zur Ganzzahl-Faktorisierung\n- Quantenoperationen\n- Quanten-Fehlerkorrektur",
        "voraussetzungen": "- Einführung in Quantum Computing (IN2381)\n- Lineare Algebra, z.B. MA0901 Lineare Algebra für Informatik\n- Analysis (für Quanten-Fouriertransformation), z.B. MA0902 Analysis für Informatik\n- Grundlagen der Gruppentheorie hilfreich (für Quanten-Fehlerkorrektur), aber nicht streng erforderlich, z.B. MA2010 Algebra",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=665774&pOrgNr=1",
        "name": "Fortgeschrittene Konzepte verteilter Datenbanken - Programming Database Web Applications",
        "kennung": "IN2140",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verfügen Studierende über die notwendige Kompetenz, Webapplikationen eigenständig zu konzipieren, zu planen und umzusetzen. Des Weiteren sind sie nach der Teilnahme an dem Modul in der Lage Geschäftsmodelle im Web zu identifizieren. Sie kennen die drei Schichten einer Webapplikation (Client, Server, Datenbank) sowie die grundsätzliche Funktionsweise jeder einzelnen Schicht. Sie verfügen über eine tiefe und detaillierte Wissensbasis, welche ihnen erlaubt in anderen Konzepten dieselben Technologien zu identifizieren und zu erklären.\nDarüber hinaus sind die Studierenden in der Lage, nutzerzentrierte iterative Vorgehensmodelle zu erklären, zu bewerten und im Team anzuwenden.",
        "inhalt": "Für eine Webapplikation läuft die Benutzerschnittstelle auf einem Web Browser und Web Services werden für den Ablauf benötigt. Webapplikationen haben gewöhnlich drei Schichten: Client, Server und Datenbank. Dieser Kurs behandelt Programmiertechnologien für Webapplikationen in allen drei Schichten.\n- Client: JavaScript, VBScript, Flash, OpenLaszlo\n- Server: Java (Struts, Spring MVC, JSF), Ruby, PHP, Python, Perl\n- Datenbank: O/R mapping, SQL, XQuery\nDiese Technologien sind häufig entweder opportunistisch und unterstützen die schnelle Entwicklung und häufige Freigabe von neuen Versionen oder sie sind systematisch und unterstützen ein sorgfältiges Design und längere\nFreigabezyklen.",
        "voraussetzungen": "- IN0001: Einführung in die Informatik 1\n- IN0006: Einführung in die Softwaretechnik\n- IN0008: Grundlagen: Datenbanken",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458189&pOrgNr=1",
        "name": "Fortgeschrittene Netzwerk- und Graph-Algorithmen",
        "kennung": "IN2158",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls sind in der Lage, spezialisierte Netzwerkprobleme bezüglich Ihrer Komplexität zu bewerten und durch Anwendung fortgeschrittener Algorithmen auf Graphen zu lösen. Dazu gehört insbesondere auch die Analyse und Bewertung typischer Eigenschaften wie Robustheit bzw. Fehleranfälligkeit komplexer Netzwerke. Weiterhin sind die Teilnehmer in die Lage, Algorithmen zur Optimierung verschiedener Netzwerkparameter zu entwickeln.",
        "inhalt": "Das Modul bildet eine Vertiefung der aus den Vorlesungen \"Grundlagen: Algorithmen und Datenstrukturen\" und \"Effiziente Algorithmen und Datenstrukturen 1/2\" bekannten Graphenalgorithmen in Hinsicht auf neue algorithmische Methoden, Analyse und Anwendungsgebiete. Schwerpunkte des Moduls ist die Entwicklung von Zentralitätsindizes und zugehöriger Algorithmen sowie die Untersuchung der Dichte in (Teil-)Graphen. Es werden fortgeschrittene Algorithmen für Zusammenhangsprobleme und für das Assignment-Problem basierend auf der Ungarischen Methode entwickelt. Weitere optionale Themengebiete des Moduls sind die Graphfärbung, das Clustering, die Netzwerk-Statistik, der Netzwerk-Vergleich, algebraische Methoden, die spektrale Analyse sowie Robustheitsuntersuchungen.",
        "voraussetzungen": "IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN2003 Effiziente Algorithmen und Datenstrukturen, IN2004 Effiziente Algorithmen und Datenstrukturen II",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261731&pOrgNr=1",
        "name": "Fortgeschrittene Themen des Softwaretests",
        "kennung": "IN2084",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, die verschiedenen Aktivitäten und Artefakte des Softwaretests zu benennen und bzgl. ihrer Stärken und Schwächen zu bewerten. Sie können in gegebenen Kontexten für Systeme Testfälle konzeptuell und beispielhaft auch konkret konstruieren und analysieren und begründen, warum welche Testfälle sinnvoll sind. Sie können verschiedene testbezogene Managemententscheidungen bzgl. Prozess und Werkzeugunterstützung nachvollziehen, begründen und kritisieren.",
        "inhalt": "Grundlagen\n- Einführung\n- Begriffe und Motivation\n- Basis-Testprozess\n- Priorisierung von Tests\n- Psychologie des Testens\n\nTesten im Softwarelebenszyklus\n- Wasserfall- / V- / W- / Inkrementelles- / Spiral-Modell\n- Modul- / Komponententest\n- Integrationstest\n- Systemtest\n- Abnahmetest\n- Wartung von Tests\n- Testen von Prototypen\n\nStatisches Testen\n- Manuelle Prüfmethoden\n- Statische Analyse\n\nDynamisches Testen\n- Black-Box-Verfahren\n- White-Box-Verfahren\n- Intuitive Testfallermittelung\n\nTestmanagement\n- Risikomanagement\n- Wirtschaftlichkeit von Tests\n- Wiederverwendung\n- Fehlermanagement\n- Testplanung / -überwachung / -steuerung\n- Metriken\n- Organisation von Testteams / Qualifikationen\n- Anforderungen an das Konfigurationsmanagement\n- Normen und Standards\n\nTestwerkzeuge / Testautomatisierung\n- Typen\n- Auswahl\n- Einführung der Werkzeuge\n- \"Home built\" vs. Commercial\n- Vorstellung von Werkzeugen\n\nDieses Modul kann auch in Kombination mit dem Modul IN2114 \"Automotive Software - Methoden und Technologien\" absolviert werden.",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1231549&pOrgNr=1",
        "name": "Foundations in Data Engineering",
        "kennung": "IN2326",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden können die wesentlichen Konzepte von verteilter Datenhaltung anwenden und charakterisieren. Sie kennen Analysealgorithmen auf sehr großen, verteilten Datenmengen und können sie systematisch und qualifiziert nutzen, implementieren und bewerten. Sie können die Techniken zur Optimierung der Analyseprozesse einschätzen und kombinieren und sind in der Lage, diese für unterschiedliche Randbedingungen (z.B. Datencharakteristik, Systemarchitektur) weiter zu entwickeln. Sie wissen um die gesellschaftliche Bedeutung der erlernten Techniken.",
        "inhalt": "Datenorganisation, effiziente Analyse großer Datenmengen, verteilte Datenhaltung (abhängig von der Systemarchitektur, z.B. Mehrkernsysteme, Multiprozessorsysteme, Cluster), verteilte und parallele Datenanalyse, Statistik-gestützte Optimierung von Analyseprozessen (z.B. durch Dimensionsreduktion), map/reduce Techniken und ihre Verallgemeinerung zur verteilten Anfrageverarbeitung, Anwendungen in Systemen wie Hadoop und in NoSQL Systemen, gesellschaftliche Auswirkungen, Bedeutung von Datenschutz",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1, IN0008 Grundlagen: Datenbanken, IN0007 Grundlagen: Algorithmen und Datenstrukturen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2674325&pOrgNr=1",
        "name": "Foundations of Program and System Development",
        "kennung": "IN2078",
        "organisation": "Department Computer Science",
        "anmerkung": "Anpassungen laut Prüfungsausschuß Beschluß vom 17.07.2020",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, algebraische und axiomatische Spezifikationen einfacher IT-Systeme zu entwickeln. Sie können Spezifikationen durch schrittweise Verfeinerung ableiten. Sie verstehen die mathematischen Grundlagen abstrakter Algebra sowie der Fixpunkttheorie und können Konstruktionsprinzipien formaler Spezifikationen rechtfertigen. Sie verstehen die formalen Grundlagen objektorientierter, funktionaler und imperativer Programmierung und können klassische Korrektheitskalküle anwenden.",
        "inhalt": "System- und Programmentwicklung umfasst die Gesamtheit aller Tätigkeiten, die bei der Erstellung von Software bzw. Programmen als in einer formalen Sprache abgefasste Beschreibungen von Daten und Algorithmen zur Lösung einer Aufgabe im Sinn einer Anwendung anfallen. Eine der großen Schwierigkeiten bei der Programmentwicklung besteht in der unmissverständlichen Beschreibung und Dokumentation der einem Programm zugrunde liegenden Modelle, Theorien, Strukturen, Entscheidungen und der verwendeten Ideen und zugehörigen Beschreibungsmittel. Die Vorlesung präsentiert die wissenschaftlichen Grundlagen, und damit die logische und mathematische Fundierung der dabei auftretenden Konzepte, Modelle und Methoden. Neben diesen Modellen und Beschreibungsmitteln ist für die systematische Programmentwicklung ein methodischer Rahmen erforderlich: Entwicklungsregeln zur Durchführung von Entwicklungsschritten sowie ein Konzept, das die Schritte bei einer Programmentwicklung in eine sinnvolle Reihenfolge bringt. In der Vorlesung werden einzelne Entwicklungsschritte behandelt und der Schwerpunkt auf die methodischen und beschreibungstechnischen Grundlagen des Software Engineerings gelegt. Es werden folgende Schwerpunkte für die Modellbildung, Spezifikation, Verfeinerung und Implementierung behandelt:\n- Datenmodellierung: Abstrakte Beschreibung von Daten- und Rechenstrukturen\n- Signaturen, Algebren, Modelle und Beschreibungsmittel\n- Axiomatische Beschreibungen\n- Datentypdeklarationen und Objektmodell\n- Wechsel der Datenstruktur; schrittweise Entwicklung von Daten\n- Modellierung von Rechenvorschriften und Algorithmen:\n- funktionale Programmierung: Spezifikation, Verfeinerung und Verifikation\n- Zuweisungsorientierte Programmierung: Spezifikation, Zusicherungen, Hoare-Regeln\n- Prädikative Spezifikation, schrittweise Verfeinerung, Verifikation\n- Geflechtstrukturen\n- Spezifikation sequentieller OO-Programme",
        "voraussetzungen": "Modul IN0001: Einführung in die Informatik 1; Modul IN0003: Einführung in die Informatik 2; Modul IN0007: Grundlagen: Algorithmen und Datenstrukturen (empfohlen)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": "2023S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1338241&pOrgNr=1",
        "name": "Functional Data Structures",
        "kennung": "IN2347",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful completion of this module, students will have an\nin-depth understanding of a range of functional data structures and are able to prove properties about them with the help of a computer-based proof assistant. Students will be able to\n- select suitable implementations of functional data structures for common programming tasks,\n- design and implement new functional data structures that are based on the principles covered in the module,\n- prove the correctness and complexity of the data structures on paper and with the help of a proof assistant.",
        "inhalt": "The module introduces students to the design and analysis of data structures for functional programming languages. It assumes that the students are familiar with functional programming and with running time analysis of algorithms. The module covers a range of functional data structures with an emphasis on their precise analysis. Proofs of both functional correctness and complexity will be a core part of the module Proofs are carried out with the help of a computer-based proof assistant. An introduction to the proof assistant is part of the module.\n\nA selection of the following non-exhaustive list of data structures and\nalgorithms will be covered:\n- Sorting\n- Search trees: Unbalanced trees, AVL trees, Red-Black trees, 2-3 trees, Weight balanced trees, Splay trees, Tries\n- Other trees: Quad trees, Finger trees\n- Huffman coding\n- Priority queues: Braun trees, Leftist heaps, Skew binomial heaps, Skew heaps, Pairing heaps, Fibonacci heaps\n- Dijkstra's algorithm\n- String matching",
        "voraussetzungen": "Functional programming (IN0003 Introduction to Informatics 2); Discrete mathematics (IN0015 Discrete Structures); Data structures and algorithms (IN0007 Fundamentals of Algorithms and Data Structures)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458914&pOrgNr=1",
        "name": "Funktionale Programmierung und Verifikation",
        "kennung": "IN0003",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul verstehen die Studierenden die wesentlichen Konzepte einer funktionalen Programmiersprache. Sie können in einer funktionalen Programmiersprache überschaubare algorithmische Probleme lösen. Deshalb sind sie in der Lage, sich andere funktionale Programmiersprachen eigenständig anzueignen. Sie kennen weiterhin die wesentlichen Techniken zur Verifizierung sowohl imperativer wie funktionaler Programme und können diese auf einfache Programme anwenden.",
        "inhalt": "In dem Modul IN0003 werden beispielhaft folgende Inhalte behandelt:\n- Korrektheit imperativer Programme\n++ Verifikation nach Floyd oder Hoare\n++ Terminierung\n++ Prozeduren\n- Grundbegriffe funktionalen Programmierens\n++ Werte, Variablen, Funktionen\n++ Datenstrukturen, Pattern Matching\n++ Höhere Funktionen\n++ Polymorphe Typen\n++ Programmieren im Großen: Strukturen und Funktoren\n++ Korrektheit funktionaler Programme\n+++ Semantik funktionaler Programme\n+++ Verifikation funktionaler Programme",
        "voraussetzungen": "IN0001 Einführung in die Informatik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=674883&pOrgNr=1",
        "name": "Funktionale Sicherheit",
        "kennung": "IN2247",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, Gefahren und Risiken hinsichtlich der funktionalen Sicherheit im KFZ zu analysieren. Außerdem können sie Methoden und Konzepte der Modellbasierten Funktionsentwicklung und -absicherung anwenden. Des Weiteren können die Studierenden Entwicklungswerkzeuge klassifizieren und qualifizieren.",
        "inhalt": "Die Gewährleistung der funktionalen Sicherheit ist in den letzten Jahren zu einem wichtigen Designziel bei der Entwicklung automotiver Systeme geworden. Die 2011 verabschiedete Sicherheitsnorm ISO 26262 „Road vehicles – Functional safety“ beschreibt einen Prozessrahmen, ein Vorgehensmodell (einschl. Aktivitäten und Arbeitsprodukten) sowie anzuwendende Methoden für die Entwicklung sicherheitsrelevanter elektrischer/elektronischer Systeme (E/E Systeme) in Kraftfahrzeugen. Ihre Umsetzung soll die funktionale Sicherheit von E/E Systemen in Personenkraftwagen sicherstellen.\n\nIn der Vorlesung wird auf grundlegende Konzepte und Bestandteile der ISO 26262 eingegangen. Schwerpunkte dabei sind die Gefahren- und Riskioanalyse, die Anforderungen der Norm an die Softwareentwicklung und die Qualifizierung von Entwicklungswerkzeugen. Die Umsetzung der Konzepte wir am Beispiel der Modell-basierten Entwicklung von Steuergerätesoftware illustriert.\n\nIn der Übung werden u.a. folgende Themen vertieft:\n\n- Modell-basierte Funktionsentwicklung und –absicherung\n- Gefahren- und Riskoanalysen\n- Sicherheitsanalysen\n- Referenzprozesse für die Entwicklung von Funktionssoftware\n- Gap-Analyse eines Beispielprozesses\n- Klassifizierung und Qualifizierung von Entwicklungswerkzeugen",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2636231&pOrgNr=1",
        "name": "Funktions- und Informationssicherheit",
        "kennung": "IN2385",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The students understand fundamental concepts and approaches at implementing and arguing about safety and security in the CPS domain. They know basic forms of structured reasoning in this domain and understand commonalities and differences between safety and security arguments and their completeness. They are capable of analyzing abstract CPS w.r.t. safety and security.",
        "inhalt": "Traditionally, cyber-physical systems are developed with a strong focus on functional safety requirements. Because of ubiquitous connectivity, information security concerns have become increasingly important. In this module, we study differences and similarities between functional safety and information security in terms of concepts, methods, and standards.\nThe goal of this module is to understand the commonalities between methods for assuring safety and security, and to be able to apply them to small example problems.\n\n1. Terminology and fundamental concepts\n2. Functional Safety and safety of the intended functionality: Analysis (HARA, HAZOP, FMEA, FTA; coverage) and construction (fail safe/operational; redundancy; diversity). Safety Cases. Standards ISO26262 and 21448.\n3. Information Security: Analysis (attacker models, STRIDE, TARA) and construction (architecture, mechanisms, security-by-design). Connection of CPS to the cloud.\n4. Organizational approaches: ISO 21434 („Road vehicles – Cybersecurity engineering); Secure Development Lifecycle\n5. Certification\n6. Safety and Security: Commonalities and differences",
        "voraussetzungen": "Helpful: IT Security (IN2209), Functional Safety (IN2247), Security Engineering (IN 2178)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=708343&pOrgNr=1",
        "name": "Game Physics",
        "kennung": "IN0037",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Absolvieren des Moduls verfügen die Teilnehmer über einführende Kenntnisse in der physikalischen Simulation realer Phänomene und Effekte, die in Computerspielen immer häufiger zum Einsatz kommen. Sie kennen zahlreiche physikalische Modelle zur Beschreibung realer Phänomene, können sie bewerten und sind in der Lage, ein geeignetes Modell für die algorithmische Umsetzung auszuwählen, und die notwendigen Berechnungen durchzuführen. Sie beherrschen die algorithmische Beschreibung der Lösungsmethoden, mit dem Ziel der Integration der Methoden in Echtzeitsysteme. Ein weiteres angestrebtes Lernergebnis ist die Fähigkeit Simulationsalgorithmen und Integrationstechniken mit C++ zu implementieren.",
        "inhalt": "Grundlegende Konzepte und Methoden der Bereiche: Grundlagen der Animation, Animationstechniken, Technische Mechanik (Kinematik, Dynamik, Kontaktmechanik), Starrkörpersimulation, Methoden der Kollisionsbehandlung, Theorie der elastischen Körper-Fluidsimulation, Prinzipien der numerischen Simulation, und Partikelsysteme.",
        "voraussetzungen": "IN0038 Echzeit-Computergrafik, MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3555002&pOrgNr=1",
        "name": "Games mit Bewegung - Dein Körper als 3D Nutzerinterface",
        "kennung": "CIT3220000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls sind Studierende in der Lage, eine Auswahl aktuell am Markt verfügbarer neuartiger Interaktionsgeräte zum Motion Capturing in interaktiven Anwendungen einzusetzen.\nDesgleichen können sie einfache, animierte Charaktere\nimplementieren. Sie kennen Softwaresysteme zur Interpretation von Bewegungsdaten, sowie Komponenten einer Pipeline zum Anlernen ausgewählter Gesten. Durch den praktischen Umgang mit diesen Systemen können sie zwischen den Schwierigkeitsgraden ausgesuchter Ideen für interaktive Anwendungen differenzieren. Sowie diese mit verfügbaren Interaktionsgeräte und Gesteninterpretationssoftware umsetzen. Sie können grundlegende Probleme bei 3D Nutzerinteraktionen einordnen und in Verbindung mit den diskutierten Techniken deren Relevanz ableiten und implementieren.",
        "inhalt": "Dieses Modul führt aktuelle Techniken zum Erfassen, Verfolgen und Interagieren im drei-dimensionalen Raum ein. Anschließend werden Fragestellungen und Probleme bei Nutzerinteraktionen mit 3D UserInterfaces diskutiert.\nWährend des Seminars werden praxisnahe Aufgaben im Bereich 3D User-Interfaces und Mixed-Reality Anwendungen gestellt und in der zweiten Hälfte des Semesters in kleinen Projektteams fortgeführt. Eine Projektaufgabe wird hier hinsichtlich Konzeptionierung und Implementierung in einer interaktiven drei-dimensionalen Anwendung umgesetzt. Der Projektfortschritt wird agil und iterativ begleitet, um zeitnah Feedback zum Verlauf geben zu können. Als Abschluss werden die erarbeiten Projekte anhand von nutzerzentrierten Evaluierungsmethoden analysiert, und im Rahmen von Pair-Reviews zwischen den einzelnen Gruppen besprochen.",
        "voraussetzungen": "IN0031, IN0033",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=930144&pOrgNr=1",
        "name": "Games on Graphs",
        "kennung": "IN2296",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul kennen Studierende die grundlegenden Begriffe der Spieltheorie. Sie können die entsprechenden algorithmischen Lösungsverfahren anwenden und damit auch kleinere Spielinstanzen von Hand lösen. Weiterhin verstehen sie die entsprechenden mathematischen Werkzeuge zur allgemeinen Lösung der behandelten Spiele.",
        "inhalt": "Die Vorlesung führt in die Theorie der Spiele auf (endlichen) Graphen (rekursive Spiele mit endlichem Zustandsraum) ein.\nAnhand verschiedener Varianten von Erreichbarkeitsspielen (ohne/mit Zufall, abwechselnde/gleichzeitige Entscheidungen) werden die grundlegenden Definitionen und Verfahren aus dem Bereich der mathematischen Spieltheorie vorgestellt.\nDarauf aufbauend werden komplexere quantitative (z.B. Markov Decision processes, Discounted-payoff games, Mean-payoff games, Shapely's stochastic games) und qualitative (z.B. Parity, Rabin, Muller, Streett) Varianten diskutiert.\nAn weiterführenden Themen werden z.B. Techniken zur Reduzierung des Speicherbedarfs (z.B. BDDs), entsprechende Softwaretools (z.B. PRISM), Spiele mit partiellen Beobachtungen, Spiele auf rekursiven Graphen, Bezüge zu Logik und Mengentheorie (z.B. Gale-Stewart-Spiele und Determiniertheit nach Martin) oder die Synthese von Steuerprogrammen angesprochen.",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, IN0011 Einführung in die Theoretische Informatik, IN0015 Diskrete Strukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=557065&pOrgNr=1",
        "name": "Geometrische Modellierung und Visualisierung",
        "kennung": "IN8013",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Semesters haben sich die Studierenden ein vertieftes Wissen über die Grundlagen der Differentialgeometrie der Kurven und Flächen, die mathematische Beschreibung und Analyse von Flächen und die grundlegenden Methoden der wissenschaftlichen Visualisierung angeeignet. Die Studierenden kennen die speziellen Repräsentationen von Flächen im Bereich der Computergrafik, und sie sind mit modernen Techniken der geometrischen Modellierung, etwa Unterteilungsflächen, vertraut. Sie kennen die unterschiedlichen Stufen der Visualisierungspipeline und können die grundlegenden Methoden dieser Stufen beschreiben. Die Studierenden können existierende Techniken in Bezug auf Qualität und Effizienz analysieren und kategorisieren, und sie können neue Ansätze unter Berücksichtigung spezifischer Anforderungen modellieren und entwickeln. In der Vorlesung lernen die Studierenden verfügbare Modellierungs- und Visualisierungssysteme kennen, und sie können diese Systeme verwenden, um eigene Modelle und Visualisierungen zu erstellen.",
        "inhalt": "Einführung in the Interpolations- und Approximationstheorie sowie die Differentialgeometrie, Level-of-detail Repräsentationen, Unterteilungsflächen, Flächenrekonstruktion aus Datenfeldern, direkte und indirekte Volumenvisualisierung, Strömungsvisualisierung, Grundlagen des Rasterisierungs-basierten Rendering, lokale Beleuchtungsmodelle.",
        "voraussetzungen": "Einführung in die Informatik 1/2 für Ingenieure, Mathematik I und II, Computer Aided Modeling of Products and Processes",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1528921&pOrgNr=1",
        "name": "Geometry Processing",
        "kennung": "IN2297",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the semester the students have gained advanced knowledge concerning the mathematical foundations underlying geometric modelling and character animation, and they know the different methods which are typically used in these areas. They are familiar with the mathematical descriptions of curves and surfaces, their internal representation on a computer, and advanced modelling approaches such as subdivision techniques. They are familiar with the different stages in the character animation pipeline, and they can describe the basic methods used in each of these stages. The students can analyse and categorize availaible techniques in terms of functionality, quality and efficiency, and they can model and develop new approaches considering specific requirements. In the lecture the students learn about the different parts and functionality of commonly used modelling and animation tools, and they can use these tools to create own models and animations.",
        "inhalt": "Introduction to polynomial interpolation and approximation, parametric and implicit curve and surface representations, Spline curves and surfaces, surface subdivision schemes, CSG, surface analysis using differential geometry, level-of-detail representations, surface reconstruction from point sets, introduction to character animation, riging, scinning and layering, locomotion, motion capturing and (space-time) control, character modeling.",
        "voraussetzungen": "MA0902 Analysis for Informatics, MA0901 Linear Algebra for Informatics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2839421&pOrgNr=1",
        "name": "Geschäftsprozesstechnologien und -management",
        "kennung": "IN2105",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden mit den verschiedenen Perspektiven von Geschäftsprozessen (Kontrollfluss, Datenfluss, Ressourcen) vertraut und können diese sowohl modellieren also auch in einer prozessorientierten Anwendung umsetzen. Die Studierenden verstehen die Bedeutung der Überwachung von und der Datensammlung während der Prozesslaufzeit. Die Studierenden können grundlegende Algorithmen des Process Mining basierend auf den während der Ausführung gesammelten Prozessdaten anwenden und die Ergebnisse interpretieren. Weiterhin sind die Studierenden mit den grundlegenden Begriffen der Korrektheit und Compliance von Prozessen vertraut und verstehen, welche Seiteneffekte bei den Änderungen von Prozessen zu kontrollieren sind. Schließlich sind die Studierenden in der Lage, partnerübergreifende Prozesse (so genannte Prozess Choreographien) zu modellieren.",
        "inhalt": "Die Lehrveranstaltung beschäftigt sich mit fortschrittlichen Aspekten des Geschäftsprozessmanagements mit besonderem Blick auf grundlegende Technologien und aktuelle Forschungsthemen. Ausgehend von der prozessorientierten Entwicklung von Anwendungen werden die folgenden Themen behandelt:\n- Ressourcenverwaltung und Arbeitslistenmanagement\n- Logging und Monitoring von Geschäftsprozessen\n- Einführung in Process Mining\n- Geschäftsprozesse und Compliance\n- Anpassung von Prozessinstanzen zur Laufzeit und Evolution von Prozessen\n- Modellierung und Korrektheitsaspekte von Prozessnetzwerken/Prozesschoreographien",
        "voraussetzungen": "Bachelor\nIN0021 Einführung in die Wirtschaftsinformatik",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=936509&pOrgNr=1",
        "name": "Geschichtswelten",
        "kennung": "IN2290",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul verstehen die Studierenden die Grundregeln zur Schaffung von Storywelten und sind in der Lage das Erlernte anzuwenden, um eigene, neue Welten zu erschaffen. Die Studierenden sind ebenfalls in der Lage diese Welten in diverese Formate zu übertragen, unter Berücksichtung der Abstimmungsprozesse, die vor allem bei Games und transmedialen Formaten von besonderer Bedeutung sind.",
        "inhalt": "Storyworlds beschreiben alle Grundregeln und Eigenschaften einer fiktiven Welt, in der eine unendliche Vielzahl von Geschichten und Abenteuern erzählt werden können. Eine Storyworld ist keine Geschichte, sondern vielmehr das Universum, in dem Geschichten stattfinden. Die Bedeuting von Storywelten wächst vorallem durch Transmedia, welches auf einer in sich logisch erzählten Geschichtswelt basiert. Von dieser Welt aus können dann Derivate in den verschiedensten Formaten (Game, Film, Comic, ARG, etc.) entwickelt werden.",
        "voraussetzungen": "IN0031 Einführung in die Informatik für Games Engineering\nIN0038 Echtzeit-Computergrafik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456422&pOrgNr=1",
        "name": "Gleichungslogik und Lambda-Kalkül",
        "kennung": "IN2048",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful completion of this module, students will be able to\n- prove confluence and termination of abstract reduction systems\n- prove equalities by rewriting and by equational logic,\n- define the semantics of equational logic and to use it to disprove equalities,\n- prove confluence and termination of simple rewrite systems,\n- prove basic properties of lambda-calculus like confluence or termination,\n- express computable functions as untyped lambda-terms,\n- infer the type of an untyped lambda-term,\n- convert between typed lambda-terms and proofs.",
        "inhalt": "The following foundational concepts are covered: abstract reduction systemes; termination and confluence; signatures, terms, substitutions; rules of equational logic; semantics: algebra, validity, term algebra; correctness and completeness of equational logic; term rewriting: equivalence of term rewriting and equational logic; unification; termination proofs; confluence: critical pairs, Knuth-Bendix completion, confluence of orthogonal systems; untyped lambda calculus: lambda terms, beta and eta reduction and their confluence; lambda calculus as a programming language; typed lambda calculus: types, typing rules, let-polymorphism, Curry-Howard isomorphism.",
        "voraussetzungen": "IN0003 Introduction to Informatics 2, IN0015 Discrete Structures, IN0011 Introduction to Theory of Computation, Basic familiarity with propositional logic (boolean algebra), functional programming, discrete mathematics, computability",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452818&pOrgNr=1",
        "name": "Grundlagen: Algorithmen und Datenstrukturen",
        "kennung": "IN0007",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer beherrschen die oben genannten grundlegende Algorithmen und Datenstrukturen. Sie sind in der Lage, diese eigenständig in ihrer Komplexität zu analysieren und die entsprechenden Analysekonzepte auf verwandte algorithmische Probleme anzuwenden. Ferner sind die Teilnehmer in der Lage, die behandelten Algorithmen und Datenstrukturen einzusetzen, sie ggf. zu modifizieren und verschiedene Lösungen in ihrer Güte zu vergleichen.",
        "inhalt": "Das Modul behandelt zunächst die Grundlagen der Analyse von Effizienz bzw. Komplexität. Es werden grundlegende Begriffe, Komplexitätsmaße, die Landau-Symbole sowie verschiedene Maschinenmodelle eingeführt. Danach studiert das Modul grundlegende Datenstrukturen und algorithmische Probleme.\n- Datenstrukturen für Sequenzen: Untersucht werden dynamische Arrays, Listen, Stapel und Warteschlangen. Dabei wird jeweils die Komplexität der einzelnen Operationen hergeleitet.\n- Hashing: Im Kern werden Hashing mit Verkettung, universelles Hashing sowie verschiedenen Sondierverfahren vorgestellt. Das Modul behandelt optional perfektes Hashing und hash-basierte Algorithmen, zum Beispiel für das Problem des Mengendurchschnitts.\n- Sortieren: Das Modul wiederholt zunächst einfache Verfahren wie InsertionSort, SelectionSort und BubbleSort. Anschließend werden fortgeschrittene Verfahren wie MergeSort, HeapSort und QuickSort analysiert. Optional werden sortierbasierte Algorithmen, die untere Schranke für vergleichsbasiertes Sortieren, Rang-Selektion, RadixSort sowie externes Sortieren vorgestellt.\n- Prioritätswarteschlangen: Das Modul untersucht binäre Heaps und Binomialheaps.\n- Suchbäume: Das Modul behandelt binäre Suchbäume, AVL-Bäume und (a,b)-Bäume.\n- Graphalgorithmen: Das Modul studiert verschiedene Graphrepräsentation, Traversierungstechniken per DFS/BFS, die Berechnung von Zweifachzusammenhangskomponenten und starken Zusammenhangskomponenten, topologische Sortierung, die Berechnung von kürzesten Wegen und minimalen Spannbäumen. Optional werden Lösungsverfahren für das Traveling Salesman Problem (TSP) vorgestellt.\nIm Stoffspektrum des Moduls sind optional Datenkompressionverfahren (Huffman, Lempel-Ziv) und einfache Algorithmen für das Problem des Pattern Matchings vorgesehen.",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1, IN0015 Diskrete Strukturen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2916168&pOrgNr=1",
        "name": "Grundlagen: Betriebssysteme und Systemsoftware",
        "kennung": "IN0009",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Moduls sind die Studierenden in der Lage, die Grundlagen, Probleme und Lösungen von Betriebssystemen und der Systemsoftware zu verstehen und die aktuellen Entwicklungen einzuschätzen. Zudem verstehen sie die einzelnen Komponenten, wie zum Beispiel die Prozess- und die Speicherverwaltung, und sie können die unterschiedlichen Strategien und Verfahren analysieren und bewerten. Sie sind zudem in die Lage, die erworben Grundlagenkenntnisse direkt auf neue Entwicklungen im Bereich der Betriebssysteme sowie der Systemsoftware anzuwenden, indem sie Betriebssystemkomponenten und andere Systemsoftware selber entwickeln.",
        "inhalt": "Grundkonzepte: Betriebssysteme; Nebenläufigkeit; Parallele Programmierung; Systemnahe Programmierung (Prozesse, Speicher, Kommunikation, BM-Verwaltung; Modelle (abstrakt, formal) für Nebenläufigkeit, u.a. Petrinetze; Wechselseitiger Ausschluss, Synchronisation, Deadlocks; Compiler/Linker/Loader mit Integration von Bibliotheken, Übergang auf (geeignete) Hardware-Basis, maschinennahe Programmierung und C; I/O insbesondere zur Vorbereitung der Vernetzung)",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1 und IN0004 Einführung in die Rechnerarchitektur werden empfohlen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452820&pOrgNr=1",
        "name": "Grundlagen: Datenbanken",
        "kennung": "IN0008",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden können die wesentlichen Konzepte von relationalen Datenbanksystemen anwenden und können sie systematisch und qualifiziert nutzen und bewerten.\nDie Studierenden beherrschen die systematische Nutzung eines Datenbanksystems vom konzeptuellen Entwurf über den Implementationsentwurf zum physischen Entwurf. Sie können auch komplexe Anfragen in SQL formulieren und haben ein Grundverständnis der logischen und physischen Optimierung auf der Grundlage der Relationenalgebra. Weiterhin haben sie den sicheren Betrieb hinsichtlich Recovery, Mehrbenutzersynchronisation und Autorisierung verstanden.",
        "inhalt": "SQL, Datenintegrität, relationale Entwurfstheorie, physische Datenorganisation (Speicherorganisation, Indexstrukturen), Anfragebearbeitung, Transaktionsverwaltung, Grundzüge der Fehlerbehandlung (Recovery, Backup) und der Mehrbenutzersynchronisation, Sicherheitsaspekte (Autorisierung), XML-Datenmodellierung (optional)",
        "voraussetzungen": "IN0015 Diskrete Strukturen, IN0001 Einführung in die Informatik 1",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=758005&pOrgNr=1",
        "name": "Grundlagen der Filmproduktion mit Modellierungspraktikum",
        "kennung": "IN2283",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen beherrschen die Studierenden die wesentlichen Aspekte von Filmproduktionen (Stoffentwicklung, Finanzierung, Drehvorbereitung, Dreharbeiten, Postproduktion, Verwertung) und sind in der Lage, diese auf den Kontext von innovativen Games Konzepten umzuformen und anzuwenden. Weiterhin verstehen sie die grundlegende Funktionalität, die moderne Modellierungstools zur Verfügung stellen, und können damit selbstständig eigene geometrische Modelle entwerfen.",
        "inhalt": "Die Vorlesung vermittelt grundlegende Konzepte in den Bereichen\n- Stoffentwicklung - Von der Idee zum fertigen Drehbuch\n- Finanzierung - Drehplan, Kalkulation, Finanzierung\n- Drehvorbereitung - Vom Greenlight bis zur ersten Klappe\n- Dreharbeiten\n- Postproduktion - Bildschnitt, VFX, Sound Design, Musik, Mischung, Titel\n- Verwertung\n\nDas Praktikum vermittelt den Studierenden eine Einführung in die grundlegenden Konzepte und Funktionalität einer Modellierungssoftware. Der Fokus liegt auf dem Erlernen des Umgangs gängiger Modellierungstools. Die Übung setzt sich zusammen aus 3-5 Frontalübungen, in denen den Studierenden eine Einführung in die Software gegeben wird, und Übungsstunden, in denen 1-2 Studierende am Rechner die gestellten Aufgaben bearbeiten. Die Übung wird als Blockveranstaltung an 3 Tagen in der vorlesungsfreien Zeit abgehalten.",
        "voraussetzungen": "IN0032 Game Engine Design",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": "2024S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452806&pOrgNr=1",
        "name": "Grundlagenpraktikum: Programmierung",
        "kennung": "IN0002",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolreicher Teilnahme an diesem Modul beherrschen die Studierenden die Programmiersprache Java oder eine ähnliche objekt-orientierte Programmiersprache und das Programmieren im Kleinen. Sie können Programme eigenständig entwickeln und dabei wesentliche Konzepte der Informatik auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau anwenden, wie sie im Modul IN0001 gelehrt werden.",
        "inhalt": "Begleitend zum Modul IN0001 behandelt das Praktikum\nAufgaben, die u.a. die kreative Verwendung von:\n- grundlegenden Datenstrukturen\n- Rekursion\n- Objekten, Klassen und Methoden\n- Listen, Warteschlangen und Bäumen\n- höheren Konzepten der objektorientierten Programmierung\n- Nebenläufigkeit\nzur Problemlösung einüben.",
        "voraussetzungen": "Einführung in die Informatik 1 (IN0001) sollte gleichzeitig besucht werden",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1386201&pOrgNr=1",
        "name": "Grundlegende Algorithmen (CSE)",
        "kennung": "IN2157",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmerinnen und Teilnehmer verstehen grundlegende Algorithmen (inkl. einfacher paralleler Algorithmen) und können sie anwenden. Sie sind in der Lage, die Komplexitäts- sowie die Parallelitätseigenschaften von moderat komplexen Algorithmen zu analysieren. Für bekannte Algorithmen können sie diese Eigenschaften mit den behandelten Methoden beweisen. Die Teilnehmenden sind ferner in der Lage, die Eignung dieser Algorithmen für ein bestimmtes Problem zu untersuchen.",
        "inhalt": "Das Modul bietet eine Einführung in grundlegende sequentielle und auch parallele Algorithmen, sowie eine Einführung in die Analyse von Algorithmen. Dies umfasst insbesondere folgende Themen:\nGrundlagen: Berechnungsmodelle, Komplexitätsmaße, Schleifeninvarianten und Induktion zum Beweis der Korrektheit von Algorithmen\nSortieren: Bubble-Sort, Merge-Sort, Quick-Sort, Median-Bestimmung, untere Schranken für Sortierprobleme, paralleles Sortieren\nSuchen: Lineare und binäre Suche, Suchbäume (AVL-Bäume), Hashing, etc.\nArithmetische Probleme: parallel prefix computation, parallele Matrix- und Vektoroperationen\nGraph-Algorithmen: Graph-Traversierung, Transitive Hülle, Kürzeste Wege, Minimale Spannbäume\nAnhand der behandelten Algorithmen werden die Berechnungsmodelle, Komplexitätsmaße sowie Analyse- und Beweistechniken vorgestellt und eingeübt.",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=705979&pOrgNr=1",
        "name": "High Performance Computing - Algorithmen und Anwendungen",
        "kennung": "IN2252",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmenden kennen wichtige parallele Algorithmen aus verschiedenen Aufgabenbereichen des parallelen und Hochleistungsrechnens, insbesondere aus dem Umfeld des wissenschaftlichen Rechnens. Sie können deren Anwendbarkeit in den gängigen Szenarien beurteilen, sind mit ihren wesentlichen Leistungsmerkmalen vertraut und können insbesondere auch die parallele Skalierbarkeit dieser sowie ähnlicher Algorithmen bewerten. Die Teilnehmenden sind ferner in der Lage, bekannte Algorithmen mit Hilfe eines parallelen Programmiermodells umzusetzen.",
        "inhalt": "Die Vorlesung behandelt eine Auswahl von Algorithmen aus den folgenden klassischen Problemfeldern des wissenschaftlichen Rechnens (\"the seven dwarfs of HPC\"):\n\n- Löser für partielle Differentialgleichungen (und verwandte Problemstellungen) auf strukturierten und unstrukturieten Gittern\n- Algorithmen der numerischen linearen Algebra auf dünn- und dichtbesetzten Matrizen\n- Partikelorientierte Simulationsverfahren\n- Spektralverfahren (z.B. parallele schnelle Fouriertransformation, etc.)\n- stochastische Verfahren (Monte-Carlo-Simulation, etc.)",
        "voraussetzungen": "IN2147 Parallele Programmierung, IN2001 Algorithmen des Wissenschaftlichen Rechnens, IN2010 Modellbildung und Simulation",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": "2022W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458316&pOrgNr=1",
        "name": "High Performance Computing - Programmiermodelle und Skalierbarkeit",
        "kennung": "IN2013",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an dem Modul sind die Studierenden in der Lage, gut bzw. schlecht parallelisierbare Teile vorliegender sequentieller Algorithmen oder Programme zu identifizieren. Sie können geeignete Parallelisierungsstrategien auswählen sowie anwenden. Sie sind ferner mit den wesentlichen Charakteristika speicher- bzw. nachrichtengekoppelter paralleler Systeme und deren Programmierung vertraut, dass sie vorgegebene oder selbst entwickelte parallele Algorithmen in effiziente Programme (MPI oder OpenMP) auf solchen Systemen umsetzen können.",
        "inhalt": "- Einführung (Rechnerklassifizierung, Ebenen der Parallelität, Leistungsanalyse, Topologien)\n- Grundlagen paralleler Programme (wesentliche Begriffe, Kommunikation und Synchronisation über gemeinsamen Speicher bzw. Nachrichten, parallele Programmstrukturen, Entwurf paralleler Programme)\n- Programmierung speichergekoppelter Systeme (Cachekohärenz und Speicherkonsistenz, Variablenanalyse, Programmierung unter OpenMP)\n- Programmierung nachrichtengekoppelter Systeme (Message-Passing-Paradigma, Programmierung unter MPI)\n- Dynamische Lastverteilung (Grundbegriffe, ausgewählte Strategien, Lastverteilung mittels raumfüllender Kurven)\n- Beispiele paralleler Algorithmen (Bitonisches Sortieren, etc.)",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": "2022W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4116906&pOrgNr=1",
        "name": "High Performance Query Processing",
        "kennung": "CIT323001",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Students know how modern database engines execute queries. They are capable of implementing salable and efficient algorithms for executing analytical database queries efficiently on multi-core processors and with modern storage technologies.",
        "inhalt": "Query processing refers to the series of steps that a database system takes to execute an analytical query given a query plan. High performance query processing is about executing analytical queries with performance close to what the hardware allows. To achieve high performance, it is not enough to know about the algorithms that database systems use; one must also take features of today's processors and storage technologies into account. This course covers database query processing paradigms, algorithms, SIMD parallelization, multi-core parallelization, distributed query processing, and out-of-memory processing.",
        "voraussetzungen": "IN0008 Grundlagen: Datenbanken\nIN2118 Database Systems on Modern CPU Architectures\n(recommended)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1493752&pOrgNr=1",
        "name": "Höhere Algorithmik",
        "kennung": "IN2360",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls verfügen über vertiefte Kenntnisse verschiedener Grundprinzipien in der Entwicklung und Analyse von Algorithmen (Divide-and-Conquer, Greedy-Verfahren, dynamische Programmierung, Randomisierung) sowie zahlreiche paradigmatische Anwendungsprobleme.",
        "inhalt": "Das Modul behandelt grundlegende und klassische Themen aus dem Bereich der effizienten Algorithmen. Dabei werden zentrale Techniken des Algorithmenentwurfs und der Analyse studiert. Konkret behandelt das Modul die Methoden Divide-and-Conquer, dynamische Programmierung, Randomisierung, Greedy-Verfahren sowie amortisierte Analyse. Diese Techniken werden angewandt, um grundlegende algorithmische Probleme zu lösen. Die Agenda des Moduls umfasst die folgenden Themen.\nDivide-and-Conquer: Einführung -- deterministischer Quicksort; geometrisches Divide-and-Conquer; Problem des dichtesten Punktepaars; Schnitt von Liniensegmenten; schnelle Fourier-Transformation (FFT).\n\nEinführung in die randomisierten Algorithmen: Las-Vegas- und Monte-Carlo-Algorithmen; Primzahltest; RSA-Kryptoverfahren; Verifikation von Matrixmultiplikationen.\n\nDatenstrukturen: Treaps – randomisierte Suchbäume; universelles und perfektes Hashing; Konstruktion von Suffix-Bäumen.\n\nAmortisierte Analyse: Dynamische Tabellen; Fibonacci-Heaps.\n\nGreedy-Algorithmen: Ablaufplanung von Zeitintervallen (Intervall-Scheduling); Planung mit dem Ziel der Minimierung von Verspätungen; kürzeste Wege in Graphen.\n\nDynamische Programmierung: Matrixketteprodukt; Konstruktion von optimalen Suchbäumen; Segmentierung von Datenpunkten; Editierdistanz; approximatives String-Matching; Sequenzalignment.\n\nGraphenprobleme: Max-Fluss-Problem; Berechnung von minimalen Schnitten.\n\nKomplexität: PSPACE – eine Klasse von Problemen oberhalb NP; relaxierte Komplexitätsmaße.\n\nAusgewählte Themen: Stabile Heirat; lokale Suche; Berechnung des Medians; Routing im Hyperwürfel; die probabilistische Methode.",
        "voraussetzungen": "IN2007 Grundlagen: Algorithmen und Datenstrukturen,\nIN0015 Diskrete Strukturen,\nIN0018 Diskrete Wahrscheinlichkeitstheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=802708&pOrgNr=1",
        "name": "Image Guided Surgery",
        "kennung": "IN2286",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Participants learn the basics of medical applications in minimally invasive image guided surgery and related hybrid imaging. They gain the knowledge to understand the complex medical environment as well as its challenges in order to improve these procedures (including logistics and imaging in the operating theatre of the future). With knowledge about technology and algorithm they can model and master complex solutions. Besides the medical and technical knowledge, definition of clinical, technical projects in the field of intra operative imaging and navigation for minimal invasive surgery is the core focus during the course. Exposure to real world problems makes this a unique setup for modeling and implementing creative solutions.",
        "inhalt": "Application oriented course that starts at the actual medical application (with an interface to the department at a hospital) with limited technical background, then goes back to the theory of medical imaging and navigation in order to finally being able to apply this newly acquired knowledge for the creation of innovative approaches in medical imaging and image guided interventions.\nLecture:\n\"Basics of selected medical applications in surgery and interventional radiology\n\"Basics of intra-operative imaging and navigation\n\"Critical analysis of existing interventional imaging and minimal invasive surgery procedures and identification of innovation potential using knowledge of preoperative, diagnostic imaging and interventional navigation techniques.\n1.How is the procedure performed at the moment?\n2.How is the procedure and associated data recorded and how is the outcome of the procedure documented?\n3.How are data/information presented and how is the user interaction?\n4.Which tools are used?\n5.What is the workflow and the surgical process model?\n6.Can the procedure (inlcuding patient and therapy logistics) be improved using imaging and navigation and their correct representation (quality assurance, safety, speed, ...)?\n\nProject Assignments (3-4 Assignments in team with 3-5 students each):\n\"Finding an idea, description of the medical application and clinical challange as well as description of the planned project\n\"Draft of a project plan and analysis of the feasibility\n\"implementation of a functional prototype and presentation (including a written project plan with max. 15 pages)",
        "voraussetzungen": "None",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": "2022W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456368&pOrgNr=1",
        "name": "Image Synthesis",
        "kennung": "IN2015",
        "organisation": "Department Computer Science",
        "anmerkung": "5 Credits ab WS 14/15",
        "lernergebnisse": "After successful completion of the module, the students have gained advanced knowledge concerning the image synthesis process, including the simulation of local and global illumination effects as well as typical image and compositing operations. The students know the methods which are used in computer games, animation films, and virtual reality scenarios to simulate and render realistic illumination effects. They can analyse and categorize availaible techniques in terms of quality and efficiency, and they can model and develop new approaches considering specific requirements. The students are familiar with the functionality of commonly used image synthesis tools, they can evaluate available tools based on their functionality, and they can apply these tools to create own renderings of given models and scenes.",
        "inhalt": "Programmable graphics pipeline, graphics APIs and shader programming, multi-pass techniques, shadow techniques, ambient occlusion, hardware tessellation and displacement mapping, global illumination techniques (ray-tracing, radiosity, photon tracing), light volumes, image formats and image processing, filtering, HDRI, compositing and after effects.",
        "voraussetzungen": "IN0038 Real-time Computer Graphics or IN2017 Computer Graphics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3899490&pOrgNr=1",
        "name": "Immersive Storytelling: Games",
        "kennung": "CIT226000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an diesem Kurs kennen die Studierende unterschiedliche Elemente im Bereich des Game Design zur Vermittlung von komplexen Geschichtswelten und dessen Wirkung im Spiel. Sie können diese bewerten und gezielt implementieren.\nZusätzlich beherrschen die Studierenden das Anwenden Methoden und Algorithmen zur Implementierung von Systemen für das Entwerfen, Entwickeln und Umsetzen von interaktiven Geschichtswelten.\nDurch die Arbeit in interdisziplinären Teams mit unterschiedlichen Expertisen, entsteht ein realistischer Arbeitsablauf und Verteilung in der Produktion von Spielen. Dies ermöglicht das Verstehen von Entwicklungsprozessen und den Einsatz von agilen Methoden zum Bewerten des Projektverlaufs und das Erreichen von individuell gesetzten Zielen.",
        "inhalt": "Digitale Technologien wie die virtuelle Realität und der Einsatz moderner Rendering-Techniken sind Schlüsseltechnologien für die Gestaltung künftiger virtueller Erfahrungen im Bereich der Industrie, der Bildung und der Unterhaltungsbranche. Um diese Technologie mit interessanten Inhalten befüllen zu können, besteht ein Bedarf an glaubwürdigen Welten, welche die verschiedenen Arten an immersiver Erfahrungen bereichern können.\nIn diesem Kurs werden Grundlagen für die Entwicklung flexibler und skalierbarer Systeme vorgestellt und entwickelt, welche für komplexe Geschichtswelten erforderlich sind. Dabei lernen die Studierenden die Anforderungen und Blickwinkeln von Schriftstellern und Regisseure kennen und erwerben Kompetenzen im Bereich der kreativen Ausarbeitung von virtuellen Welten.\nBehandelt werden grundlegende Elemente im Game Design, ergänzt durch Techniken zum direkten und indirekten vermitteln von Geschichtselementen in interaktiven Medien, können die Studierende den Einsatz von Stilmitteln in der virtuellen Welt verstehen lernen und selbst erproben.\nDurch die Kombination mit Studierenden der Hochschule für Fernsehen und Film München, werden aktiv an eigenen Beispielen gearbeitet und die behandelten Themen praktisch umgesetzt und vertieft.\nWährend einer als Blockveranstaltung abgehaltenen 2 ½-Wöchigen Kombination aus Vorträgen, Interaktiven Übungen und das behandeln von Fallstudien, können bereits in Einzel und Gruppenarbeit unterschiedliche Schwerpunkte für die eigene Projektidee ausgearbeitet werden. Projektbegleitend werden gezielte Vorträge mit ergänzenden Inhalten angeboten und in regelmäßigen Abständen finden Zwischenpräsentationen der Projektgruppenmitglieder statt.",
        "voraussetzungen": "IN0031 Einführung in Informatik für Games Engineering, IN0038 Echtzeit-Computergrafik, IN0033 Interaktionsmethoden und -gerät",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1393974&pOrgNr=1",
        "name": "Indie-Games: von der Idee zum Markt",
        "kennung": "IN2353",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Modulveranstaltung ist besonders auf eine projektorientierte Verbindung von Praxis und Theorie ausgerichtet. Nach der Teilnahme an der Modulveranstaltung sind die Studierenden in der Lage zu erkennen und zu bewerten, worauf unabhängige Spieleentwickler bei der Entwicklung eines Spiels achten. Darüber hinaus können die Studierenden erkennen und bewerten, welche Faktoren für den Erfolg eines Spiels ausschlaggebend sind und welche Schritte in den Bereichen Team Bildung, Laterale Führung, Finanzierung & Financial Pitch, kreative Ideengenerierungsmethoden, Design Thinking für rapid prototyping, Game Design, Marketing & PR zu berücksichtigen sind. Zu guter Letzt bewerten die Studierenden die Auswahl von Publishing-Plattformen. Sie sind im Anschluss in der Lage das Erlernte auf vergleichbare Projekte in der Game-Industrie zu übertragen und anzuwenden. Auf Basis der Grundlagen können die Voraussetzungen für die Entwicklung eigener, neuer und erfolgreicher Indie-Games geschaffen werden. Im weiteren Verlauf sind die Studierenden in der Lage die Diversität der unterschiedlichen Disziplinen in der Spieleentwicklung zu erkennen und angemessen zu bewerten.",
        "inhalt": "In diesem Modul wird der Frage nach einer erfolgreichen Spieleentwicklung und Vermarktung eines unabhängigen Spiele-Prototypen nachgegangen. Es werden dabei verschiedene Aspekte und Grundsätze, vor allem in Bezug auf das Publishing eines Indie-Games, erläutert und erlernt:\n- Was ist ein Indie-Game aus Sicht des Inverstors?\n- Grundlagen einer erfolgreichen Projektplanung als unabhängiger Spieleentwickler\n- Zielgerichtete Konzepterstellung für ein Indie-Game\n- Analyse, Planung und Umsetzung eines Indie-Games\n- Wie und wann muss eine Investition stattfinden?\n- Was sind Kooperationen und wie werden sie um das Projekt herum gebildet?\n- Effiziente Nutzung von Expertenwissen, Bibliotheken (Unity Asset Store) und anderen Dienstleistungen\n- Wie sieht die Angebotserstellung von Umsatzanteilen aus?\n- Nach welchen Kriterien sollte die Auswahl eines geeigneten Spiels stattfinden?\n- Analyse von: Kosten-Nutzen, effektive Personalplanung, Marketing-Mix\n-Erstellung von einem Krisenkommunikation-Plan\n- Marketing durch die eigene Webseite und Erstellung der richtigen Texte, sowie Erstellung von einem Trailer für das Spiel",
        "voraussetzungen": "IN0031 Einführung in die Informatik für Games Engineering\nIN0032 Game Engine Design",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1809448&pOrgNr=1",
        "name": "Informatik Bachelor-Praktika für Management",
        "kennung": "IN8029",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer sind in der Lage, ein kleines Softwaresystem im Team zu konzipieren und zu implementieren. Sie können dabei ingenieurmäßige Methoden und Modelle aus den verschiedenen Bereichen der Informatik anwenden, um die einzelnen Phasen der Realisierung des Projekts durchzuführen. Sie kennen die Risiken und typischen Probleme in Softwareprojekten und die Methoden, damit umzugehen. Sie verfügen über die Kompetenz, über ihre Projektarbeit schriftlich und mündlich zu berichten.",
        "inhalt": "- Umsetzung eines Softwareprojekts oder -teilprojekts im Team\n- Ingenieurmäßige Methoden und Modelle zur Softwareentwicklung in verschiedenen Bereichen der Informatik\n- Techniken zur Dokumentation und Präsentation von Ergebnissen bzw. Zwischenergebnissen bei der Softwareentwicklung\n\nDieses Modul wird von verschiedenen Lehrstühlen angeboten, so dass die Fachlichkeit des Projekts aus dem Gebiet des jeweiligen Lehrstuhls stammt (z.B. Datenbanken, Informationssysteme, Netzwerke, Groupware, Grafik, Robotik, Bilderkennung).",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik, IN0008 Grundlagen: Datenbanken, IN0009 Grundlagen: Betriebssysteme und Systemsoftware, IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, elementare Programmierkenntnisse",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=556994&pOrgNr=1",
        "name": "Informatik II für Ingenieurwissenschaften",
        "kennung": "IN8012",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden beherrschen wichtige Konzepte des Software Engineering und von relationalen Datenbanksystemen und können sie systematisch nutzen. Sie können Methoden des Software-Engineering für Problembeschreibungen einsetzen, und daraus Modelle erstellen.\nInsbesondere haben sie Fertigkeiten im Bereich des Softwareentwurfs mit der objektorientierten Modellierungssprache UML. Außerdem sind sie in der Lage die Konzepte für Anwendungsprogrammierung einzusetzen. Je nach Ausrichtung in der Abhaltung wird intensiver auf den Software Engineering Aspekt (z.B. Entwurfsmuster, mobile Systeme) oder auf den Datenbankaspekt (z.B. Datenbankanwendungsprogrammierung, Relationale Entwurfstheorie) eingegangen.",
        "inhalt": "Modellierung, Objekt-orientierte Entwurfsmethoden (UML), Grundlagen des Software-Engineering (Analyse, System-Entwurf und Objekt-Entwurf), Objektrelationales-Mapping (ORM) auf relationale Anfragesprachen (SQL), Datenintegrität, Grundlagen der Fehlerbehandlung und Mehrbenutzer-Systeme, Sicherheitsaspekte (Zugriffskontrolle, Autorisierung); je nach Ausrichtung in der Abhaltung werden noch mehr Inhalte aus Software Engineering (z.B. Tests und Implementierung von großen Software-Systemen, Entwurfsmuster) oder aus Datenbanken (z.B. Implementationsentwurf für relationale Datenbanken, Recovery / Backup) gebracht.",
        "voraussetzungen": "IN8011 Einführung in die Informatik 1 für Ingenieure (MSE), Computergestützte Modellierung von Produkten und Prozessen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1809557&pOrgNr=1",
        "name": "Informatik Master-Praktika für Management",
        "kennung": "IN8030",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer beherrschen in einem anspruchsvollen Informatik-Fachgebiet die methodisch saubere Entwicklung von Informatikanwendungen, welche aus dem Gebiet des jeweiligen Lehrstuhls stammen (z.B. Datenbanken, Informationssysteme, Netzwerke, Groupware, Grafik, Robotik, Bilderkennung). Sie können anwendungsspezifische Methoden und Systeme einsetzen, die dem aktuellen Stand der Technik entsprechen. Sie können mit anderen im Team zielorientiert arbeiten und beherrschen die Techniken, um das Vorgehen zu dokumentieren und die Ergebnisse zu präsentieren.",
        "inhalt": "- Umsetzung einer größeren Softwareanwendung oder -teilanwendung im Team\n- Anwendungsspezifische Methoden und Systeme nach aktuellem Stand der Technik\n- Techniken zur Dokumentation und Präsentation von Ergebnissen bzw. Zwischenergebnissen bei der Anwendungsentwicklung\n\nDieses Modul wird von verschiedenen Lehrstühlen angeboten, so dass die Fachlichkeit der Anwendung aus dem\nGebiet des jeweiligen Lehrstuhls stammt (z.B. Datenbanken, Compilerbau, Informationssysteme, Netzwerke, Groupware, Grafik,\nRobotik, Bilderkennung).",
        "voraussetzungen": "eventuell Vorkenntnisse aus Wahlbereich nötig",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1809476&pOrgNr=1",
        "name": "Informatik Master-Seminare für Management",
        "kennung": "IN8031",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer besitzen die notwendigen methodischen und überfachlichen Fertigkeiten, sich in ein anspruchsvolles wissenschaftliches Thema im Bereich Informatik einzuarbeiten, selbständig dazu eine wissenschaftliche Seminararbeit anzufertigen, sie zu präsentieren und die Ergebnisse zu analysieren und vergleichend zu bewerten. Sie beherrschen die Arbeit mit wissenschaftlicher Literatur (recherchieren, bewerten, zitieren) und können wesentliche Aspekte in einer Ausarbeitung darstellen und in einem Vortrag präsentieren.",
        "inhalt": "- Selbständige Erarbeitung eines anspruchsvollen wissenschaftlichen Themas\n- Anfertigung einer Seminararbeit mit Quellenübersicht\n- Präsentation und Diskussion wissenschaftlicher Ergebnisse\n\nDieses Modul wird von allen IN-Lehrstühlen angeboten. Die Lehrstühle wählen geeignete Themen aus ihrem Fachgebiet und unterstützen die Studierenden beim Erlernen der fachlichen und wissenschaftlichen Fertigkeiten.",
        "voraussetzungen": "eventuell Vorkenntnisse (Wahlmodule) aus dem jeweiligenThemengebiet nötig",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473851&pOrgNr=1",
        "name": "Informatikanwendungen in der Medizin",
        "kennung": "IN2021",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmerinnen und Teilnehmer die physikalischen Grundlagen der medizinischen Bildgebung und können verschiedene Methoden der medizinischen Bildverarbeitung und computergestützten Chirurgie verstehen und bewerten. Außerdem sind sie in der Lage, Problemstellungen der Diagnose und Therapie zu identifizieren und Lösungsansätze mit den Methoden der medizinischen Bildverarbeitung, Navigation und Visualisierung zu formulieren.",
        "inhalt": "Folgende Inhalte werden beispielhaft und durch Gastvorträge von Experten lokaler Kliniken und medizintechnischer Firmen (zu ausgewählten Themen) ergänzt:\n- Überblick\n++ Informatikanwendungen in der Medizin\n++ Geschichte der Radiologie und chirurgischer Eingriffe\n- Medizinische Bildmodalitäten\n++ Röntgen\n++ Computertomographie\n++ Angiographie\n++ Kernspintomographie\n++ Ultraschall\n++ Positronen-Emissions-Tomographie\n++ optische Bildgebung\n- Computerunterstützte Systeme für die Diagnose, Therapie, Chirurgie und Nachuntersuchung\n++ Bildsegmentierung\n++ Rigide und deformierbare Bildregistrierung\n++ Trackingssysteme\n++ Visualisierung und erweiterte Realität\n\nErgänzt werden diese Themen durch Vorträge von eingeladene klinischen oder industriellen Experten.",
        "voraussetzungen": "Bachelor in Informatik, in einem naturwissenschaftlichen oder ingenieurwissenschaftlichen Fach",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456378&pOrgNr=1",
        "name": "Informatikanwendungen in der Medizin II",
        "kennung": "IN2022",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmerinnen und Teilnehmer die Grundlagen, Unterschiede und Anwendungsgebiete hochentwickelter Algorithmen zur Bildverarbeitung, Bildsegmentierung, Bildregistrierung und können diese auch in Python implementieren. Zudem verstehen sie die Grundlagen von Algorithmen des maschinellen Lernens sowie von Methoden zur 3D Volumendarstellung. Die Teilnehmerinnen und Teilnehmer sind des Weiteren in der Lage anspruchsvolle Aufgabenstellungen im Bereich der computerunterstützten Diagnose und Intervention zu verstehen und Lösungsansätze mit Hilfe der behandelten Algorithmen zu erarbeiten.",
        "inhalt": "Folgende Inhalte werden beispielhaft behandelt und ggf. durch industrielle oder klinische Fallstudien von Experten lokaler Kliniken und medizintechnischer Firmen ergänzt:\n- Bildverarbeitung\n++ Bildfilterung im Ortsbereich\n++ Bildfilterung im Frequenzbereich\n++ Bildtransformationen\n- Bildsegmentierung\n++ Pixelbasierte Verfahren\n++ Graphbasierte Verfahren und graphische Modelle\n++ Variationsmethoden\n- Bildregistrierung\n++ Intensitäts- und landmarkenbasierte Verfahren\n++ Registrierung von inter-/intra-Patientendaten und inter-/intra-Modalitäten\n++ Graphbasierte Verfahren und graphische Modelle\n++ Variationsmethoden\n- Grundlagen des maschinellen Lernens\n++ Clustering\n++ Hauptkomponentenanalyse\n- Grundlagen der 3D Volumenvisualisierung\n++ Physikalische Grundlagen\n++ Überblick über Renderingtechniken\n\nIn den Übungen gibt es die Möglichkeit für die Teilnehmenden bei der Implementation oder Anwendung der Methoden zur Lösung von realen Problemstellungen ein tieferes Verständnis zu erlangen und praktische Erfahrung zu sammeln.",
        "voraussetzungen": "IN2021 Informatikanwendungen in der Medizin, Bachelor in Informatik, in einem naturwissenschaftlichen oder ingenieurwissenschaftlichen Fach.\n\nDer Besuch von Modul IN2021 (Informatikanwendungen in der Medizin I) ist von Vorteil aber nicht zwingend erforderlich.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1518055&pOrgNr=1",
        "name": "Information Technologies and Society (IT and Society)",
        "kennung": "IN0025",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Vorlesung befähigt Studenten soziale, ökonomische und ethische Dimensionen von Informationstechnologien zu verstehen. Durch die Auseinandersetzung mit Konzepten der Sozialwissenschaften lernen die Studenten das kritische Reflektieren über den Einfluss von Informationstechnologien auf Privatheit, Vertrauen & Sicherheit, Arbeitsleben, Produktivität und Unternehmenswelt genauso wie über die Rolle von Informationstechnologien für soziale Interaktionen, Demokratie und politische Entscheidungsfindung. Die Vorlesung lehrt Studenten eine interdisziplinäre Orientierung bzgl. der Evaluierung von wichtigen IT-bezogenen Fragen, die in der heutigen Gesellschaft auftreten. Die Vorlesung dient Studenten dazu, Möglichkeiten und Hindernisse von IT in der Gesellschaft zu erkennen und Wege zu finden, diese Möglichkeiten zu stärken und Hindernisse zu überwinden.",
        "inhalt": "Die Vorlesung bietet einen Überblick über die Rolle von IT in der Gesellschaft. Besondere Schwerpunkte werden gelegt auf die Wechselwirkungen zwischen modernen Informations- und Datenanalysetechnologien und der Privatheit des Einzelnen und der Gesellschaft, und der Wahrung von Sicherheit von Daten durch Nutzer und Unternehmen. Des Weiteren werden ökonomische Auswirkungen von IT und Prinzipien der Regulierung der Auswirkungen von IT (auch an konkreten Fallbeispielen) besprochen.",
        "voraussetzungen": "Keine Voraussetzungen",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456390&pOrgNr=1",
        "name": "Informationsmanagement",
        "kennung": "IN2033",
        "organisation": "Department Computer Science",
        "anmerkung": "ab SS18 5 SWS und 6 ECTS",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage die Grundlagen des Informationsmanagements zu verstehen und die Methoden zur Ermittlung des Informationsbedarfs anzuwenden. Des Weiteren können sie die Qualität von Informationen bewerten und Modelle und Methoden des Informationsmanagements analysieren. Weiterhin sind die Studierenden nach der Teilnahme an dem Modul in der Lage die Bedeutung der Ressource \"Information\" im betrieblichen Kontext zu verstehen und die Grundlagen der IT Sicherheit zu bewerten. Außerdem können sie die Grundlagen der Referenzmodellierung analysieren.",
        "inhalt": "Modelle/Konzepte des Informationsmanagements:\n\n- Management der Informationswirtschaft\n(Management der Informationsnachfrage, der Informationsressourcen, der Informationsquellen, des Informationsangebots und der Informationsverwendung)\n\n- Management der Informationssysteme\n(Management der Daten, der Prozesse und des Anwendungslebenszyklus, Referenzmodelle)\n\n- Management der Informations- und Kommunikationstechnik\n(Wartung und Betrieb der IKT, Aneignung von IKT, Management der Speicherung und Kommunikation, Management der Sicherheit)\n\n- Führungsaufgaben des Informationsmanagements\n(Organisation des IM, Rolle des CIO, Sourcing Entscheidungen, Strategie und IM, IT Sicherheit)",
        "voraussetzungen": "Einführung in die Wirtschaftsinformatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": "2022S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1188622&pOrgNr=1",
        "name": "Informationsmanagement für Digitale Geschäftsmodelle",
        "kennung": "IN8024",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach dem Modul „Informationsmanagement für Digitale Geschäftsmodelle“ sind die Studierenden in der Lage, die Grundlagen des Informationsmanagements zu verstehen, Methoden zur Ermittlung des Informationsbedarfs anzuwenden, die Qualität von Informationen zu bewerten und Methoden der Aufwandsschätzung anzuwenden. Weiterhin sind die Studierenden in der Lage, die Bedeutung der Ressource „Information“ im betrieblichen Kontext zu verstehen, die Beziehung zwischen Informationstechnologie und Unternehmensstrategie zu analysieren und bestehende Geschäftsmodelle zu bewerten und neue Geschäftsmodelle zu entwickeln.",
        "inhalt": "Das Modul „Informationsmanagement für Digitale Geschäftsmodelle“ beschäftigt sich inhaltlich mit den Modellen und Konzepten des Informationsmanagements. Insbesondere werden dabei das Management der Informationswirtschaft (Management der Informationsnachfrage, des Informationsangebots und der Informationsverwendung), das Management der Informationssysteme (Management der Daten, der Prozesse und des Anwendungslebenszyklus), das Management der Informations- und Kommunikationstechnik\n(Wartung und Betrieb der IKT, Aneignung von IKT, Management der Speicherung und Kommunikation, Management der Prozesse, Management von Technikbündeln), die Führungsaufgaben des Informationsmanagements\n(Organisation des IM, Rolle des CIO, Sourcingentscheidungen, Geschäftsmodelle, Strategie und IM) und die Einordnung des Informationsmanagements in den Unternehmenskontext behandelt.",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458522&pOrgNr=1",
        "name": "Informationswirtschaft",
        "kennung": "IN8004",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage,\n- wichtige Begriffe und Konzepte der Informationswirtschaft zu verstehen.\n- die Bedeutung der Ressource \"Information\" im betrieblichen Kontext zu bewerten.\n- die Beziehung zwischen Informationstechnologie und Unternehmensstrategie zu verstehen.\n- die Aufgabenbereiche des Informationsmanagements im Unternehmen zu verstehen.\n- ausgewählte Konzepte des Informationsmanagements zu analysieren und vor einem betrieblichen Hintergrund zu bewerten\n- die Grundlagen der Modellierung von Informationssystemen zu verstehen und Methoden der Prozess- und Datenmodellierung anzuwenden.",
        "inhalt": "Ausgehend von dem Begriff ?Information? wird die Informationswirtschaft als Teilgebiet des Informationsmanagements umfassend behandelt. Dabei werden auf die Wechselwirkungen zwischen der Ebene der Informationswirtschaft und den weiteren Ebenen des IM-Ebenen-Modells nach Krcmar eingegangen (Informationssysteme, Informations- und Kommunikationstechnik sowie die Führungsaufgaben des Informationsmanagement). Zudem werden spezifische Aspekte der Informationswirtschaft aufgezeigt, so z.B. der Wert der Ressource Information, Fragestellungen der Informationsökonomik und der Informationsaufarbeitung, des Business Intelligence, des Wissensmanagement und der Standardisierungsökonomik.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1339018&pOrgNr=1",
        "name": "Innovationsentwicklung in der Gesundheitsbranche",
        "kennung": "IN9048",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die angestrebten Lernergebnise beinhalten:\n• Werkzeuge und Methoden, um den Innovationsgrad einer Idee zu lernen und anzuwenden,\n• Werkzeuge und Methoden, um die Innovation und ihr Marktpotential zu validieren anzuwenden,\n• Ansätze zur Durchführung von „Innovation Games“ zu lernen,\n• Das Business Model und Value Proposition Canvas anwenden zu können,\n• Methoden und Werkzeuge für das Produktmanagement und Projektmangement zu lernen, anwenden und verstehen zu können,\n• Den Medizintechnikmarkt und das Erstattungssystem zu verstehen,\n• Geschäftsentwicklung in der Biomedizin zu verstehen\n• Methoden und Werkzeuge, um eine Idee/Erfindung in eine Innovation zu überführen zu lernen und anwenden zu können,\n• Soft Skills, u.a. wie man eine Idee vor einem Kommittee/Finanzierungspartner präsentiert, zu lernen",
        "inhalt": "Das Modul befasst sich mit der Kundenentwicklung für neue Ideen in der Gesundheitsbranche mit einem Fokus auf medizinische Bildgebungssysteme, medizinische Technologien und Gesundheitsdienstleistungen. Der Fokus liegt dabei auf der Entwicklung und Validierung des Kundennutzens (Value Proposition Design) und der Systemvoraussetzungen. Studenten werden in dem Kurs lernen, Feedback von klinischen Entscheidungsträgern zu sammlen, und Methoden und Werkzeuge lernen, um Ideen schnell generieren und validieren zu können, vor allem im Hinblick auf eine erfolgreiche Produktumsetzung. Grundlagen des Medizintechnikmarkts und des Geundheitssystems werden neben den Werkzeugen für die Validierung ebenfalls vermittelt.\nDie Studenten werden in enger Zusammenarbeit mit Partnern der Münchener Universitätskliniken an echten Aufgaben arbeiten.\nZudem werden Innovation Games durchgeführt, um Ideen und Lösungen zu entwickeln, die klinische Probleme lösen und diese werden auch validiert. Das Modul soll den Studierenden am Ende eine validierte Idee liefern, die im Anschluss in einer Geschäftsgründung münden kann.",
        "voraussetzungen": "Basiswissen über die medizinische Bildgebung und Navigation sowie das Interesse am Unterschied zwischen Forschung und klinischer Anwendbarkeit sind die Grundvoraussetzungen für das Modul. Des Weiteren ist das Interesse an Teamarbeit, am Gesundheitssystem und an der Umsetzung von Erfindungen und ihrer Validierung im Hinblick auf ein mögliches Vermarktungspotential. Es ist von Vorteil, bereits eine Idee mitzubringen (zum Beispiel aus dem Image Guided Surgery Modul) und dann mit den gelernten Methoden zu validieren, ob es sich um eine echte Innovation handelt, die Marktpotenzial hat, oder nur um eine gute Idee/Erfindung.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=708256&pOrgNr=1",
        "name": "Interaktionsmethoden und -geräte",
        "kennung": "IN0033",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul haben die Studierenden einen Überblick über aktuelle Interaktionsmethoden im Bereich der Computerspiele und über die damit verbundenen Geräte. Sie kennen die Prinzipien, mit denen diese Interaktionen vom Computer wahrgenommen werden, und mit denen wiederum Feedback an die Spieler gegeben wird. Weiterhin kennen sie Metaphern, welche Spiele zur Interaktion einsetzen, und wissen wie diese evaluiert werden. Sie können aktuelle Spielinteraktionen hinsichtlich der verwendeten Ein- und Ausgabeprinzipien analysieren und eigenständig neue Spielinteraktionen ableiten und implementieren.",
        "inhalt": "Detaillierte Behandlung von Konzepten und Geräten der Mensch-Maschine-Interaktion im Umfeld von Computerspielen\n- Übersicht über aktuelle Ein- und Ausgabegeräte und –methoden\n- Übung technischer Details einzelner Ein- und Ausgabemethoden\n- Interaktionsmetaphern für Computerspiele und deren Tauglichkeit\n- Evaluation von Spieleinteraktionen.",
        "voraussetzungen": "IN0031 Einführung in Informatik für Games Engineering, IN0038 Echtzeit-Computergrafik, IN0001 Einführung in die Informatik 1, MA0901 Lineare Algebra für Informatik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=837356&pOrgNr=1",
        "name": "Interaktive Werbung",
        "kennung": "IN2289",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls sind Studierende in der Lage, grundlegende Aspekte der Planung, Finanzierung und Durchführung einer Werbefilmproduktion zu erinnern und in kleinen eigenen Projekten auch in heterogenen Teams zur Realisierung einer gewählten Projektidee anzuwenden",
        "inhalt": "Das Seminar vermittelt grundlegende Kenntnisse in den Bereichen:\n\n- Arbeitsweisen und Erfolgskriterien in der Werbebranche\n- Praktische Umsetzung von Ideenfindungsmethoden\n- Nutzung von technischen Mitteln in Werbefilmen (Special Effects, Sound), sowie Optionen der Verbreitung/Marketing (Internet)\n- Methoden, um Filmkonzepte und auch sich selbst in Kurzform effektiv (Pitsch), oder auch detailliert zu präsentieren\n- Methoden, um eine Filmidee umzusetzen (Casting, Regie, Dreh, Postproduktion, Montage)\n\nDas Projekt vermittelt Erfahrungen hinsichtlich:\n\n- Konstruktiver, effizienter Teamarbeit in sehr interdisziplinär aufgestellten Teams\n- Aufstellung und Einhaltung von Terminplänen (mit definitivem Abschlusstermin)\n- Nutzung eines gegebenen Finanzbudgets)",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1,\nIN0002 Praktikum: Grundlagen der Programmierung,\nIN0031 Einführung in Informatik für Games Engineering,\nIN0033 Interaktionsmethoden und -geräte",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=705925&pOrgNr=1",
        "name": "Interdisciplinary Guided Research at the Edge of Dynamical Systems & Scientific Computing",
        "kennung": "IN2251",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to create models for simple applications of (analytical) mechanics via the presented methods. They can understand, apply, and interprete basic ideas and concepts of the mathematical theory of finite-dimensional dynamical systems in the context of randomly perturbed ODE. Furthermore, the students are able to evaluate complex models of analytical mechanics using the presented methods as well as to understand, apply, and interprete basic algorithms of scientific computing, and to explain them in a presentation. Finally, they are able to implement relevant algorithms in a problem-oriented manner (in MATLAB).",
        "inhalt": "Part A: Dynamical Systems & Randomly Perturbed Differential Equations\n- Classical theory of ordinary differential equations (ODE) and corresponding numerics\n- Dynamical systems and stability of equilibria\n- Solution concepts of random differential equations and corresponding numerics\n- stochastic stability\n\nPart B: Algorithms of Scientific Computing\n- Reduction or partial differential equations (PDE) to systems of ODE using spatial discretisation\n- Basic numerical methods for (deterministic) ODE\n- Fourier transform\n- Discrete sine transform\n- Linear filters and generation of coloured-noise processes\n- Space-filling curves\n\nPart C: Application: Modelling seismic activities for buildings\n- Modelling the dynamics of elastic bodies\n- Relevant aspects of Software Engineering\n- Visualisation techniques",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik, IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN0019 Numerisches Programmieren",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": "2022W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460801&pOrgNr=1",
        "name": "Interdisziplinäres Projekt im Anwendungsfach Mathematik",
        "kennung": "IN2170",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden in der Lage, das erworbene Domänenwissen anzuwenden (Transferleistung) und können sich dadurch in eine Anwendungsdomäne außerhalb der Informatik einarbeiten. Sie verfügen über das grundlegende Domänenwissen in einem abgegrenzten Gebiet des Anwendungsfaches Mathematik und kennen dort die wesentlichen Konzepte und Methoden. Darüber hinaus sind die Studierenden in der Lage, in einem anspruchsvollen interdisziplinären Projekt Anforderungen zu einer Problemstellung des Anwendungsfaches unter gegebenen technischen, ökonomischen und sozialen Randbedingungen zu analysieren und entsprechende Systeme mit den Mitteln der Informatik (Anforderungsanalyse, Entwurf, Implementierung, Test) im Team zu entwickeln. Sie können dabei die wichtigen Fragestellungen mit Bezug zum Anwendungsgebiet herausarbeiten und in Abstimmung mit Experten aus dem Anwendungsfach klären. Sie sind in der Lage, den im Projekt erarbeiteten Lösungsweg so aufzubereiten, dass sie ihn den Fachleuten aus dem Anwendungsfach schriftlich und mündlich präsentieren können.",
        "inhalt": "Das Interdisziplinäre Projekt umfasst den Erwerb von Domänenwissen in einem Gebiet des Anwendungsfaches Mathematik und ein Informatikprojekt zur Lösung einer Aufgabe im Bereich des Anwendungsfaches. Themensteller eines Interdisziplinären Projektes im Anwendungsfach Mathematik sind Prüfende der Fakultät für Mathematik der TUM. Die Aufgabenstellung des Projekts steht im inhaltlichen Zusammenhang mit dem erworbenen Domänenwissen, so dass ein Teil dieses Wissens bei der Zusammenarbeit mit Fachexperten zur Lösung der Projektaufgabe Verwendung findet. Das erworbene Domänenwissen wird zudem für das spätere Berufsleben benötigt. Das Interdisziplinäre Projekt schlägt damit eine Brücke von der Informatik zum Anwendungsfach.",
        "voraussetzungen": "Das Interdisziplinäre Projekt kann eventuell auf Lernergebnisse aufbauen, die im Anwendungsfach des Bachelorstudiums erworben wurden.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1477674&pOrgNr=1",
        "name": "Interventionelle Bildgebung und -verarbeitung",
        "kennung": "IN2273",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The participants will learn about the different challenges of an interventional setup compared to a diagnostic scenario. Key concepts of interventional imaging and image processing will be presented and participants learn how to apply these in practice. Example industry and research applications will be demonstrated in order to allow the students to gain an overview on the state-of-the-art.\nAfter successful completion of this module, participants understand the key concepts of interventional imaging and image processing. They remember minimally invasive procedures and can analyze challenges associated to imaging and image visualisation. Participants are able to analyze and evaluate state-of-the-art algorithms for digital imaging and image processing and can create new methods on top of these.",
        "inhalt": "1. Clinical motivation (interventional radiology, neuroradiology, and cardiology)\n2. Interventional imaging modalities\n3. Basics of x-ray imaging\n4. Angiographic imaging in 2D\n5. Angiographic imaging in 3D: CT basics, CT reconstruction\n6. Current topics (cardiac imaging, perfusion imaging, metal artifact reduction, etc.)",
        "voraussetzungen": "CAMP 1, or other introductory lecture on image processing",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1334293&pOrgNr=1",
        "name": "Introduction to Deep Learning",
        "kennung": "IN2346",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this module, students will have acquired theoretical concepts behind neural networks, and in particular Convolutional Neural Networks, as well as experience on solving practical real-world problems with deep learning. They will be able to solve tasks such as digit recognition or image classification.",
        "inhalt": "- Introduction to the history of Deep Learning and its applications.\n- Machine learning basics 1: linear classification, maximum likelihood\n- Machine learning basics 2: logistic regression, perceptron\n- Introduction to neural networks and their optimization\n- Stochastic Gradient Descent (SGD) and Back-propagation\n- Training Neural Networks Part 1:\nregularization, activation functions, weight initialization, gradient flow, batch normalization, hyperparameter optimization\n- Training Neural Networks Part 2: parameter updates, ensembles, dropout\n- Convolutional Neural Networks, ConvLayers, Pooling, etc.\n- Applications of CNNs: e.g., object detection (from MNIST to ImageNet), visualizing CNN (DeepDream)\n- Overview and introduction to Recurrent networks and LSTMs\n- Recent developments in deep learning in the community\n- Overview of research and introduction to advanced deep learning lectures.",
        "voraussetzungen": "Programming knowledge is expected. At least one programming language should be known, preferably Python.\n\nMA0902 Analysis for Informatics\nMA0901 Linear Algebra for Informatics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1605334&pOrgNr=1",
        "name": "Introduction to Informatics for Students of Management & Technology – Programming Lab Course",
        "kennung": "IN8027",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, participants are acquainted with the programming language Java and master programming in the small. Participants are able to apply the contents taught in the module IN8005 (foundations of database-systems and SQL, foundations of object-oriented programming and Java, foundations of algorithms and data structures) for solving small to medium sized programming problems in their professional field and/or for later scientific work. Participants are acquainted with and can apply the basics of a modern agile software development process (typically Scrum) for the development of solutions to these problems and are able to collaborate with informatics professionals in analyzing and evaluating the complexity of possible software solutions for professional problem settings.\nStudents are able to complete the tasks of their project in a team environment. They solve the given task by constructively and conceptually collaborating in a team. They are able to integrate involved persons into the various tasks considering the group situation. Furthermore, the students are able to conduct solution processes through constructively and conceptually acting in a team.",
        "inhalt": "• Object-oriented software development with Java\n• SQL integration in Java\n• Agile software development processes (typically Scrum)\n• Revision control systems (typically GIT)",
        "voraussetzungen": "None.\nParticipants should attend the module IN8005: “Introduction to Informatics for Students of Management and Technology” in the same semester.",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3277242&pOrgNr=1",
        "name": "Introduction to Programming",
        "kennung": "CIT5230000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, participants understand the essential concepts of computer science on a basic, practical, but scientific level. Participants can solve manageable algorithmic problems and implement basic applications in Java or a similar object-oriented language on their own. They understand the underlying concepts and models and are therefore able to acquire skills in other object-oriented programming languages on their own.",
        "inhalt": "• Introduction\n- Basic notions: Problem – algorithm – program\n- Imperative programming constructs\n• Object-oriented programming\n- Objects, classes, methods\n- Inheritance, abstract classes, and interfaces\n- Polymorphism\n- Generics\n• Functional programming\n- Iterators and collections\n- Lambda expressions and streams\n• Data structures\n- Numbers, strings, arrays\n- Lists, stacks, queues, trees\n• Recursion\n- Binary search\n- Patterns of recursion\n• Syntax and semantics\n- Syntax of programming languages: regular expressions and context-free grammars\n- Semantics of programs: control-flow graphs\n• Programming in the large (perspectives)\n• Graphical user interfaces\n• Concurrency and Threads",
        "voraussetzungen": "None",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=936739&pOrgNr=1",
        "name": "Introduction to Surgical Robotics",
        "kennung": "IN2292",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer lernen die Grundzüge des Einsatzes von Robotik in chirurgischen Anwendungen:\n+ Abschätzung, unter welchen Voraussetzungen Robotik entscheidende Vorteile haben kann\n+ Integration der Robotik in bestehende chirurgische Arbeitsabläufe\n+ Vermittlung eines fundierten Basiswissens über die Funktionsweise, Auslegung, Spezifikation und Integration von Robotik-Systemen\n+ Konzeption und Modellierung von Lösungen für identifizierte Probleme mit Methoden der Robotik\nZentrale Inhalt ist neben diesen medizinischen und technischen Grundlagen die Definition eines klinischen Projekts mit der Zielsetzung, durch den Einsatz von Robotik bestehende chirurgische Anwendungen zu verbessern. Dieser Kurs verbindet die Übermittlung der Grundlagen mit der Möglichkeit, kreative Ideen zu modellieren und zu implementieren.",
        "inhalt": "Anwendungsorientierter Kurs, der mit der Darstellung der klinischen Anwendungen beginnt (in Kooperation mit einer Klinikabteilung). Hierbei werden sowohl konventionelle Techniken als auch Roboter-unterstützte Methoden präsentiert und gegenübergestellt. Im zweiten Schritt werden die theoretischen Grundlagen der (Medizin)-Robotik vermittelt. Schließlich soll dieses neue Wissen angewendet werden, um unter Einsatz von Roboter-unterstützten Methoden innovative Lösungen für medizinische Problemstellungen zu entwickeln.\n\nVorlesung:\n+ Grundlagen des Einsatzes von Robotik in ausgewählten medizinischen Anwendungen in der Chirurgie (Potential, Herausforderungen und Problemstellungen beim Einsatz von Robotik in der Chirurgie)\n+ Grundlagen der Robotik:\n++ System\n++ Kinematik\n++ Dynamik\n++ Mechanik\n++ Elektronik\n++ Sensorik\n++ Regelung\n++ Software-Infrastruktur\n++ Sicherheit\n++ Workflow\n++ Kalibrierung und Registrierung\n++ Benutzerschnittstelle\n+ Analyse derzeitiger Operationstechniken und aktueller Trends aus der Chirurgie und aus verwandten Bereichen (z.B. Industrie, Servicerobotik, Automobil) und Ableitung von Innovationspotential für zukünftige robotisierte Applikationen in der Chirurgie\n++ Wie werden die Verfahren derzeit durchgeführt?\n+++ Arbeitsablauf (Zeitbedarf?)\n+++ Datenaufzeichnung, „Digitale Lücken“ (Kontrolle, Wiederholbarkeit?)\n+++ Verwendete Werkzeuge\n+++ Herausforderungen (was macht den Eingriff anspruchsvoll?)\n++ Welche Technologien sind „reif“?\n+++ Sensorik, medizinische Bildgebung, Aktuatoren, Lernverfahren\n++ Entwicklung neuer robotisierter Anwendungen in der Medizin\n+++ Aufwandsabschätzung\n+++ Erste Schritte\n+++ Projektplan\n\nProjektarbeit (3-4 Teamaufgaben in Teams von 3-5 Studenten):\n++ Ideenfindung, Beschreibung der medizinischen Anwendung und des Problems, sowie des geplanten Entwicklungsvorhabens,\n++ Entwurf eines Projektplans und Analyse der Machbarkeit sowie\n++ Implementierung eines Funktionsmusters und Präsentation von diesem (inkl. Ausarbeitung eines Projektplans – max. 15 Seiten)",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3126247&pOrgNr=1",
        "name": "Inverse Problems in Medical Imaging",
        "kennung": "IN2409",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The students will learn basic mathematical tools to analyze and solve inverse problems. The aim of this lecture is to provide sufficient understanding of the underlying inverse problems and strategies for solving these problems. At the end of the lecture, the students will be able to theoretically and practically analyze, experimentally design and implement the required algorithms to solve various inverse problems in medical imaging.",
        "inhalt": "Introduction and examples of inverse problems; vector spaces; definition of inverse problem; well-posedness according to Hadamard; injection, surjection, bijection of functions; Null-space and range space of operators; linear inverse problems; eigenvalue problem; decomposition theorem; singular value decomposition; inverse methods based on length; least squares and determinancy; minimum length; the generalized inverse; nonlinear inverse problems; regularization methods and comparison of different classes; Computed Tomography; Radon transform; backprojection; Fourier-slice theorem; filtered backprojection; deconvolution methods.",
        "voraussetzungen": "Good knowledge of mathematics (Bachelor course)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456924&pOrgNr=1",
        "name": "IT und Unternehmensberatung",
        "kennung": "IN2079",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage IT-Beratungsprozesse inhaltlich und in ihren Wechselbeziehungen zu analysieren. Sie können die grundsätzlichen strategischen Entscheidungen im IT-Management und deren Implikationen bewerten. Die Teilnehmer verstehen typische Probleme der praktischen Umsetzung der IT-Beratung, wie z.B. die Definition einer IT-Strategie oder die erfolgreiche IT-Organisation, und können adäquate Lösungsansätze entwickeln und anderen gegenüber rechtfertigen.",
        "inhalt": "Das Modul verschafft den Studierenden einen Überblick über die grundsätzlichen Strukturen und aktuellen Problemstellungen der IT-Beratung. Konzepte wie z.B. IT-Strategie, IT-Governance, IT-Organisation und Prozesse werden vorgestellt. Ferner führt das Modul die Studierenden in das IT-Controlling, IT-Kosten- und IT-Wertemanagement ein. Alle Themen werden anschaulich anhand praxisrelevanten Fallbeispielen erläutert.",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik,\nIN0008 Grundlagen: Datenbanken,\nBachelor Informatik oder\nBachelor Wirtschaftsinformatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1200390&pOrgNr=1",
        "name": "IT-Recht in der öffentlichen Verwaltung: E-Government-Gesetz, IT-Sicherheit und Auftragsvergabe",
        "kennung": "IN9046",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, die grundlegenden Rahmenbedingungen des Einsatzes von IT in der öffentlichen Verwaltung zu benennen und wichtige Begriffe des IT-Rechts in der öffentlichen Verwaltung zu definieren. Darüber hinaus sind die Studierenden in der Lage, die wesentlichen Regelungen des E-Government-Gesetzes, des Rechts der IT-Sicherheit und des Rechts der IT-Auftragsvergabe zu verstehen und anzuwenden.",
        "inhalt": "- Grundlagen des IT-Rechts in der öffentlichen Verwaltung\n- E-Government-Gesetz (BayEGovG, Bundes-EGovG Bund und De-Mail-Gesetz)\n- Rechtsgrundlagen im Bereich IT-Sicherheit (Grundzüge BSI-Gesetz, TKG und TMG, Verhältnis zum BayDSG)\n- Rechtsgrundlagen der IT-Auftragsvergabe (GWB, VOL/A, VgV)\n- Besondere Vertragsbedingungen bei IT-Verträgen der öffentlichen Verwaltung (EVB-IT)",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1446511&pOrgNr=1",
        "name": "Lambda Calculus",
        "kennung": "IN2358",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful completion of this module, students will have an\nin-depth understanding of lambda calculus as a model of programming languages. They will be able to\n- prove fundamental properties of reduction in lambda calculus,\n- model common programming language data types and control constructs in lambda calculus,\n- translate between lambda terms and combinators,\n- infer a principal type of an untyped term,\n- translate between lambda terms and proofs.",
        "inhalt": "The module introduces students to lambda calculus, the foundation of many programming languages, in particular functional ones. The first half of the course introduces untyped lambda calculus. The focus is on the detailed study of the reduction rules of lambda calculus, their computational behaviour, and how to define evaluation strategies like call-by-value and call-by-name. It is shown that lambda calculus is a Turing-complete programming language. The second part of the course is dedicated to typed lambda calculi. It covers type systems prevalent in functional languages and the relationship between type systems and logic, the Curry-Howard correspondence.",
        "voraussetzungen": "Functional programming (IN0003 Introduction to Informatics 2)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2805476&pOrgNr=1",
        "name": "Legal Data Science and Informatics",
        "kennung": "IN2395",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After completing this module, students will be able to:\n- explain knowledge representation and argumentation formalisms used in AI&Law\n- explain the application of techniques from statistics, applied machine learning, and natural language processing to legal data\n- examine and critique experimental work and systems in legal data science/informatics\n- explain the planning, implementation, and evaluation of legal data science/informatics research work",
        "inhalt": "The way lawyers, Judges, corporate legal counsel, government agencies, and businesses engage with legal systems, requirements, and processes is increasingly influenced by technology. Prominent areas of practical interest are the intelligent search and analysis of legal documents, the role of machine learning in supporting legal decision making, and modeling legal processes using expertise encoded in formal rule systems. This module provides an in-depth overview of landmark research and the state of the art in applying data science and artificial intelligence methods to tasks and problems arising in and around the public and private practice of law.\n\nLegal decision making, legal data, and legal documents in particular challenge many mainstream modeling and analysis techniques. Hence, the module is intended to be taken by (1) broadly interested students from technical majors interested in challenging interdisciplinary work, and (2) political science / business / law students seeking to enhance their understanding of how new technologies can shape their field.\n\nThe module consists of a mix of lectures, discussion sessions, and small practical workshops following a thematic progression:\n- Introduction to legal systems, legal reasoning, and the impact of AI on legal practice\n- Basics of machine learning and natural language processing (NLP) (intended as a primer/refresher for nontechnical students; largely tailored to specific legal applications contexts)\n- Case- and rule-based formalisms of legal reasoning\n- Legal data analytics, including case outcome prediction and empirical legal studies\n- Equal treatment imperatives and fair machine learning\n- Applications of NLP on legal text",
        "voraussetzungen": "- IN0002: Fundamentals of Programming\n- IN8026: Einführung in die Programmierung mit Python / Introduction to Programming with Python (or equivalent; students must be able to autonomously work with Jupyter notebooks in the Python ecosystem)\n- IN0018: Diskrete Wahrscheinlichkeitstheorie / Discrete Probability Theory (or equivalent; students must be able to work with basic concepts from probability and statistics)\n- Willingness/ability to work intensively across disciplines (reading legal text, drafting specifications, programming, and domain-specific data analysis)\n- IN2332: Statistical Modeling and Machine Learning\n- IN2062: Grundlagen der künstlichen Intelligenz / Foundations of Artificial Intelligence",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3501529&pOrgNr=1",
        "name": "Lernen durch Lehren: Programmierkurse an Schulen",
        "kennung": "CIT6230000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls können die Teilnehmer:\n- Begeisterung für Informatik vermitteln\n- Grundlegende Programmierkenntnisse an Menschen ohne IT-Erfahrung vermitteln\n- Digitale Präsentationstechniken und Online-Moderationsmethoden anwenden\n- Mit Menschen kommunizieren, kollaborieren und auf deren individuelle Bedürfnisse eingehen, die nicht mit der IT vertraut sind\n- Jugendlichen Selbstwirksamkeit als Vorbild vorleben\n- Die Bedeutung grundlegender IT-Fähigkeiten, Digitalisierungsfertigkeiten und Medienkompetenz vermitteln\n- Die Bedeutung von Kreativität und kritisches Denken sowie einer positiven Fehlerkultur weitergeben",
        "inhalt": "Dieser Praxis-Kurs findet vollständig virtuell statt. Teilnehmende inspirieren Schülerinnen und Schüler mit Programmierkursen auf einfachem Niveau. Durch kleine Programme und Spiele vermitteln sie Jugendlichen Einblicke in digitale Themen, stärken ihre IT-Kompetenzen und teilen ihre Leidenschaft für ihre Studienwahl. Die Teilnehmenden arbeiten in Teams und betreuen selbstständig Jugendlichen einer Schulklasse. Sie verbessern ihre Kommunikation zu IT-Themen mit Jugendlichen ohne IT-Erfahrung, wenden Präsentationstechniken an, üben Moderationsfähigkeiten und trainieren Kreativität in neuen Situationen. Die Dozierenden des Kurses bereiten die Teilnehmenden für den Einsatz vor: mit praxiserprobten und didaktisch fundierten Konzepten für Programmierkurse in unterschiedlichen Sprachen und Themen wie z.B. Scratch, HTML, Python, Bash und Swift.",
        "voraussetzungen": "- Grundlegende Programmierkenntnisse (IN0001 und IN0002 oder vergleichbar)\n- Bereitschaft, sich in Technologien (wie z.B. Scratch, HTML, Python, Bash oder Swift) auf Einstiegsniveau einzuarbeiten\n- Deutsch Kenntnisse (Mindestens B2)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2917679&pOrgNr=1",
        "name": "Level Engineering: Methoden und Werkzeuge für die Erstellung von Spielumgebungen und Level Design",
        "kennung": "IN2402",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul sind die Studierenden in der Lage ingenieurwissenschaftliche Ansätze für die Entwicklung von Spielumgebungen systematisch anzuwenden. Die Studierenden verstehen die Gestaltung von Spielumgebungen innerhalb der professionellen Prozesse in der Spieleentwicklung. Die Studierenden können Spielwelten eigenständig und strukturiert erstellen und auch bewerten. In Verbindung mit Software können eigenständig Lösungsansätze in Form von Tools für unterschiedliche Herausforderungen des Design- und Entwicklungsprozesses entworfen und umgesetzt werden.",
        "inhalt": "Spielumgebungen sind ein fundamentaler Aspekt von Spielen. Level Designer beschäftigen sich mit dem Erstellen von Spielumgebungen, in der der Spieler mit dem Spiel interagiert.\n\nIn diesem Fach „Level Engineering“ setzen sich die Studierenden mit der systematischen Anwendung ingenieurwissenschaftlicher Ansätze für die Entwicklung von Spielumgebungen auseinander. Die Studierenden lernen die Grundlagen von Level Design und 3D Nutzerschnittstellen. Anhand von aktuellen Beispielen aus industrieüblichen Spielprojekten beschäftigen sich die Studierenden mit ingenieurwissenschaftlichen Methoden und Tools für die Konzeptionierung und Entwicklung von Spielumgebungen für Computerspiele.\n\nThemenschwerpunkte sind:\n• Einführung in Level Design\n◦ Grundkenntnisse über die Rolle des Level Design im Kontext von Spieleentwicklungsprozessen, vor allem auch mit Blick auf Schnittstellen zu anderen Aspekten von Spielen und Bereiche der Spieleentwicklung.\n◦ Designprinzipien für Spielumgebungen\n◦ Balance zwischen ästhetischer Gestaltung, Gameplay und Performance\n• 3D Nutzerschnittstellen\n◦ Der Zusammenhang von Level Design und klassischen 3D Nutzerschnittstellen (Travel Techniques, Camera Control, Wayfinding, etc.)\n◦ Grundlagen von 3D Nutzerschnittstellen im Kontext von Spielumgebungen\n• Einführung in Tool Engineering für Game Engines\n• “Level Engineering”-Methoden und Tools\n◦ Dokumente in der Spieleentwicklung.\n◦ Erstellung von Prototypen für Spieleumgebungen\n◦ Die Entwicklung und Anwendung komplexer Software und Tools zur Unterstützung des Design- und Entwicklungsprozesses.",
        "voraussetzungen": "IN0031 Einführung in Informatik für Games Engineering, IN0038 Echtzeit-Computergrafik, IN0033 Interaktionsmethoden und -geräte",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456426&pOrgNr=1",
        "name": "Logik",
        "kennung": "IN2049",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The students understand the fundamental difference between syntax and semantics. In particular, they are able to perform proofs in a deductive system and can prove the soundness and completeness of that system w.r.t. a semantics. They understand the limitations of logic and the relationship between logic and computability. In particular they can prove the undecidability of some basic problem like validity of formulas. They can formalize problems in informatics or mathematics in logic and can solve them algorithmically using decision or semi-decision procedures like resolution.",
        "inhalt": "In the context of propositional and predicate logic the following basic notions are covered:\n- Syntax and semantics\n- Proof system and proof search\n- Soundness and completeness\n- Decidability\n- Expressiveness\n\nPossible further topics (non exhaustive):\n- Proof systems\n- Automated theorem proving\n- Verification\n- Decision procedures\n- Prolog\n- Data base theory\n- Higher-order logic\n- Set theory\n- Constructive logic\n- Fuzzy logic.",
        "voraussetzungen": "IN0015 Discrete Structures, IN0011 Introduction to Theory of Computation, IN0003 Introduction to Informatics 2, basic knowledge of propositional logic (boolean algebra) and discrete mathematics",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456537&pOrgNr=1",
        "name": "Machine Learning",
        "kennung": "IN2064",
        "organisation": "Department Computer Science",
        "anmerkung": "ab WS12/13 8 Credits",
        "lernergebnisse": "Nach dem Bestehen des Moduls verstehen die Teilnehmer und Teilnehmerinnen die probabilistischen Grundlagen des maschinellen Lernens und verfügen über Kenntnisse zu essentiellen Lernalgorithmen; sie sind in der Lage, bei gegebener Problemstellung geeignete Algorithmen auszuwählen, zu beschreiben und herzuleiten.",
        "inhalt": "Wahrscheinlichkeitstheorie; kNN & k-means; lineare Methoden; Bayes-Regel, MLE-Schätzer, MAP-Schätzer, Erwartungs-Maximierung, nichtlineare neuronale Netze und Fehlerpropagierung, Mixturmodelle, Stützvektormaschinen, stochastische Suche, unüberwachtes Lernen",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik, IN0018 Diskrete Wahrscheinlichkeitstheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1799629&pOrgNr=1",
        "name": "Machine Learning for Graphs and Sequential Data",
        "kennung": "IN2323",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of this module, students will be able to describe data\nmining and machine learning methods and their applicability for complex data types.\nThe students will get to know concepts for handling non-independent data in machine\nlearning models. Furthermore, the students will be able to understand, apply, and\nevaluate principles for analyzing complex data such as graphs, network data, and\ntemporal data.",
        "inhalt": "1. Introduction\n* Machine Learning, Data Mining Process\n* Basic Terminology\n\n2. Sequential Data\n* ML models for text data and temporal data\n* Autoregressive Models\n* Markov Chains, HMMs\n* Embeddings (e.g. Word2Vec)\n* Neural Networks (e.g. RNN, LSTM, ConvNets, Transformer)\n* Temporal Point Processes\n\n3. Graphs & Networks\n* Laws, Patterns\n* (Deep) Generative Models for Graphs\n* Spectral Methods\n* Ranking (e.g., PageRank, HITS)\n* Community Detection\n* Node/Graph Classification\n* Label Propagation\n* Graph Neural Networks\n* (Unsupervised) Node Embeddings\n\n4. Robustness\n* Adversarial Examples\n* Improving Robustness\n* Certifiable Robustness",
        "voraussetzungen": "Core modules from the Bachelor’s Informatics, semester 1-4 & knowledge of machine\nlearning principles (e.g. lecture IN2064)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2806034&pOrgNr=1",
        "name": "Machine Learning for Regulatory Genomics",
        "kennung": "IN2393",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Gene expression refers to how cells read the information encoded in genomes. At the end of the module students are able to:\n1. Describe major steps of gene expression from accessing DNA to determining protein abundance.\n2. Describe genome-wide assays employed to assess various steps of gene expression\n3. Describe the concept of massively parallel reporter assays\n4. Describe and apply deep learning methods to perform sequence-based predictions\n5. Describe and apply the concept of model interpretation\n6. Describe and apply the concept of convolutional neural network\n7. Describe and apply the concept of transformers\n8. Apply deep learning for sequence-based modeling of a genome-wide assay. Evaluate model performance and provide biological interpretation of its application to real data.",
        "inhalt": "This is a two-part module: (1) Six lectures\nintroduce biological mechanisms, experimental assays, and computational models for regulatory genomics. The six lectures are supported with modeling exercises in python. This is followed by (2) an eight-week hands-on project.\n\nThe lectures are organized around steps of gene expression:\n- Introduction to gene regulation and sequence-based computational models of gene regulation\n- Transcriptional regulation\n- Chromatin-mediated regulation\n- RNA splicing\n- RNA modification and degradation\n- Translation\n\nOver these lectures, computational methods are introduced including:\n- Fitting procedures of deep neural network\n- Convolutional Neural Networks\n- LSTM and transformers\n- Embeddings for sequence data\n- Multi-task learning and transfer learning\n- End-to-end learning\n- Analytical and visualisation techniques for model interpretation",
        "voraussetzungen": "Bachelor in mathematics, bioinformatics, computer science,\nphysics, statistics or a related field. One lecture on machine\nlearning (e.g IN2064; MA4802). Strong interest in\nbiological and biomedical research questions.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2808442&pOrgNr=1",
        "name": "Machine Learning for 3D Geometry",
        "kennung": "IN2392",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this module, students will have gained advanced knowledge of theoretical concepts behind machine learning techniques for 3D geometric data, including deep learning architectures for both discriminative and generative tasks on 3D shapes and scenes. In addition to the theory, students are introduced to practical implementations of aforementioned approaches and familiarize themselves with them by execution in real-world applications.",
        "inhalt": "Geometric Foundations; Recap of machine learning and graphical models; Shape descriptors, shape similarity, shape segmentation and labeling; Shape modeling, reconstruction, and synthesis; Deep learning for multi-view, volumetric, point cloud, and graph data",
        "voraussetzungen": "IN2346 Introduction to Deep Learning\nMA0901 Lineare Algebra für Informatiker",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1695463&pOrgNr=1",
        "name": "Masterpraktikum Bioinformatik",
        "kennung": "IN2370",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul sind die\nStudierenden in der Lage, sich eigenständig und\nsystematisch im Team in ein klar umrissenes\nForschungsthema einzuarbeiten, das daraus\nresultierende Forschungsprojekt im Detail\nsowohl inhaltlich zu spezifizieren als auch\nzeitlich zu planen, dieses dann dementsprechend\numzusetzen (ggf. Anpassungen am Plan\nvorzunehmen) und die erzielten Ergebnisse zu\nbewerten und zu diskutieren sowie die Resultate\nzu präsentieren.\nDie Studierenden können selbständig und in\nGruppen die Thematik und den biologischen bzw.\nbiotechnologischen Hintergrund eines\nForschungsthemas (wie z.B. Proteinstruktur- und\nFunktionsvorhersage, Epigenomics,\nTrankriptomics, Analyse von NGS-Daten,\nVorhersage und Analyse regulatorischer\nNetzwerke, genetisch bedingte Krankheiten)\nmithilfe eines aktuellen Literaturstudiums und\nVorträgen erarbeiten. Sie können daraus ein\nkonkretes Forschungsprojekt spezifizieren, die\nzugehörigen Meilensteine samt Zeitplan\ndefinieren, so dass diese in einem Team von 3-5\nMitgliedern in der vorgegeben Zeit bearbeitet\nwerden können. Die Studierenden können die für\ndie Lösung benötigten bioinformatischen\nMethoden (wie z.B. das Mapping, differentielle\nExpression, Splicing Detection, Enrichment\nAnalysis und Pathway Mapping für NGS) und\nexistierende Softwaretools bzw.\nSoftwareplattformen recherchieren, bewerten,\nauswählen, anwenden und in der Regel an die\ngegebenen Anforderungen anpassen bzw. neu\nentwerfen und darauf aufbauend, ein\nProgrammpaket zur Lösung entwickeln. Die\nStudierenden können die erzielten Ergebnisse\nevaluieren, zugehörige Gold-Standards\nauswählen, die Ergebnisse daran validieren\nsowie diese Resultate in einem Vortrag\npräsentieren und im Rahmen eines\nwissenschaftlichen Diskurses diskutieren und\ndiese dann im Stile einer wissenschaftlichen\nPublikation zusammenfassen.",
        "inhalt": "Der thematische Schwerpunkt wird jeweils vom\nausrichtenden Lehrstuhl vorgegeben. Er\norientiert sich an aktuellen Forschungsthemen\nder Lehrstühle der Bioinformatik (z.B. -omics\nDatenanalyse, System-biologie, Analyse und\nInterpretation biologischer Netzwerke, Analyse\nvon Proteinstruktur- und Proteinfunktionsdaten,\ngenetisch bedingte Krankheiten) und an\naktuellen Forschungsfragestellungen der\nBioinformatik (z.B. der Sequenzierung des\nmenschlichen Genoms, dem Aufkommen neuer\nTechniken wie DNA-Chips oder der neuen\nGeneration von Genom- und Transkriptom-\nSequenzierung und der Veröffentlichung neuer\numfassender Datensätze wie ENCODE,\nEpigenomics Roadmap und TCGA). Themen sind\nauch die Vorbereitung und Beteiligung an\ninternationalen Bioinformatikwettbewerben wie\nCASP (Proteinstrukturvorhersage), BioCreative\n(Text Mining), DREAM (Analyse von Netzwerken,\nExpression und komplexer Krankheiten).",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2990448&pOrgNr=1",
        "name": "Masterpraktikum Computational Science and Engineering",
        "kennung": "IN2397",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind in der Lage, in einem anspruchsvollen Teilgebiet des Wissenschaftlichen Rechnens Simulationsanwendungen und –Pipelines methodisch sauber zu entwickeln. Hierzu gehört, dass sie die unterschiedlichen Phasen der Simulationspipeline im Wissenschaftlichen Rechnen durchlaufen und bearbeiten können (Modellierung, Diskretisierung, numerische Löser, Software-Entwicklung, parallele Implementierung und Optimierung, Simulationsläufe und Auswertung der Ergebnisse).\nSie können anwendungsspezifische Methoden und Systeme einsetzen, die dem aktuellen Stand der Technik entsprechen.\n\nSie sind in der Lage, Simulationsaufgaben im Team zielorientiert zu bearbeiten und sich dabei gewinnbringend zu verständigen. Sie können im Team Teilaufgaben identifizieren, delegieren und in das gemeinsame Projekt integrieren. Dazu gehört, dass sie verschiedene Meinungen und Ansichten diskutieren und berücksichtigen können. Sie können die Korrektheit, Reproduzierbarkeit und Vertrauenswürdigkeit der erzielten Ergebnisse gemäß anerkannter Best Practices der Wissenschaftlichen und allgemeinen Öffentlichkeit diskutieren und bewerten.\n\nSie beherrschen die Arbeitstechniken, um das Vorgehen innerhalb einer Simulationspipeline korrekt zu dokumentieren. Sie sind in der Lage, die Ergebnisse auf den wesentlichen Kern reduziert in anschaulicher und verständlicher Weise einem Fachpublikum zu präsentieren.",
        "inhalt": "- Umsetzung bzw. Einsetzen einer größeren Simulations-Softwareanwendung oder -teilanwendung im Team\n- Anwendungsspezifische Methoden und Systeme nach aktuellem Stand der Technik in einem interdisziplinären Umfeld\n- Postprocessing und Auswertung der erzielten Simulationsergebnisse\n- Diskussion der Korrektheit und Verlässlichkeit der erzielten Ergebnisse; Sicherstellung der Reproduzierbarkeit von Ergebnissen.\n- Techniken zur Dokumentation und Präsentation von Ergebnissen bzw. Zwischenergebnissen bei der Anwendungsentwicklung\n\nDas Praktikum wird von verschiedenen Dozent*innen angeboten, so dass die Fachlichkeit der Anwendung aus deren jeweiligem Forschungsgebiet stammt.",
        "voraussetzungen": "Je nach Ausprägung eventuell Vorkenntnisse aus Wahlbereich nötig.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458554&pOrgNr=1",
        "name": "Master's Thesis (CSE)",
        "kennung": "IN2192",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful completion of a Master's Thesis the participants are able to quickly acquaint themselves with topics in Computational Science and Engineering. Given a concrete problem statement, they are able to analyze and evaluate the essential aspects in the field of CSE, necessary for a successful solution. They are able to span, describe and categorize the space of possible solutions, and to choose a well-founded solution on the basis of given or self-developed criteria. They are able to create a solution and to describe and discuss it concisely.",
        "inhalt": "Under guidance of a supervisor, participants get familiar with a topic of CSE. They are given a problem statement, which is kept rather general, i.e., no details have been specified. They investigate and evaluate different approaches to a solution, and choose one which they implement. The accompanying written document captures the essential aspects of the topic, discusses the different approaches to solution, justifies the choice of the way towards a solution, and describes the latter. This module is being offered by all chairs. The chairs choose well-suited topics from their area of expertise, usually a small part of their ongoing research projects. They assist students in acquiring scientific abilities, in exploring an aspect of a topic in depth, and in answering an isolated and yet general problem statement with scientific means, based on the preceding exploration.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=936744&pOrgNr=1",
        "name": "Medical Augmented Reality",
        "kennung": "IN2293",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "In-situ visualization in medical augmented reality (AR) enables the registered view of virtual data such as a 3D CT scan, with a video view of the real anatomy of a patient. Data can be aligned with the required accuracy such that surgeons do not have to analyze data on an external monitor in the operating room. Instead, surgeons get a direct view onto and into the patient. Mental registration of medical imagery with the operation site is not necessary anymore. Augmenting medical images and virtual surgical instruments within the body provides the most intuitive way to understand the patient’s anatomy within the region of interest. This allows for the development of completely new generations of surgical navigation systems. Our Chair for Computer Aided Medical Procedures (CAMP) is one of the strongest and leading research centers for medical AR world-wide, featuring the world’s most accurate video-see-through AR system based on a head-mounted-display. Also, CAMP has developed the world’s first AR-enabled C-arm, CamC, which has already been tested in clinical trials in Munich. The objectives of this lecture are to have students learn the theoretical basics and practical aspects of augmented reality solutions related to the medical field. The content of the lectures are outlined below.",
        "inhalt": "Lecture:\n+ Basics of intra-operative imaging and navigation.\n+ Camera calibration using multi-view approaches.\n+ Different tracking technologies including: RGB and infrared cameras, optical trackers, Kinect.\n+ Projective geometry basics including transformations and reconstruction.\n+ Review of multimodal registration, visualization and user interfaces.\n+ Real-examples using head mounted display (HMDs), Camera augmented mobile C-arm (CamC) and, intraoperative gamma probes coupled with AR capabilities, AR magic mirror for anatomy education.\n+ Includes visits to the Navigated Augmented Reality Visualization Systems Laboratory, Chirurgische Klinik und Poliklinik Innenstadt; and IFL: Interdisziplinäres Forschungslabor, Klinikum rechts der Isar.\n\nExercises (every two weeks):\n+ Using MatLab or C++\n+ Implementation of lecture course topics with students in groups of 2.",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=557078&pOrgNr=1",
        "name": "Medizintechnik Entrepreneurship",
        "kennung": "IN9038",
        "organisation": "Department Computer Science",
        "anmerkung": "Ab SS 2011 4 statt 2 Credits",
        "lernergebnisse": "Nach Besuch dieses Moduls sind die Teilnehmer in der Lage einen Business Plans im Bereich Medical Imaging zu erstellen. Sie haben einen Überblick über spezielle Richtlinien, insbesondere hinsichtlich Soft- und Hardwarezertifizierung und verstehen Grundlagen zur Teambildung für Unternehmensgründung, zur Patentierung, Marketing, Vertrieb, und Finanzkonzepte für Unternehmen im Bereich Medical Imaging.",
        "inhalt": "- Grundlagen zu Lebenswissenschaften und Medical Imaging\n- Qualifikation eines Medical Imaging Entrepreneur\n- Notwendige Kriterien eines Start-up Unternehmens\n- Grundlagen für Patentierung, Marketing, vertrieb, Finanzen\n- Grundlagen zur Erstellung eines Business Plans\n- Unternehmensfinanzierung\n- 2 Teamaufgaben: (a) Ideefindung, Beschreibung und Entwicklungsvorhaben, (b) Entwurf eines kleinen Business Plans (max. 20 Seiten)",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=756539&pOrgNr=1",
        "name": "Middleware und verteilte Systeme",
        "kennung": "IN2258",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "1. Understand common pitfalls that determine the development of distributed applications.\n2. Apply basic programming abstractions for building distributed applications (e.g., sockets, messaging, remote procedure call).\n3. Understand characteristics and properties of common middleware abstractions.\n4. Apply higher-level middleware abstractions for building distributed applications (e.g., publish/subscribe, transactions).\n5. Evaluate the applicability of common middleware abstractions in building distributed application architectures.\n6. Understand patterns applicable for implementing middleware abstractions.",
        "inhalt": "A \"middleware system\" is a programming abstraction and constitutes a set of services that aim at facilitating the development of distributed applications in heterogeneous, networked environments. The primary objectives of middleware are to foster application portability, distributed application interoperability, and facilitate software system integration. At least conceptually, the \"middleware layer\" comprises a layer below the application and above the operating system and network substrate. This course introduces basic distributed system principles and middleware systems, aims at identifying the principles underlying the use of middleware systems, and characterizes common middleware paradigms and abstractions. The course describes a large variety of Middleware systems, starting with original Middleware technologies (e.g. DCE, CORBA, DCOM); going to more modern and lightweight solutions (e.g. Java RMI, J2EE, MQ-Series, JMS, Web Services); and finally finishing with state-of-the-art and large-scale technologies (e.g. Apache Thrift, Protocol Buffers, Avro). Examples, case studies, as well as Middleware implementations are studied to achieve a better understanding of the topic.\nCourse outline:\n1. Introduction\n2. Communication basics:\na. Protocol design\nb. Socket programing\nc. External data representation\nd. Remote procedure calls & remote invocations\n3. Middleware foundations\na. Roots, origins, historical development, principles\nb. Role of standards, standardization processes\nc. Reference models (e.g., OMA, RMODP, SOA)\nd. Interoperability, system integration, multi-tiered systems\n4. Middleware paradigms\na. Distributed computing (procedural paradigm, failure semantics)\nb. Distributed objects (object-oriented paradigm)\nc. Messaging Patterns (e.g., request/reply, messaging, publish/subscribe)\nd. Queuing theory/networks\ne. Service-oriented architecture (SOA) and services\nf. Event-driven architecture (EDA))\n5. Middleware systems\na. Naming and directory services\nb. Web Services\nc. Messaging systems\nd. Application servers\n6. Case studies and examples\n7. Middleware implementation techniques",
        "voraussetzungen": "Algorithms and data structures (searching, sorting, hash tables, lists, trees, graphs, basic notions of complexity (O-notation)), basic programing skills and tools (Java, C/C++, concurrency, multithreading, synchronization, code versioning and concurrent",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460548&pOrgNr=1",
        "name": "Mobile verteilte Systeme",
        "kennung": "IN2098",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden kennen die Grundlagen der mobilen verteilten Systeme (MVS). Sie sind in der Lage, die Grundlagen, Probleme und Lösungen der MVS zu verstehen und die aktuellen Entwicklungen einzuschätzen. Sie sind zudem in die Lage, die erworben Grundlagenkenntnisse direkt auf neue Entwicklungen im Bereich der drahtlosen Kommunikation (inklusive ihrer Protokolle) und dem Bereich der mobilen Betriebssysteme (inklusive wichtiger Apps) anzuwenden.",
        "inhalt": "Mobilität, Drahtlose Kommunikation, Mobile Betriebssysteme, Gesamtarchitekturen, Konzepte, Mechanismen,\nVerfahren und deren Bewertung",
        "voraussetzungen": "IN0009 Grundlagen: Betriebssysteme und Systemsoftware, IN0010 Grundlagen: Rechnernetze und Verteilte Systeme",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456482&pOrgNr=1",
        "name": "Model Checking",
        "kennung": "IN2050",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Successful participation enables students to\n- explain the role of model checking for ensuring hardware and software quality\n- give formal models of simple hardware and software systems\n- write formal specifications of simple safety and liveness properties using temporal logic\n- explain algorithms for checking if a program satisfies a given specification and apply them to small examples\n- understand and explain techniques for palliating the state-explosion problem",
        "inhalt": "The course teaches the fundamentals of Model Chekcing. Topics include:\n- Representation of hardware and software systems using formal models of computations, e.g., transition systems, pushdown systems, Kripke structures, finite and infinite state automata.\n- Representation of specifications using formal logics and automata, e.g., linear and branching time temporal logics, automata on finite and infinite.\n- Decidability and complexity of various classes of formal models and specifications, e.g., complexity of finite state model checking for linear and branching time logics.\n- Techniques for palliating the state-explosion problem e.g., binary decision diagrams, partial-order reduction, abstraction.\n- Industrial application of model checking, e.g., discovery of concurrency bugs, verification of systems software.\n- Practical experience in applying model checking tools, e.g., Spin, Blast, CBMC.",
        "voraussetzungen": "IN0007 Fundamentals of Algorithms and Data Structures, IN0011 Introduction to Theory of Computation, IN0015 Discrete Structures",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1508039&pOrgNr=1",
        "name": "Modellbildung und Simulation (Fokus Analysis)",
        "kennung": "IN2366",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul verstehen die Studierenden die Grundkonzepte der mehrdimensionalen Analysis und können sie auf beispielhaft gegebene Probleme anwenden. Sie sind in der Lage, für eine verbal vorgetragene Aufgabenstellung formale (mathematische oder informatische) Modellkonzepte zu entwickeln sowie zu bewerten und Strategien zur Simulation, also zur rechnergestützten Lösung dieser Modelle, auszuwählen und dann auch erfolgreich einzusetzen. Sie haben exemplarisch wichtige Modellklassen kennen gelernt und können für einfache Szenarien eigene Lösungsverfahren entwickeln.",
        "inhalt": "- Einführung in die Analysis mehrerer Veränderlicher (partielle Ableitungen, partielle Differenzialgleichungen, Integration)\n- Einführung in die mathematische Modellierung (Begriffsbildung, Anwendungsbeispiele, Herleitung von Modellen, Analyse von Modellen, Klassifizierung von Modellen, Betrachtungsebenen und Hierarchie)\n- Diskrete Modellierung und Simulation (Entscheidungsmodelle: Spiele, Strategien, Wahlen; Reihenfolgeprobleme: Scheduling; Diskrete Ereignissimulation: Verkehr in Rechensystemen; Neuronale Netze)\n- Kontinuierliche Modellbildung und Simulation (Populationsdynamik: Modelle und ihre numerische Behandlung; Regelungstechnik: Deterministische und Fuzzy Logic Ansätze; Verkehrsfluss: Modellierung über kontinuierliche Größen; Wärmeleitung: Modell und numerische Lösung)\n- Modellierung im Software-Entwurf (optional; grundlegende Konzepte, Beschreibungstechniken, Methodik)",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik, IN0019 Numerisches Programmieren",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=485660&pOrgNr=1",
        "name": "Modellierung und Entscheidungsunterstützungssysteme in der Umweltinformatik",
        "kennung": "IN2208",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Studierende verstehen\n- Umweltprobleme und Anforderungen an computerunterstützte Lösungen\n- Repräsentation von Wissen über ökologische und Umweltsysteme\n- Modellierungsmethoden und -systeme, insbesondere aus der Künstlichen Intelligenz, sowie deren Möglichkeiten und Grenzen\n- Formalisierung von Anwendungsaufgaben (Situationsanalyse, Therapie-Generierung, ...)\n- Grundlagen und Architektur von Umweltentscheidungsunterstützungssystemen\n- Algorithmen modellbasierter Problemlöser\n- Beispiele von Modellen und Anwendungssystemen\n\nSie sind in der Lage,\n- Umweltsysteme und Anwendungsaufgaben systematisch zu analysieren\n- Modellierungs- und Problemlösungsansätze zu bewerten und auszuwählen\n- Modelle einfacher Zusammenhänge in Umwelt und Ökologie zu erstellen\n- Anwendungsbezogene Umweltentscheidungsunterstützungssystem zu entwerfen",
        "inhalt": "- Das Thema\n- Grundlagen\n++ Begrifflichkeit (ökologische Systeme, Umwelt, ...)\n++ Umweltprobleme und -management\n++ Ziele und Nutzen der Modellierung\n- Modellierung\n++ Konzepte und Formalismen der Modellierung Black-box-Modelle, reduktionistische, kompositionale Modellierung\nStruktur von Modellen\n++ Modellierungsformalismen und deren Bewertung\n++ Numerische und qualitative Modellierung\n++ Zeitliche und räumliche Modellierung\n++ Differentialgleichungen, Einflußgraphen, konzeptuelle Modellierung\n++ Modellierungsprozeß\n++ Modelle ausgewählter Beispiele\n- Umweltentscheidungsunterstützungssysteme\n++ Architektur und Softwarekomponenten von Umweltentscheidungsunterstützungssystemen\n++ Empiriegestützte Verfahren\n++ Regelbasierte und fallbasierte Verfahren\n++ Modellbasierte Verfahren\n++ Beispiele von Umweltentscheidungsunterstützungssystemen\n- Einsatzsapekte\n++ Validierung von Modellen und Umweltentscheidungsunterstützungssystemen\n++ System-Benutzer-Interaktion\n- Herausforderungen",
        "voraussetzungen": "Die Vorlesung führt Konzepte der Wissensrepräsentation, wissensbasierter Systeme und Inferenzmechanismen ein. Sie setzt keine bestimmten Programmierkenntnisse voraus und ist auch für Hörer anderer Fakultäten mit Interesse an computerbasierten Lösungen geeignet.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456926&pOrgNr=1",
        "name": "Modellierung verteilter Systeme",
        "kennung": "IN2080",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer kennen die wesentlichen Grundbegriffe zu Methoden der Spezifikation, Modularisierung, Abstraktion, Verfeinerung und Verifikation nebenläufiger, verteilter kooperierender Systeme. Sie wissen um die Bedeutung sowohl der Anforderungsdefinition (Spezifikation) als auch der Korrektheitsbeweise (Verifikation) von Implementierungen. Sie beherrschen fundamentale Techniken und Methoden und sind in der Lage, eine Vielzahl existierender Modellierungs- und Beschreibungstechniken zielgerichtet einzusetzen und gegeneinander abzugrenzen.",
        "inhalt": "Fast alle Rechner und Softwaresysteme sind verteilt und vernetzt bzw. laufen in irgendeiner Form vernetzt ab. Ein große Zahl dieser Systeme sind nicht nur untereinander verteilt und vernetzt, sondern sind auch mit physikalischen und technischen Prozessen verbunden und weisen dementsprechend vielfältige Benutzungsschnittstellen auf. Für die systematische Entwicklung moderner Softwaresysteme sind Themen wie Nebenläufigkeit, Vernetzung, Interaktion und Koordination von Systemen somit zentral. Die Modellierung und systematische Behandlung derartiger Systeme bringt eine Vielzahl von Fragestellungen, Phänomenen und Schwierigkeiten, die deutlich über die Behandlung sequentieller, nichtinteraktiver Systeme hinausgehen. Die Vorlesung präsentiert grundsätzliche Konzepte und Modelle für verteilte Systeme sowie Möglichkeiten, diese zu beschreiben, zu spezifizieren, zu strukturieren, ihre Eigenschaften zu analysieren und schließlich auch zu verifizieren. Die Inhalte der Vorlesung behandeln speziell Fragen und Ansätze der Modellierung verteilter Systeme, der gängigen Modelle und ihrer Theorien, Strukturen und Zusammenhänge. Es werden folgende Inhalte vermittelt:\n- Nebenläufige, verteilte, kooperierende Systeme: Grundbegriffe und wesentliche Eigenschaften\n- Systeme als Zustandsmaschinen\n- Funktionale Beschreibung von Systemkomponenten\n- Struktur- und Verteilungssicht\n- Prozesse als Abläufe verteilter Systeme\n- Verfeinerung von Systemen\n- Nachrichtensynchrone Systeme",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1, IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN0003 Einführung in die Informatik 2, IN2078 Grundlagen der Programm- und Systementwicklung",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456362&pOrgNr=1",
        "name": "Modelling and Simulation",
        "kennung": "IN2010",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage, für eine verbal vorgetragene Aufgabenstellung formale (mathematische oder informatische) Modellkonzepte zu entwickeln sowie zu bewerten und Strategien zur Simulation, also zur rechnergestützten Lösung dieser Modelle, auszuwählen und dann auch erfolgreich einzusetzen. Sie haben exemplarisch wichtige Modellklassen kennen gelernt und können für einfache Szenarien eigene Lösungsverfahren entwickeln.",
        "inhalt": "- Einführung in die mathematische Modellierung (Begriffsbildung, Anwendungsbeispiele, Herleitung von Modellen, Analyse von Modellen, Klassifizierung von Modellen, Betrachtungsebenen und Hierarchie)\n- Diskrete Modellierung und Simulation (Entscheidungsmodelle: Spiele, Strategien, Wahlen; Reihenfolgeprobleme: Scheduling; Diskrete Ereignissimulation: Verkehr in Rechensystemen; Neuronale Netze)\n- Kontinuierliche Modellbildung und Simulation (Populationsdynamik: Modelle und ihre numerische Behandlung; Regelungstechnik: Deterministische und Fuzzy Logic Ansätze; Verkehrsfluss: Modellierung über kontinuierliche Größen; Wärmeleitung: Modell und numerische Lösung)\n- Modellierung im Software-Entwurf (optional; grundlegende Konzepte, Beschreibungstechniken, Methodik)",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik, IN0019 Numerisches Programmieren",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1506871&pOrgNr=1",
        "name": "Moderne Techniken für die Shader-Entwicklung und Bildsynthese",
        "kennung": "IN2363",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul sind die Studenten in der Lage gezielt visuelle Effekte zu analysieren und diese mithilfe von Shadern für Spiele und andere Applikationen zu erstellen. Die erlernten Technologien umfassen Beleuchtung, Bildeffekte, Compute und fortgeschrittene Technologien wie Tessellation. Die Studenten können Shader optimieren und Gelerntes auch auf Bereiche außerhalb des Games Engineering anwenden. Sie erhalten einen tiefen Einblick in die Funktionsweisen und den Aufbau moderner Renderer und verstehen die Einordnung verschiedener Shader in die Graphics Pipeline.",
        "inhalt": "Anhand von aktuellen Beispielen wird den Studenten die plattformübergreifende Entwicklung von Shadern für Games und andere, Computergraphik fokussierte, Anwendungen erläutert. Als Entwicklungsumgebung kommen Unity3D, sowie Visual Studio zum Einsatz. Spezieller Fokus liegt hier auf:\n- Aufbau von Shadern: Vertex, Fragment, Geometry und Surface Shader\n- Verschiedene Beleuchtungsmodelle\n- Physically Based Rendering, BRDFs\n- Optimierung, Performance Analyse, Tools\n- Rendering, Graphic APIs\n- Post-Processing, Image Effects\n- Compute Shader\n- Tessellation\n- Stylized Shading\n- Volume Rendering",
        "voraussetzungen": "IN0038 Echtzeit Computergrafik\nIN0039 Praktikum: Echtzeit Computergrafik\nIN0031 Einführung in die Informatik für Games Engineering",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4388388&pOrgNr=1",
        "name": "Multimodal Deep Learning",
        "kennung": "CIT423003",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successfully completing this module, students will be able to:\n- Understand the structure of various data modalities and know the advantages and disadvantages of using different types of feature representations.\n- Select optimal neural network architectures that leverage the inherent structure of different data types.\n- Transfer their theoretical understanding to develop multimodal models for real-world applications.\n- Critically assess current research works and emerging trends in multimodal representation learning.",
        "inhalt": "1. Types of input modalities, their structure, and representations\nMotivating questions:\nHow are different types of inputs structured?\nWhich feature representations can be used for different input types?\nHow can we transform between different representations?\n\nTopics:\n- Representations, transformations, manifold hypothesis\n- Data structure, groups, and symmetries (e.g. sets, grids, graphs, manifolds)\n- Feature representations: encodings, embeddings, feature spaces, and distances\n- Implicit neural representations and implicit kernel functions\n\n2. Architectures for different modalities\nMotivating questions:\nWhich model architectures are optimal for each type of input data and why?\nHow can those architectures utilize the structure of input data?\nIn which way are different architectures related?\n\nTopics:\n- Underlying principles of learning representation\n- From multi-layer perceptrons to convolutional neural networks\n- Increasing inductive bias with geometric deep learning: equivariant convolutions, graph neural networks\n- Architectures for sequence-based modalities: recursive neural networks and structured state space sequence models\n- From sequences to sets: transformers and set encoders\n\n3. Training signals for representation learning\nMotivating questions:\nHow to get the most out of input data and architectures?\nWhich loss functions or training strategies are used in different settings and\nhow are they related?\n\nTopics:\n- Supervised loss functions and their properties\n- Alignment-based self-supervised learning, contrastive learning and clustering\n- Reconstruction-based self-supervised learning: masked autoencoders, BERT, GPT\n- Zero- and few-shot inference\n- Parameter-efficient finetuning\n\n4. Bringing it all together: multimodal models\nMotivating questions:\nHow can the previously introduced methods be used to build multimodal models?\nWhat are the best way to combine pre-trained unimodal models?\n\nTopics:\n- Types of multimodal models\n- Combining pre-trained models: Integrating other modalities into large language models\n- Difficulties of multimodal models\n- Case studies of prominent multimodal models from different application fields\n- Open questions and future direction of research",
        "voraussetzungen": "Machine Learning (IN2064), Introduction to Deep Learning (IN2346), or similar courses",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457018&pOrgNr=1",
        "name": "Netzwerkalgorithmen",
        "kennung": "IN2115",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer beherrschen fundamentale Konzepte im Gebiet der Netzwerkalgorithmen. Sie sind in der Lage, grundsätzliche Netzwerke und Netzwerkparameter zu klassifizieren, und können Algorithmen für Overlaynetzwerke und verteilte Anwendungen über diese Netzwerke anwenden.",
        "inhalt": "- Modelle für verteilte Algorithmen und Datenstrukturen\n- Netzwerktheorie\n- Routing und Scheduling\n- Hashing und Caching\n- Das kontinuierlich-diskrete Prinzip\n- Zentral gesteuerte logische Netzwerke\n- Dezentrale logische Netzwerke\n- Anycasting und multicasting\n- Suchen und sortieren\n- Selbst-stabilisierende logische Netzwerke\n- Selbst-erhaltende logische Netzwerke\n- Logische Netzwerke für drahtlose Netze\n- Logische Netzwerke für Configware",
        "voraussetzungen": "IN2003 Effiziente Algorithmen und Datenstrukturen, Kenntnisse in diskreter Mathematik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458249&pOrgNr=1",
        "name": "Netzwerke für den Zahlungsverkehr",
        "kennung": "IN2161",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Verstehen und Einschätzen der Grundlagen, Architektur und Sicherheit von Netzwerken für den nationalen und internationalen Zahlungsverkehr sowie deren rechtliche Rahmenbedingungen",
        "inhalt": "Systemarchitektur (Hardware, Software)\nProtokollschichten und Protokolle (eg. ISO 8583)\nSicherheitsarchitekturen und Sicherheitsstandards\nAuthorisierungslösungen und Signaturen\nArten von Attacken\nMobile Architekturen und deren Sicherheitskonzepte (OTA Services)\nAnwendungen",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3018441&pOrgNr=1",
        "name": "Neuroprosthetics: Artificial Limbs",
        "kennung": "IN2405",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The module aims to provide knowledge about the main aspects, methodologies and tools for the design, control, testing and evaluation of robotic prosthetic systems, for upper and lower limbs. Particular emphasis is given to methods for mechatronic design, including integration with control interfaces and sensory feedback, and the development of novel functional assessments. On the basis of this knowledge, students are able to develop novel mechatronic systems, analyze electromyographic signals to control multi degrees of freedom devices and improve standard assessments.",
        "inhalt": "The module will present the following topics:\n- History and current evolution of neuroprosthetics, emerging trends in the field, opportunities and challenges.\n- Anatomy of the upper limb, general principles associated with the production of movements and muscle synergies, main causes of upper limb amputation, overview about different level of upper extremity amputation, current challenges.\n- Upper limb and hand bionic prostheses: (1) current strategies for the development of neuroprostheses; (2) myoelectric control; (3) advanced methods: invasive and non-invasive techniques; (4) overview about interfaces and novel surgical techniques.\n- Anatomy of the lower limb and main causes of amputation: general anatomy of the upper limb, general principles associated with locomotion, main causes of lower limb amputation, overview about different level of lower extremity amputation, current challenges.\n- Lower limb bionic prostheses: (1) current strategies for the development of neuroprostheses for the restoration of walking; (2) myoelectric control; (3) advanced methods: invasive and non-invasive techniques; (4) overview about interfaces and novel surgical techniques.\n- Haptic feedback: (1) current strategies for the development of systems for the restoration of haptic feedback; (2) advanced methods: invasive and non-invasive techniques.\n- Functional assessments: current methods to evaluate the performance of neuroprostheses, Cybathlon, emerging trends in the field, opportunities and challenges",
        "voraussetzungen": "Bachelor or intermediate diploma in informatics, computer science or engineering. Solid programming skills and knowledge of Matlab/Python and Unity3D is highly recommended.\n\nAdditionally, knowledge of the following modules is strongly recommended:\n- Signal Theory (EI00330)\n- Automatic Control (MW9020, MW2022, MW1530)\n- Medical Augmented Reality (IN2293)\n- Advanced Practical Course Games Engineering: Augmented Reality (IN7106)\n- Robotics (IN2067)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2911533&pOrgNr=1",
        "name": "Numerische Algorithmen im Hochleistungsrechnen",
        "kennung": "IN2398",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Participants know important algorithms from various representative problems in parallel and high performance computing, in particular motivated by applications in scientific computing. They can evaluate their range of application in standard scenarios, are familiar with their basic performance features, and can also evaluate their parallel scalability.\nStudents are able to decide whether a numerical algorithm is parallelizable in an efficient way and to analyze internal data dependencies and the runtime of parallel algorithms. They understand the different ways of parallelism and are able to exploit them when writing numerical code for different architectures.\nParticipants know different parallelization strategies for solving linear systems and partial differential equations and are able to implement and evaluate them.",
        "inhalt": "The lecture discusses selected algorithms from the following classical problem settings in scientific computing (\"the seven dwarfs of HPC\"):\n- Solvers for partial differential equations (and related problems) on structured and unstructured grids (e.g. domain decomposition methods)\n- Algorithms in numerical linear algebra on sparse and dense matrices (direct and iterative solution of linear systems on HPC architectures, eigenvalue problems, etc.)\n- Particle-oriented simulation (Barnes-Hut/Fast Multipole algorithm, etc.)\n- Spectral methods (parallel fast Fourier transform, etc.)\n\nIn that context, the following approaches for optimisation and analysis of algorithms will be discussed:\n- Performance analysis and performance models (Roofline, Cache, Bulk Synchronous Parallelism)\n- Shared-memory parallelism (data dependencies, parallel loop, tasking)\n- Distributed-memory parallelism (MPI; tiling, blocking and partitioning methods)",
        "voraussetzungen": "IN0019 Numerical Programming, IN2156 Numerical Programming (CSE), IN2147 Parallel Programming",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454055&pOrgNr=1",
        "name": "Numerisches Programmieren",
        "kennung": "IN0019",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmenden verstehen die wesentlichen Grundsätze numerischen Programmierens, kennen die wichtigsten elementaren numerischen Algorithmen (z.B. Gauß-Elimination, QR-Algorithmen, Neville-Algorithmen, Jacobi und Gauß-Seidel-Algorithmen, Newtonverfahren), die für Aufgabenstellungen aus der Informatik relevant sind, und sind in der Lage, diese Algorithmen sicher anzuwenden und zu implementieren.",
        "inhalt": "- Gleitpunktarithmetik (Zahldarstellung, Rundungsfehleranalyse, Kondition, Stabilität)\n- Interpolation (Polynominterpolation, Splines, trigonometrische Interpolation, Schnelle Fourier-Transformation)\n- Integration (einfache und zusammengesetzte Regeln, Extrapolationsverfahren, Gauß-Quadratur)\n- Lösung linearer Gleichungssysteme (Gauß-Elimination, LR-Zerlegung, Pivoting, Least Squares)\n- Gewöhnliche Differentialgleichungen (Finite Differenzen, Euler-Verfahren, Runge-Kutta-Verfahren, Konsistenz, Stabilität und Konvergenz, Diskretisierungsfehler, Mehrschrittverfahren)\n- Iterative Verfahren (Relaxationsverfahren: Jacobi und Gauß-Seidel, Minimierungsverfahren: steilster Abstieg, Fixpunktiteration, nichtlineare Gleichungen: von der Bisektion zu Newton)\n- Das symmetrische Eigenwertproblem (Motivation, Kondition, Vektoriteration, QR-Verfahren, Reduktionsalgorithmen)",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, MA0902 Analysis für Informatik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977328&pOrgNr=1",
        "name": "Online and Approximation Algorithms",
        "kennung": "IN2304",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls kennen die Resultate zu den grundlegenden untersuchten Online-Problemen, insbesondere im Bereich der Ressourcenverwaltung, der Datenstrukturierung und des Schedulings, sowie den studierten NP-harten Graphen-, Erfüllbarkeit- und Packungsproblemen. Des Weiteren beherrschen sie das Analysekonzept der Amortisierung und die Algorithmenentwurfstechnik basierend auf LP-Formulierungen. Die erlernten Resultate und Konzepten können sie anwenden, um neue algorithmische Problem zu lösen.",
        "inhalt": "Das Modul behandelt zunächst die Grundlagen der Online- und Approximationsalgorithmen. Dabei wird das Konzept der Leistungsgarantien eingeführt. Im Bereich der Online-Algorithmen studiert das Modul klassische Scheduling- und Paging-Probleme. Es wird das Konzept der amortisierten Analyse eingeführt und eingesetzt, um selbstorganisierende Listen zu analysieren. Anschließend untersucht das Modul randomisierte Online-Algorithmen mit dem zugehörigen Gegnerkonzept. Es werden Datenkompression-Algorithmen basierend auf selbstorganisierenden Listen, Online-Algorithmen für die Roboter-Navigation, bipartites Matching, energieeffizientes Scheduling, das k-Server-Problem und finanzielle Spiele entwickelt. Auf dem Gebiet der Approximationsalgorithmen werden Algorithmen für Max-Cut, das Traveling Salesman Problem und die Lastbalancierung hergeleitet. Ferner werden polynomielle Approximationsschemata entwickelt, wobei das Rucksackproblem und das Lastbalancierungsproblem im Fokus stehen. Weiterhin behandelt das Modul die Konzepte der LP-Relaxierung und das randomisiertes Runden. Schließlich werden Approximationen für Set-Cover und Shortest-Superstring erarbeitet.",
        "voraussetzungen": "IN0007 Grundlagen: Algorithmen und Datenstrukturen, IN0011 Einführung in die Theoretische Informatik, IN0015 Diskrete Strukturen",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1200766&pOrgNr=1",
        "name": "Open Real Time Games Workshop",
        "kennung": "IN2331",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden erlernen und vertiefen, ein digitales Spiel praxisbezogen zu konzipieren, zu entwickeln und umzusetzen – mit speziellem Fokus auf adäquater Szenenmodellierung und neuartiger, durch Biofeedback gesteuerter Interaktion. Sie verstehen, die professionellen Abläufe mit den üblichen Softwarepaketen gestalterisch, technisch und wirtschaftlich umzusetzen und die Arbeit in einem Team erfolgreich zu koordinieren.",
        "inhalt": "Es gibt mehrere, parallele Sessions für Studierende und mit Studierenden, sowie mit Partnern aus Wirtschaft, Industrie und Forschung.\nThemenschwerpunkte sind Game Development, Game Design mit Augmented Reality und BioFeedback, Sim Games, Simulation und industrielle Anwendungen, sowie 3D-Echtzeitvisualisierung mit Open Source Software. Im Zentrum des Moduls „Open Games Workshop“ steht die Auseinandersetzung mit digitalen Werkzeugen für die professionelle Spieleentwicklung – sowohl bei der Modellierung und Spieleprogrammierung als auch bei der Einbindung von Interaktionsgeräten und –methoden (z.B.: BioFeedback, Eyetracking, Gaze and Gesture etc.). Es werden notwendiges theoretisches Wissen und Kenntnisse der Konzeption und praktischen Umsetzung von Computerspielen behandelt. In Form eines Praxisseminars erfolgt die Bearbeitung anhand einer praxisnahen Fragestellung.\n\nFachliche Inhalte:\nVertiefende theoretische und praktische Kenntnisse zu Game Design, Level Design, Konzeption und Umsetzung einer digitalen Echtzeitanwendung, mit Bildverarbeitung, BioFeedback und Interaktiven Medien.\n\nMethodische Inhalte:\nGrundlagen und Prinzipien von Game und Level Design und deren adäquate Präsentation.",
        "voraussetzungen": "IN0031 Einführung in Informatik für Games Engineering,\nIN0038 Echtzeit-Computergrafik,\nIN0033 Interaktionsmethoden und -geräte",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1498603&pOrgNr=1",
        "name": "Operations Research",
        "kennung": "IN0024",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Absolvieren des Moduls kennen die Teilnehmer grundlegende Verfahren aus den Bereichen Entscheidungsanalyse, Lineare Optimierung, und Ganzzahlige Lineare Optimierung. Sie sind in der Lage betriebliche Planungs- und Entscheidungsprobleme wie z.B. Transportprobleme oder Netzflussprobleme zu modellieren und verstehen Algorithmen, um diese Probleme effektiv zu lösen. Studierende kennen die wesentlichen Eigenschaften dieser Algorithmen und betriebswirtschaftlich relevante Anwendungen.",
        "inhalt": "Entscheidungsanalyse (Entscheidungsbäume, MCDM, InvesMMonsrechnung), Lineare Optimierung, Modellierung betrieblicher Optimierungsprobleme (Transportproblem, Zuweisungsproblem, Zielprogrammierung), Simplex (Normalform, Basivariablen und Basislösungen, Primaler Simplex-Algorithmus, Simplex Tableau, Revidierter Simplex), Sensitivitätsanalyse und Dualitätstheorie, Ganzzahlige Programmierung (Branch-and-Bound, Komplexitätstheorie, Modellierung ganzzahliger Probleme), Netzplantechnik und Netzflussprobleme",
        "voraussetzungen": "IN0015 Diskrete Strukturen, Mathematische Behandlung der Naturwissenschaften",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456366&pOrgNr=1",
        "name": "Parallel Numerics",
        "kennung": "IN2012",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful participation students are able to decide whether an algorithm is parallelizable in an efficient way and to analyze internal data dependencies and the runtime of parallel algorithms. They understand the different ways of parallelism and are able to exploit them when writing numerical code for different architectures. Participants know different parallelization strategies for solving linear systems and are able to evaluate them.",
        "inhalt": "- Performance analysis,\n- Data dependency graphs,\n- MPI and parallel BLAS, block methods\n- Direct and iterative solution of linear systems\n- Eigenvalue problems, Domain decomposition methods",
        "voraussetzungen": "IN0019 Numerisches Programmieren, IN2013 High Performance Computing - Programmiermodelle und Skalierbarkeit, IN2156 Numerische Programmierung (CSE), IN2147 Parallele Programmierung",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": "2022W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456364&pOrgNr=1",
        "name": "Parallele Algorithmen",
        "kennung": "IN2011",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls beherrschen die fundamentale Konzepte der Parallelrechnung. Sie kennen Maschinenmodelle, beherrschen die Grundlagen paralleler Komplexitätstheorie und können parallele Algorithmen entwerfen und bewerten.",
        "inhalt": "Das Modul studiert eingehend parallele Maschinenmodelle. Es entwickelt elementare parallele Algorithmen. Ferner stellt es fortgeschrittene Algorithmen und Methoden für Routing und Sortieren vor.",
        "voraussetzungen": "IN2003 Effiziente Algorithmen und Datenstrukturen, IN0015 Diskrete Strukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456506&pOrgNr=1",
        "name": "Petrinetze",
        "kennung": "IN2052",
        "organisation": "Department Computer Science",
        "anmerkung": "Ab SoSe 2015 5 Credits",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul sind die Studierenden dazu in der Lage,\n- einfache nebenläufige Systeme mit Petrinetzen zu modellieren;\n- kleine Petrinetze von Hand zu analysieren;\n- automatische Analysetechniken und Softwaretools zur Analyse von größeren Netzen auszuwählen;\n- die Analyseergebnisse zu nutzen, um das Verhalten der nebenläufigen Systemen zu evaluieren.",
        "inhalt": "Petrinetze sind ein formales Modell für die Beschreibung und Analyse von nebenläufigen Systemen wie verteilten Algorithmen, Kommunikationsprotokollen, Fertigungssystemen, Geschäftsprozessen oder asynchronen Schaltkreisen. Die Stärken von Petrinetzen sind eine einfache, klare Notation mit einer präzisen Semantik und eine Fülle an vorhandenen Techniken zur Analyse und Verifikation.\nDas Modul ist eine Einführung in die Theorie von Petrinetzen. Es stellt mehrere Varianten von Petrinetzen und ihre relevantesten Analysetechniken vor: Erreichbarkeits- und Überdeckbarkeitsgraphen, lineare Invarianten, Strukturtheorie und Entfaltungen. Die Techniken werden auch durch Softwaretools veranschaulicht.",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik, IN0011 Einführung in die Theoretische Informatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454059&pOrgNr=1",
        "name": "Planen und Entscheiden in betrieblichen Informationssystemen",
        "kennung": "IN0022",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Absolvieren des Moduls kennen die Teilnehmer grundlegende Verfahren aus den Bereichen Entscheidungsanalyse, Lineare Optimierung, und Ganzzahlige Lineare Optimierung. Sie sind in der Lage betriebliche Planungs- und Entscheidungsprobleme wie z.B. Transportprobleme oder Netzflussprobleme zu modellieren und verstehen Algorithmen, um diese Probleme effektiv zu lösen. Studierende kennen die wesentlichen Eigenschaften dieser Algorithmen und betriebswirtschaftlich relevante Anwendungen.",
        "inhalt": "Entscheidungsanalyse (Entscheidungsbäume, MCDM, InvesMMonsrechnung), Lineare Optimierung, Modellierung betrieblicher Optimierungsprobleme (Transportproblem, Zuweisungsproblem, Zielprogrammierung), Simplex (Normalform, Basivariablen und Basislösungen, Primaler Simplex-Algorithmus, Simplex Tableau, Revidierter Simplex), Sensitivitätsanalyse und Dualitätstheorie, Ganzzahlige Programmierung (Branch-and-Bound, Komplexitätstheorie, Modellierung ganzzahliger Probleme), Netzplantechnik und Netzflussprobleme",
        "voraussetzungen": "IN0015 Diskrete Strukturen, Mathematische Behandlung der Naturwissenschaften",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1517639&pOrgNr=1",
        "name": "Praktikum: Echtzeit-Computergrafik",
        "kennung": "IN0039",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer beherrschen die Grundprinzipien der Programmiersprache C++ und der Graphik-Schnittstelle Direct3D. Sie können Programme eigenständig entwickeln und dabei wesentliche Konzepte der Programmierung und der interaktiven 3D Grafik auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau anwenden. Nach dem Besuch des Moduls kennen die Teilnehmer die wesentliche Funktionalität von Direct3D und können diese zur Programmierung von interaktiven Grafik-Anwendungen in C++ nutzen.",
        "inhalt": "Das Modul ist begleitend zum Modul IN0038. Die Studierenden entwickeln und programmieren kleinere Beispielanwendungen unter Anleitung. Hierbei erlernen die Studierenden die grundlegenden Konzepte von Graphik-Schnittstellen und der Grafikprogrammierung auf Grafikkarten mit Direct3D und C++ sowie die Grundlagen der Shaderprogrammierung. Die Studierenden programmieren in kleinen Teams unter Verwendung gängiger Version-Control Systeme.",
        "voraussetzungen": "IN0002 Praktikum: Grundlagen der Programmierung und gleichzeitiger Besuch des Moduls IN0038 Echtzeit-Computergrafik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=759664&pOrgNr=1",
        "name": "Praktikum GPU Programming in Computer Vision",
        "kennung": "IN4102",
        "organisation": "Department Computer Science",
        "anmerkung": "nur für Studiengang CSE",
        "lernergebnisse": "Upon the completion of the module, students are able to implement and parallelize computer vision algorithms in CUDA and harness the power of GPU computing.",
        "inhalt": "The goal of this course is to provide an introduction into the NVIDIA CUDA framework with the C programming language extension.\n\nCourse topics:\n- Introduction to Parallel Computing\n- Introduction to CUDA\n- Implementation of computer vision algorithms with CUDA (e.g. convolution, diffusion)\n- Student Project: Implementation of an advanced computer vision application which uses CUDA acceleration for real-time processing of webcam images.\n\nDuring the course students will learn how to program GPUs with CUDA. Afterwards the students will start to implement more sophisticated computer vision algorithms within a student project. The course finishes with a presentation and a live demo of the project results.",
        "voraussetzungen": "Good knowledge of the C/C++ language and basic mathematics (linear algebra, multivariable calculus, analysis), no further prior knowledge about CUDA will be required.",
        "modulniveau": "",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458540&pOrgNr=1",
        "name": "Praktikum Numerische Strömungsmechanik (CSE)",
        "kennung": "IN2186",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After the successful participation at the module, students are able to independently implement a code for the numerical simulation of fluid dynamics. They know the underlying fluid dynamic equations as well as basic methods of their numerical treatment. The participants are able to verify the code and the resulting simulations. They are able to visualize the simulation output with a suitable software and have the competence to interprete, document, and present the results.",
        "inhalt": "The lab course covers the following topics:\n- Numerical simulation of flows using the Navier-Stokes equations\n- Discretisation of space/time\n- Stability and convergence criteria\n- Implementational issues, efficient solver strategies",
        "voraussetzungen": "Module IN2005 Introduction to Scientific Computing: Scientific Computing 1, or equivalent knowledge, basic software engineering knowledge",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=487484&pOrgNr=1",
        "name": "Praktikum Protein-Struktur- und -Funktions-Analyse",
        "kennung": "IN2225",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Das Praktikum soll einen Einblick in die Forschung am Lehrstuhl geben. Die Studierenden lernen, durch Literatursuche relevante Methoden zu finden, zu verstehen und für andere verständlich darzustellen. Bei der Anwendung an konkreten Beispielen können sie die Ergebnisse analysieren und die Möglichkeiten und Grenzen der Methoden diskutieren und bewerten. Sie lernen, die theoretischen Grundlagen sowie die konkreten Vorgehensweisen in einem Protokoll schriftlich darzustellen.",
        "inhalt": "Intro: what is protein function? Predicting protein function using sequence: sequence alignments, multiple sequence alignments, motifs, domain assignment, annotation transfer by homology, ab initio predictions. Predicting protein function using structure: structural alignments, structural motifs, annotation transfer via structure similarity. From structure prediction to function prediction: comparative modeling; prediction of: secondary structure, hydrophilicity profiles, solvent accessibility, transmembrane segments, disordered regions, contact maps, functional residues; template free modeling. During the practical the students apply these methods for the functional annotation of structural genomics structures of proteins of unknown function.",
        "voraussetzungen": "gute Englisch-Kenntnisse",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458284&pOrgNr=1",
        "name": "Praktikum Scientific Computing (CSE)",
        "kennung": "IN2182",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are able to apply important methods and algorithms of numerical programming and can implement these within a numerical programming environment. They have experience with the practical use of the respective techniques and tools and are able to recognize typical properties of numerical methods. Participants are able to work in small teams to design and implement software prototype solutions for the specified tasks. They are able to discuss and assess the correctness, reproducibility and reliability of their obtained results following established best practices of the scientific and general community.",
        "inhalt": "The lab course gives an application-oriented introduction to the following topics using the programming language MATLAB:\n- simulation of discrete processes\n- explicit and implicit single-step methods for ordinary differential equations\n- numerical methods for stationary and non-stationary partial differential equations relying on finite-difference discretizations",
        "voraussetzungen": "Basic skills in linear algebra and differential calculus.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1002907&pOrgNr=1",
        "name": "Praktikum: Social Gaming",
        "kennung": "IN0041",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul besitzen die Studierenden die Fähigkeit, die in dem Modul Social Gaming (IN0040) erworbenen Grundkenntnisse der Konzepte/-Modelle, Techniken/-Algorithmen und Denkweisen/Methodiken des Social Computing für die Konzeption und Implementierung von (insbesondere mobilen) sozialen Spielen und freizeitbezogenen Anwendungen, die individuelle und soziale Kontexte von Spielern intelligent einbeziehen, anwenden zu können.\nDie Studierenden können Methoden zum Design von sozialen Spielen anwenden.\nSie haben ihre in den ersten Semestern erworbenen Fähigkeiten im Programmieren (insbesondere in Java) vertieft und erweitert und praktische Erfahrungen im Software Engineering in kleinen Teams gewonnen. Sie haben die Fähigkeit gewonnen, sich benötigte Technologien (bspw. Umgang mit Geo-Informationssystemen in Bezug auf Location-based Mobile Social Games) schnell und effizient in dem Maße aneignen zu können, wie es für die praktische Lösung von Aufgaben im angestrebten Feld nötig ist.\nSie können Software für mobile Android Endgeräte und Serverkomponenten für Social Games und freizeitbezogene Social Computing Anwendungen entwickeln.",
        "inhalt": "In dem Modul IN0041 werden beispielhaft folgende Inhalte behandelt:\n- Design-Methoden für soziale Spiele und insbesondere mobile soziale Spiele (bspw. Sketching)\n- Anwendungen für Modelle sozialen Kontexts in (mobilen) sozialen Spielen in eigenen Implementierungen in Java.\n- Design eigener Formen sozialer Spiele und freizeitbezogene Social Computing Anwendungen im Web, insbesondere Social Networking Games, Location-Aware Mobile Social Games,-Socially-Aware Mobile Social Games\n- Programmierung von mobilen Endgeräten und Serverkomponenten für Social Games und freizeitbezogene Social Computing Anwendungen",
        "voraussetzungen": "Empfohlene Voraussetzungen sind die Studieninhalte des ersten bis dritten Fachsemesters. Das Modul Social Gaming (IN0040) sollte gleichzeitig besucht werden.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1351020&pOrgNr=1",
        "name": "Praktische Arbeit Bioinformatik",
        "kennung": "IN2294",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind in der Lage, sich in ein spezifisches wissenschaftliches Problem der Bioinformatik einzuarbeiten, durch ein Literaturstudium, Verwendung öffentlicher Quellen und Diskussionen mit dem Betreuer den Hintergrund des Problems zu erläutern und die konkrete Problemstellung zu spezifizieren. Die Studierenden sind in der Lage, hierfür einen ersten Vorschlag zur Modellierung und zur Lösung des Problems zu entwerfen und ggf. die vorliegenden Daten auf Verwendbarkeit für die konkrete Problemstellung zu prüfen.",
        "inhalt": "Ziel ist das Durchdenken und der Entwurf eines konkreten Forschungsprojekts aus der Bioinformatik, das dann in der Regel in der Bachelor’s Thesis ausführlich bearbeitet wird. Studierende können eigene Themen für das Modul Praktische Arbeit vorschlagen, normalerweise schlagen aber die Themensteller/Betreuer geeignete Themen aus ihrem Fachgebiet vor, meist eine aktuelle Fragestellung aus einem ihrer Forschungsprojekte.\nDas konkrete Thema des Forschungsprojekts hängt in der Regel vom Betreuer ab, d.h. von dem Gebiet der zugehörigen Forschungsgruppe, in der die Arbeit ausgeführt wird. Der inhaltliche Rahmen der praktischen Arbeit ist daher naturgemäß weit gestreckt, Beispiele für Themen sind die Entwicklung effizienter Algorithmen für Proteinstrukturvorhersage, Proteinfunktionsvorhersage, Multiples Alignment oder Phylogenien; die Entwicklung eines Verfahrens zur Analyse und Interpretation neuer Hochdurchsatzdaten; die Entwicklung neuer Methoden zur kombinierten Auswertung verschiedener genomweiter Datensätze oder biologischer Netzwerke; die Entwicklung neuer Verfahren zur Inferenz von Charakteristika mittels maschinellen Lernens; die Auswertung spezieller biologischer Datensätze zur Erzielung biologischer Erkenntnisse.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1717275&pOrgNr=1",
        "name": "PREP: Practical Research Experience Program",
        "kennung": "IN2374",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dieser Modulveranstaltung sind die Studierenden in der Lage, im Rahmen eines Forschungsprojekts in einem anspruchsvollen Informatik-Fachgebiet methodisch sauber Informatikkonzepte und -lösungen zu erarbeiten, welche aus dem Gebiet des jeweiligen Lehrstuhls stammen (z.B. Datenbanken, Informationssysteme, Netzwerke, Groupware, Grafik, Robotik, Bilderkennung). Sie sind fernerhin in der Lage ihre erreichten Ergebnisse zu überprüfen und zu bewerten. Schließlich wird es ihnen möglich sein, ihre Arbeitsergebnisse einem Fach- oder Laienpublikum vorzustellen sowie unter Anleitung ihre Ergebnisse in Form wissenschaftlicher Veröffentlichungen publikationsreif zu präsentieren.\nNeben reinen Fachkompetenzen wird den Studierenden ein hohes Maß an Methodenkompetenz vermittelt. Mit Hilfe dieser, vom Fach unabhängig einsetzbaren Kenntnisse und Fähigkeiten werden die Studierenden in die Lage versetzt, komplexe Aufgaben und Probleme selbständig zu bearbeiten, Problemlösefähigkeiten einzuüben, selbstreguliert zu Lernen und ihre Fremdsprachenkenntnisse zu verbessern.\nIn Bezug auf ihre Sozialkompetenz werden sie über Fertigkeiten verfügen mit ihren Kolleginnen und Kollegen, ihren Betreuerinnen und Betreuern zu kommunizieren, mit ihnen zu kooperieren sowie individuelle oder gemeinsame Ziele zu verwirklichen. Sie werden die Fähigkeiten besitzen ihre Begabung, Motivation und Leistungsbereitschaft zu entfalten und hierdurch die Entwicklung einer individuellen Persönlichkeit voran zu bringen.",
        "inhalt": "Das PREP Modul ist ausschließlich von solchen Studierenden wählbar, die Teilnehmer am PREP Austauschprogramms der TUM sind. Für alle anderen Studierenden ist dieses Modul nicht wählbar.\nDas PREP Modul wird als Blockveranstaltung abgehalten, die Anfang Juni beginnt und Mitte August endet. Es beinhaltet die individuell geplante Mitarbeit von Studierenden in einem wissenschaftlichen Arbeitskreis. Hierbei werden die Studierenden eine Teilaufgabe aus einem wissenschaftlichen Projekt unter Anleitung, selbständig bearbeiten. Das Projekt wird von einer erfahrenen Wissenschaftlerin / einem erfahrenen Wissenschaftler erstellt und die Studierenden bewerben sich im Rahmen eines Auslandsaufenthalts auf die Durchführung des Projekts. Die Studierenden werden während der Projektlaufzeit in die jeweilige Arbeitsgruppe integriert und von einer erfahrenen Wissenschaftlerin / einem erfahreneren Wissenschaftler direkt betreut. Die betreuende Person erklärt zunächst das Projekt, stellt es in einen größeren Zusammenhang, erklärt die Einzelheiten und umreißt schließlich eine Teilaufgabe, die der Studierende innerhalb der Praktikumszeit bearbeiten soll. Der Umfang des Projekts ist von der betreuenden Person so bemessen, dass innerhalb der zur Verfügung stehenden Zeit ein präsentierbares Ergebnis erreicht werden kann.\nBei der Durchführung des Projekts arbeiten die Studierenden in der Regel selbstständig an ihrem Projekt. Sie müssen daher ihr Arbeitspensum am jeweiligen Projektfortschritt ausrichten und die Fähigkeit zu selbstreguliertem Lernen demonstrieren.\nDas PREP-Modul wird von verschiedenen Lehrstühlen angeboten, so dass die Fachlichkeit der Anwendung aus dem Gebiet des jeweiligen Lehrstuhls stammt (z.B. Datenbanken, Compilerbau, Informationssysteme, Netzwerke, Groupware, Grafik, Robotik, Bilderkennung).",
        "voraussetzungen": "In diesem Modul wird ein wissenschaftliches Projekt vom Studenten / von der Studentin unter Anleitung einer erfahrenen Wissenschaftlerin / eines erfahrenen Wissenschaftlers selbständig bearbeitet. Daher setzt dieses Modul erweiterte Grundkenntnisse im jeweiligen Fachgebiet voraus. Aufgrund dessen können nur solche Studierende dieses Modul wählen, die in ein einschlägiges Universitätsstudium eingeschrieben sind und darin mindestens vier Fachsemester erfolgreich absolviert haben.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3155602&pOrgNr=1",
        "name": "Problembasiertes Lernen Bioinformatik",
        "kennung": "IN2343",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul sind die Studierenden in der Lage, selbstständig aktuelle Forschungsergebnisse aus der Literatur zu verstehen, zu extrahieren, zusammenzufassen, zu analysieren und zu bewerten sowie diese klar schriftlich und mündlich zu präsentieren und zu diskutieren. Diese Kompetenzen werden sowohl in den Bioinformatik-Praktika als auch in der Bachelor’s Thesis zum Verständnis und zur Präsentation konkreter biologischer Fragestellungen sowie informatischer Methoden und mathematischer Modelle benötigt.",
        "inhalt": "Techniken und Methoden zur Vortragsplanung, zur Literatursuche, zur Erstellung von Vorträgen, zur visuellen Präsentation, zur Erstellung und Gliederung wissenschaftlicher Ausarbeitungen und zur Moderation.\nAnhand aktueller Forschungsarbeiten in der Bioinformatik wird eine Präsentation mit zugehöriger Ausarbeitung erstellt und präsentiert. Die Studierenden arbeiten sich unter Anleitung in das Themengebiet und die aktuelle Forschungsfrage ein. Sie verstehen und reproduzieren Teile der publizierten Ergebnisse. Die Auswahl der Themengebiete obliegt dem jeweiligen Dozenten. Beispiele für Themen sind effiziente Algorithmen zur Alignierung, Sequenzanalyse, Proteinstrukturvorhersage, Proteinfunktionsvorhersage, oder Phylogenien; Methoden zur Analyse und Interpretation neuer Hochdurchsatzdaten.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1605337&pOrgNr=1",
        "name": "Project Work in Informatics",
        "kennung": "IN8028",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, participants are able to apply knowledge and methods in a research project in the field of Informatics.\nThey have deepened and further cross-linked their understanding of Informatics and the Informatics-related topics acquired by the third-semester modules IN8005, IN8027 (Introduction to Informatics for Students of Management & Technology – Programming Lab Course).\nStudents are able to analyze elements of the solution space of the given research problem in a team under given technical, economic and social constraints. In doing so, they can work out important questions related to the research problem in an Informatics field and clarify them in close coordination with experts from this area.\nThey are able to apply the theoretical knowledge acquired in the third semester such as a basic understanding of Machine Learning and practical capabilities such as programming in Java, using Machine Learning Libraries, or practical Software Engineering skills to an Informatics research-problem and develop their own solutions or solution contributions to the related research questions in a team.\nThey are able to prepare the solution developed in the project in such a way that they can present it to application experts in a written form and orally.\nStudents acquire missing Informatics knowledge and skills related to the research question of the project by private study under the guidance of the advisors.",
        "inhalt": "The project work centers on a research question in the field of work of the supervisor and the advisor (typically a doctoral student). Students experience hands-on work in a project, where they work together in teams. They pass through the whole process of a small scientific project. The content depends on the research question and the elements of scientific project work. Example content: In a design science methodology driven research program, an intermediate technological artifact (e.g. a software system) has been developed as an intermediate result by the advisor under the guidance of the supervisor. As an example, consider a user interface for an interactive visual data-exploration system. The project work of the student team may consist in systematically evaluating this technological artifact with the help of human study participants in focus groups. The contents of the module then encompass quantitative and qualitative evaluation methods, the technology of the artifact, content elements of the theoretical background of the research question / research field (e.g. UI-Design, Information Visualization, Data-Mining).",
        "voraussetzungen": "• IN8005 Introduction to Informatics for Students of Management and & Technology\n• IN8027 Introduction to Informatics for Students of Management & Technology – Programming Lab Course",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1150166&pOrgNr=1",
        "name": "Protein Prediction I for Bioinformaticians",
        "kennung": "IN2221",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studenten verstehen die grundsätzlichen Konzepte der Proteinsequenzanalyse, von Proteinstrukturen und der Vorhersage von Proteinstrukturen und sind in der Lage diese zu bewerten. Sie können die aktuellsten technischen Methoden entsprechend dieser Grundsätze in der Bioinformatik anwenden.\nDie Studenten können (in von Tutoren geleiteten Gruppen) ihre eigenen Vorhersagemethoden entwickeln, indem sie bestehende Methoden oder Algorithmen kombinieren und / oder neue Methoden entwickeln.\nDie Teilnehmer sind in der Lage, veröffentlichte Methoden zu analysieren und zu bewerten (sowohl als Leser der Veröffentlichung, als Gutachter und als Konkurrent). Basierend auf den Ergebnissen dieser Bewertungen sind sie in der Lage, ein Werkzeug zu erstellen, das für experimentelle Biologen und Bioinformatiker einfach anwendbar ist. Das bedeutet dass sie in der Lage sind, abstrakte Lösungsideen unter Berücksichtigung technischer Aspekte in Pseudo-Code und wahlweise während der Übungen weiter in funktionsfähige Programme umzusetzen.",
        "inhalt": "Einführung: Was ist ein Protein? Was sind Proteinstruktur & -funktion? Vorhersage der Proteinstruktur: Überblick.\nMethoden: Sequenzvergleiche (Sequenz – Sequenz, Sequenz – Profil, Profil – Profil, HMM); Vorhersage von Proteinstruktur in 1D (Sekundärstruktur, Lösungsmittelzugänglichkeit, Membranhelices), 2D (Kontaktvorhersagemethoden, zeitgemäße Methoden unter Verwendung korrelierender Mutationen), 3D (vergleichendes Modellieren, Molekulardynamik); Vorhersage von unstrukturierten Bereichen in Proteinen.\nDie Vorlesung beinhaltet eine Einführung ins Maschinelle Lernen mit speziellem Fokus darauf, wie überoptimistische Vorhersagen vermieden werden können.",
        "voraussetzungen": "Grundlagenwissen in Bioinformatik entsprechend den Fachsemestern 1-4 im Bachelor Bioinformatik.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1149546&pOrgNr=1",
        "name": "Protein Prediction I for Computer Scientists",
        "kennung": "IN2322",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Students understand the basic principles in protein sequence analysis, in protein structure and protein structure prediction. They understand the biological and computer science background of the methods toward these objectives in computational biology.\nStudents have acquired the theoretical background consisting of the presented knowledge to develop and implement simple independent solutions towards the presented problems.",
        "inhalt": "Introduction: What is a protein? What is protein structure & function? Overview of methods predicting protein structure.\nMethods: Sequence comparisons (sequence-sequence, sequence-profile, profile-profile, HMM); prediction of protein structure in 1D (secondary structure, solvent accessibility, membrane helices), 2D (contact prediction methods, contemporary methods using correlated mutations), 3D (comparative modeling, MD); prediction of disorder in proteins.\nThe lectures include an introduction to machine learning with particular focus on how to avoid over-estimating performance.",
        "voraussetzungen": "None",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=608646&pOrgNr=1",
        "name": "Protein Prediction II for Bioinformaticians",
        "kennung": "IN2230",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studenten verstehen die grundsätzlichen Konzepte der Proteinsequenzanalyse mit dem Fokus auf Proteinfunktion und der Vorhersage von Proteinfunktionen und sind in der Lage diese zu bewerten. Sie können die aktuellsten technischen Methoden entsprechend dieser Grundsätze in der Bioinformatik anwenden.\nDie Studenten können (in von Tutoren geleiteten Gruppen) ihre eigenen Vorhersagemethoden entwickeln, indem sie bestehende Methoden oder Algorithmen kombinieren und / oder neue Methoden entwickeln.\nDie Teilnehmer sind in der Lage, veröffentlichte Methoden zu analysieren und zu bewerten (sowohl als Leser der Veröffentlichung, als Gutachter und als Konkurrent). Basierend auf den Ergebnissen dieser Bewertungen sind sie in der Lage, ein Werkzeug zu erstellen, das für experimentelle Biologen und Bioinformatiker einfach anwendbar ist. Das bedeutet, dass sie in der Lage sind, abstrakte Lösungsideen unter Berücksichtigung technischer Aspekte in Pseudo-Code und wahlweise während der Übungen weiter in funktionsfähige Programme umzuwandeln.",
        "inhalt": "Einführung: was ist ein Protein? Was ist Proteinfunktion? Überblick über die Vorhersage von Proteinfunktionen.\n\nVorhersage von Proteinfunktionen beruhend auf Sequenzen: Sequenzalignments, multiple Sequenzalignments, Leitmotive, Domänenzuweisung, Annotationstransfer durch Homologie, de novo-Vorhersagen. Vorhersage von Proteinfunktionen durch die Verwendung von Struktur: Strukturalignments, Strukturmotive, Annotationstransfer aufgrund der Ähnlichkeit von Strukturen. Von Strukturvorhersage zu Funktionsvorhersage: vergleichendes Modellieren, Vorhersage von: subzellulärer Lokalisierung, Protein-Protein Interaktionen, Protein-DNA und -RNA-Interaktionen, Protein-Substrat-Interaktionen, Proteinnetzwerke, Gen-Ontologie (GO), Enzymklassifikationen, Vorhersage von enzymatischer Aktivität, Vorhersagen von funktionellen Klassen (z.B,: GO-Klassen).\nVorhersage des Effekts von einzelnen Punktmutationen (Sequenzvarianten) auf Proteinfunktion und Organismus. Vorhersage vom Phänotyp aus dem Genotyp.\nWie beim ersten Teil (Protein Prediction I) beinhaltet das Modul eine Einführung ins Maschinelle Lernen mit speziellem Fokus auf der Vermeidung von überoptimistischen Vorhersagen.\nIm Gegensatz zum ersten Teil (Protein Prediction I) spielt die Proteinstruktur nur eine untergeordnete Rolle: die Einführung in die Proteinstruktur dient lediglich dazu, das Verständnis der Proteinfunktion zu unterstützen.",
        "voraussetzungen": "Grundlagenwissen in Bioinformatik entsprechend den Fachsemestern 1-4 im Bachelor Bioinformatik.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=930647&pOrgNr=1",
        "name": "Protein Prediction II for Computer Scientists",
        "kennung": "IN2291",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Students will learn the basic principles of protein sequence analysis with focus on protein function and protein function prediction. They will be confronted with the biological and computer science background of the methods toward these objectives in computational biology. Particular focus will be on learning safeguards to correctly estimate performance of machine learning. As opposed to the first part (Protein Prediction I for Computer Scientists), protein structure plays at most a minor role: it will be introduced only if it has been helpful to further our understanding of function.\nStudents will acquire the theoretical background consisting of the presented knowledge to develop and implement simple independent solutions towards the presented problems.",
        "inhalt": "Introduction: What is a protein? What is protein function? Overview over prediction of protein function.\nPredicting protein function using sequence: motifs, annotation transfer by homology (homology-based inference), de novo predictions. Predicting protein function using structure: structural motifs, annotation transfer via structure similarity. Prediction of: subcellular localization, protein-protein interactions, protein-DNA and –RNA interactions, protein-substrate interactions, protein networks, GeneOntology (GO), Enzyme Classification, prediction of enzymatic activity, prediction of functional classes (e.g. GO classes).\nPrediction of the effect of single point mutations (sequence variants) on protein function and the organism (focus on single amino acid variants). Prediction of phenotype from genotype.\nAs opposed to the first part (Protein Prediction I), protein structure plays a minor role confined to what is helpful to further our understanding of protein function. Another major difference is that alignment methods will not be discussed although their results (evolutionary information) will be central to almost all prediction methods.",
        "voraussetzungen": "None required (recommended: IN2322: Protein Prediction I for Computer Scientists).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1254191&pOrgNr=1",
        "name": "Quantitative Verification",
        "kennung": "IN2340",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Successful participation enables students to\n• explain the role of quantitative modelling and analysis for ensuring hardware and software quality.\n• give formal models of simple hardware and software systems describing their probabilistic and timed behavior.\n• write formal specifications of simple safety, dependability, reliability, and performance properties.\n• explain algorithms for checking if a system satisfies a given specification and apply them to small examples.\n• understand and explain techniques for improving practical performance of the analysis algorithms.",
        "inhalt": "The course teaches the fundamentals of modelling and analysis of systems featuring quantitative behavior, such as time and probabilities. Topics include:\n• Representation of hardware and software systems using formal models of computations, e.g., transition systems, discrete-time and continuous-time Markov chains, Markov decision processes, stochastic games, timed automata.\n• Representation of specifications using formal logics, e.g., probabilistic linear temporal logic, probabilistic computation-tree logic, continuous stochastic logic, metric temporal logic.\n• Algorithms for various classes of formal models and specifications, e.g., transient analysis, stationary analysis, mean-payoff optimization, reachability-game solving.\n• Theoretically optimal as well as practical techniques for analysis of large systems, e.g., linear programming, value iteration, strategy iteration, reinforcement learning.\n• Industrial application of the analysis, e.g., randomized communication protocols, embedded systems, cyber-physical systems, safety-critical missions.\n• Practical experience in applying model checking tools, e.g., PRISM, MRMC, UPPAAL.",
        "voraussetzungen": "IN0011 Einführung in die Theoretische Informatik\nIN0015 Diskrete Strukturen\nIN0018 Diskrete Wahrscheinlichkeitstheorie\nIN2050 Model Checking",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=487478&pOrgNr=1",
        "name": "Query Optimization",
        "kennung": "IN2219",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer beherrschen die wesentlichen Optimierungstechniken der Anfrageoptimierung, können sie problembezogen entwickeln sowie die Komplexität von konkreten Anfragen analysieren bzw. die Anfragen zwecks Verbesserung bewerten.",
        "inhalt": "- Anfrageverarbeitung in relationalen Datenbanksystemen\n- grundlegende Techniken der Anfrageoptimierung\n- Bestimmung der optimalen Joinreihenfolge\n- Techniken der dynamischen Programmierung\n- Kostenmodelle für die Anfrageverarbeitung\n- Optimierung unter der Berücksichtigung von physikalischen Eigenschaften",
        "voraussetzungen": "IN0008 Grundlagen: Datenbanken",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458193&pOrgNr=1",
        "name": "Randomisierte Algorithmen",
        "kennung": "IN2160",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls verfügen über gründliche Kenntnisse verschiedener Grundprinzipien randomisierter Algorithmen, zugehöriger Berechnungsmodelle, der entsprechenden mathematischen Analysen (Abschätzungen nach Markov, Chebyshev, Chernoff) sowie mehrerer paragdigmatischer Anwendungen.",
        "inhalt": "Das Modul entwickelt zunächst grundlegende Ergebnisse im Bereich der randomisierten Algorithmen. Es werden der randomisierte Quicksort-Algorithmus sowie randomisierte Algorithmen für Min-Cut, Binary-Planar-Partition und die Verifikation von Matrizenmultiplikation hergeleitet.\nDas Modul behandelt die Konzepte von Las-Vegas und Monte-Carlo-Algorithmen und definiert verschiedene randomisierte Komplexitätsklassen. Es behandelt spieltheoretische Techniken wie Yao’s Minimax-Prinzip und wendet dieses auf die Spielbaumevaluation an.\nDas Modul stellt Momente vor und entwickelt elementare Ungleichungen wie die Markov-Ungleichung und die Chebyshev-Ungleichung. Diese werden eingesetzt, um das Coupon-Collector-Problem sowie die Probleme der Medianberechnung und der stabilen Heirat eingehend zu analysieren. Weiterhin entwickelt das Modul Chernoff-Schranken und analysiert mit ihrer Hilfe Routing- und Verdrahtungsprobleme.\nDie probabilistische Methode wird vorgestellt und auf zahlreiche Probleme angewandt.\nSchließlich studiert das Modul randomisierte Datenstrukturen wie Treaps sowie das universelles und perfektes Hashing.",
        "voraussetzungen": "IN2003 Effiziente Algorithmen und Datenstrukturen, IN0015 Diskrete Strukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2809336&pOrgNr=1",
        "name": "Requirements Engineering",
        "kennung": "IN2394",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, students are familiar with the basic concepts and methods of Requirements Engineering. They have the ability to analyse typical scenarios and identify typical challenges. Furthermore, students can apply and evaluate suitable concepts and methods for concrete problems.",
        "inhalt": "Requirements Engineering (RE) as a first and ongoing activity of a development project, is crucial for the success of every project, as its outcome determines the further course of the project.\n\nIn this activity, the stakeholders are identified. Their goals are analysed and conflicting goals resolved. A variety of elicitation methods and decomposition techniques are applied to deduce concrete requirements. Depending on the context of the project, different methods to formulate these requirements are necessary. Continuous quality control is essential to mitigate the risk of project failure due to ill-formulated or invalid specifications.\nFurthermore, non-functional requirements need to be formulated with great care to minimize subjectiveness. One major challenge in the context of RE is to manage permanently occurring change. This change can happen due to moving goals of the stakeholders or changes in the environment of the system under construction.\n\nThe lecture \"Requirements Engineering\" covers all important topics of Requirements Engineering (RE), especially the RE-Tasks, different types of requirements, requirement extraction, negotiation, documentation, and management. It is shown how the first, mostly informal, requirements are described, concretized, potentially formalized, managed, and evolved. This lecture considers different process models that are used for and within RE.\nThis forms a solid basis for students to become active in both industrial requirements engineering and RE research.",
        "voraussetzungen": "IN0006 Introduction to Software Engineering",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1350593&pOrgNr=1",
        "name": "Ringvorlesung Digitalisierung",
        "kennung": "IN2348",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, auf universitärem Niveau die verschiedenen Facetten der Digitalisierung zu verstehen, zu analysieren, zueinander in Bezug zu setzen und Zielkonflikte zu identifizieren.",
        "inhalt": "Aspekte der Digitalisierung aus der Sicht verschiedener Disziplinen: Informatik, Wirtschaftsinformatik, Recht, Ökonomie, Politikwissenschaft, Soziologie, Philosophie und Ethik, Sicherheit und Privatheit und aus der Sicht industrieller Anwendungen.",
        "voraussetzungen": "Grundverständnis informatischer Zusammenhänge",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1629493&pOrgNr=1",
        "name": "Ringvorlesung Games Engineering",
        "kennung": "IN2368",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, auf universitärem Niveau die verschiedenen Facetten der Games Branche zu verstehen und zu analysieren. Zusätzlich erwerben die Studierenden ein breites Wissen über die aktuellen Entwicklungen und Trends dieser Branche, sowie Einblicke in den aktuellen Stand und Technologie aus dem Feld des Games Engineerings.",
        "inhalt": "Aspekte aus dem Feld des Games Engineering aus der Sicht von verschiedenen Disziplinen, wie Informatik, Wirtschaft, Recht, Business, Forschung und Entwicklung mit direktem Industriebezug.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4115503&pOrgNr=1",
        "name": "Scientific Computing and Machine Learning",
        "kennung": "CIT423000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls beherrschen Studierende die Grundlagen und den mathematischen Formalismus von Problemen und Methoden des Scientific Computing, die für Machine Learning wichtig sind. Insbesondere verstehen sie die Beschreibung dynamischer Systeme (gewöhnliche und partielle Differentialgleichungen). Studierende können relevante Softwareframeworks (z.B. numpy, scipy, tensorflow, pytorch, JAX, CUDA) in praktischen Anwendungen verwenden. Darüber hinaus können sie mögliche Anwendungsfelder des maschinellen Lernens in den Naturwissenschaften bewerten.",
        "inhalt": "Scientific Computing and Machine Learning behandelt Algorithmen des maschinellen Lernens im Kontext von Scientific Computing, um Lösungsmethoden für Probleme in den Naturwissenschaften und dem Ingenieurwesen zu entwickeln. Inhalte der Vorlesung sind unter anderem:\n- Numerische Approximationsmethoden von Lösungen gewöhnlicher und partieller Differentialgleichungen (Physics-informed neural networks, Deep neural operators, Random feature methods, Gaussian processes, Modellreduktion)\n- Regelungstechnik für dynamische Systeme\n- Inverse Probleme, die Differentialgleichungen enthalten\n- Bedingungen und Erhaltungssätze (Hamilton- and Lagrange Formalismus, „hard constraints“ für Algorithmen des maschinellen Lernens)\n- Probleme, die beim maschinellen Lernen auf kleinen Datensätzen auftreten\n- Maschinelles Lernen auf spezialisierter Hardware (v.a. CPU vs. GPU)",
        "voraussetzungen": "MA0901 Lineare Algebra für Informatik\nMA0902 Analysis für Informatik\nIN0019 Numerisches Programmieren\nIN0018 Diskrete Wahrscheinlichkeitstheorie\nIN2064 Machine Learning",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456354&pOrgNr=1",
        "name": "Scientific Computing I",
        "kennung": "IN2005",
        "organisation": "Department Computer Science",
        "anmerkung": "ab WS12/13 4 SWS und 5 Credits",
        "lernergebnisse": "At the end of the module, participants know the steps of the scientific computing pipeline. They are able to classify and derive simple models, to analyze model behavior (e.g., critical points, asymptotic behavior), and to apply common discretization methods as well as explicit and implicit time stepping schemes to a given model.\nThey are able to assess the adequacy and accuracy of numerical methods and underlying models according to the criteria introduced in the lectures. They can discuss typical limitations and potential errors of models and discretizations. For selected scenarios they have learned that simulation results and simulation errors can have massive societal and economic impact.\nIn addition, students understand the impact of further parts of the simulation pipeline (such as grid generation, grid traversal, data storage, matrix assembly, parallelization, and visualization issues) on modelling and discretization.",
        "inhalt": "The module introduces the steps of the scientific computing simulation pipeline on selected simulation scenarios, focusing especially on aspects of modelling and discretization:\n- classification of mathematical models (discrete/continuous, deterministic/stochastic, etc.);\n- discrete models (e.g. Markov chain models)\n- modeling with ordinary differential equations for the example of population growth;\n- numerical solution of systems of ordinary differential equations;\n- modeling with partial differential equations (PDE) for the example of fluid dynamics;\n- numerical discretization methods for partial differential equations (finite elements, time stepping, grids and adaptivity);\n- limitations and errors encountered in models and discretized models\n- adequacy and asymptotic behavior of models (stability, consistency, accuracy, and convergence of numerical methods)\n\n\nAn outlook will be given on the impact that further steps of the simulation pipeline can have on the selection of modeling and discretization techniques, such as:\n- efficient sequential and parallel implementation (architectures, parallel programming, load distribution, domain decomposition, parallel numerical methods);\n- visualization or results\n- embedding of simulations in larger simulation environments (coupled models, workflows for parameter studies and uncertainty quantification)\n\nExamples are primarily selected from societally and economically relevant simulation scenarios, such as:\n- Discrete and continuous population models (incl. spreading of diseases, traffic simulation, use of population-type models in economy)\n- Simulation of hazards (e.g. shallow water models for tsunami simulation)\n- Computational fluid dynamics (towards weather and climate simulation)",
        "voraussetzungen": "Students should have basic knowledge in differential calculus and linear algebra.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=476730&pOrgNr=1",
        "name": "Scientific Computing II",
        "kennung": "IN2141",
        "organisation": "Department Computer Science",
        "anmerkung": "ab SoSe 13 4 SWS und 5 Credits",
        "lernergebnisse": "At the end of the module, students are familiar with typical problems arising in the algorithmic treatment and implementation stages of the numerical simulation pipeline. For large, sparse linear systems arising from the discretization of (systems of) partial differential equations, they know the main classes of iterative solvers. They can evaluate the range of application of such methods in standard scenarios and they remember their basic performance features. Students can apply these methods to a given problem and implement them in code. They are aware of restrictions and possible errors arising in certain application scenarios.\nStudents understand the typical steps of the simulation pipeline for particle-based simulations, from modeling over discretization and numerics to implementation and visualization. For the scenario Molecular Dynamics, they have detailed knowledge of these steps and are able to design and realize suitable simulation software. They can apply efficient algorithms to calculate pairwise forces between particles.",
        "inhalt": "The module introduces key steps of the scientific computing simulation pipeline on selected simulation scenarios, focusing especially on aspects of iterative solvers and efficient algorithmic treatment of numerical schemes. In terms of application areas, the module focuses on computational fluid dynamics and on particle simulations in scientific computing:\nParticular topics are:\n- sparse linear systems arising in discretized PDE systems (e.g. computational fluid dynamics)\n- multigrid methods (multigrid schemes, smoothers, impact of grid transfer operations and coarse grid discretization)\n- Krylov subspace methods (steepest descent, conjugate gradients)\n- preconditioning techniques (hierarchical basis preconditioning)\n- convergence properties and asymptotic performance analysis of solvers; possible errors and sources of inefficiencies in solver components\n- Modelling in molecular dynamics simulation\n- time stepping schemes for particle simulations\n- efficient implementation of all-to-all interaction (e.g. Linked Cell, Verlet lists, Barnes-Hut and Fast Multipole algorithm) including parallelization aspects",
        "voraussetzungen": "Students should have basic knowledge in differential calculus and linear algebra. Knowledge in numerical programming and scientific computing is recommended – e.g., from modules Scientific Computing I (IN2005), Modelling and Simulation (IN2010), Numerical Programming (IN0019)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977334&pOrgNr=1",
        "name": "Scientific Computing in Circuit Simulation",
        "kennung": "IN2306",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, participants know the basic modeling and algorithms needed for circuit simulation. They are able to understand the necessary interaction between engineers, mathematicians, and computer scientists in industrial problem modeling. They understand the role and importance of mathematical problem analysis and its theoretical treatment, which are transformed into an engineer's solution. The participants are able to analyze the impact of different mathematical approaches for industrial problems. They can understand, apply, and interprete the basic methods how to implement the algorithms in an efficient way allowing a fast simulation of electronic circuits.",
        "inhalt": "The lecture includes the following scientific computing topics:\n- industrial design of electronic circuits\n- modeling of electrical networks and network elements\n- differential-algebraic equations (DAEs): theory, numerical integration\n- sparse matrix techniques\n- algorithms for parallel and distributed computing\n- further challenges (e.g., latency and bypass strategies, noise)",
        "voraussetzungen": "IN0019 Numerical Programming (or similar)\nIN0002 Fundamentals of Programming (Exercises & Laboratory) (or similar)\nStudents should have basic knowledge in differential calculus and linear algebra",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1020200&pOrgNr=1",
        "name": "Secure Coding",
        "kennung": "IN2313",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "The participants acquire:\n+ Capacity to apply general principles on secure software development, independent of the programming language\n+ Capacity to perform Basic Black-box and White-box Vulnerability analysis for PHP, Java and C/C++.\n+ Capacity to develop in-depth defense strategies and best practices for PHP, C/C++ and Java.\n+ Basic reverse-engineering and software obfuscation skills.\n+ Knowledge of software tools for vulnerability detection and code protection.\n+ Capacity to adequately report testing and fixing outcomes.",
        "inhalt": "In this lecture we focus on tools and guidelines for the development of secure software. The course will cover two main types of software: Web services (in PHP) and native applications (in C/C++ and Java). For these two categories, we will briefly recall the most exploited vulnerabilities (OWASP Top 10, memory errors, common logical vulnerabilities, errors using cryptography) and we will concentrate on best-practices to avoid them, as well as on tools that help developers to build security into their software, including automatic and semi-automatic security testing tools, syntactic analysis tools for source code, reverse engineering/obfuscation tools and code-reviewing. Parallel to the theoretical course, we will develop an actual application and analyse its security through five iterative development and testing phases.",
        "voraussetzungen": "Students should have sound programming skills and a general security background (for instance IN229 or IN2178 for security and IN1501 for programming).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456513&pOrgNr=1",
        "name": "Semantics",
        "kennung": "IN2055",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Semantik von Programmiersprachen auf einem wissenschaftlichen Niveau. Die Teilnehmer haben ein vertieftes Verständnis von mindestens einer der drei wichtigsten Techniken zur Definition der Semantik von Programmiersprachen: operational, denotational und axiomatisch.\nInsbesondere haben die Studenten folgende Fähigkeiten: Sie können\n- Semantiken lesen und deren logische Konsequenzen verstehen;\n- die Semantik einzelner Sprachkonstrukte selbst definieren;\n- Eigenschaften sowohl einzelner Programme als auch von Semantiken logisch herleiten;\n- Werkzeuge wie Compiler und Programmanalysatoren bezüglich einer Sprachsemantik verifizieren.",
        "inhalt": "Es werden folgende Kernthemen der Semantik von Programmiersprachen behandelt: Operationale und axiomatische Semantik und ihre Beziehung zu einander. Grundlegende induktive Definitionsprinzipien und Beweismethoden. Grundlegende Spracheigenschaften wie Typsicherheit. Anwendungen auf Werkzeuge wie Compiler und Programmanalysatoren. Programmverifikation mit axiomatischer Semantik. Je nach Ausprägung dient eine einfache imperative und/oder funktionale Sprache als Basis. Optionale weitere Themen (beispielhaft):\n- Denotationale Semantik\n- Semantik von Prozeduren, Arrays und Zeigern\n- Semantik objektorientierter Sprachen",
        "voraussetzungen": "IN0003 Einführung in die Informatik 2, IN0011 Einführung in die Theoretische Informatik, IN0001 Einführung in die Informatik 1, Grundkenntnisse in diskreter Mathematik und imperativer und funktionaler Programmierung.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473906&pOrgNr=1",
        "name": "Seminar Projektmanagement",
        "kennung": "IN9011",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Moduls verfügen die Studierenden über grundlegende Fähigkeiten und Kenntnisse im Projektmanagement und können diese auf einfache Szenarien anwenden, z.B. Ziele und Projektphasen definieren, Ressourcenpläne aufstellen oder Mitarbeiter in Projekten führen. Exemplarisch beherrschen die Teilnehmer den Einsatz eines verbreiteten Projektmanagement-Tools und sind in der Lage Aspekte aus dem Bereich Projektmanagement adäquat darzustellen.",
        "inhalt": "Grundlagen des Projektmanagements, Internationale Quasi-Standards für Projektmanagement, Phasen eines Projekts, Qualitäts- und Erfolgskontrolle und -sicherung, Planung und Einsatz von Ressourcen, Softwareunterstützung für erfolgreiches Projektmanagement, Zeitmanagement.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473902&pOrgNr=1",
        "name": "Seminar Wissenschaft und Ethik",
        "kennung": "IN9010",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Absolvieren des Moduls sind die Studierenden in der Lage, ethische Aspekte unterschiedlicher Verhaltensweisen, die mit wissenschaftlichem Arbeiten verbunden sind (Ziele der Forschung, Durchführung von Forschungsarbeiten und auch die mögliche Anwendung der Forschungsresultate), zu analysieren und zu bewerten sowie diese adäquat darzustellen.",
        "inhalt": "- Biographien bedeutender Wissenschaftlerinnen und Wissenschaftler (Meitner, Einstein, Russell, Heisenberg, v. Braun,...)\n- Forschung in Diktaturen\n- Betrug, Irrtum und geistiger Diebstahl\n- Ethik und Informatik (Überwachung, Freiheit des Internet, Open Source, Star Wars,...)\n- Genforschung, Intelligent Design, Tierexperimente",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473900&pOrgNr=1",
        "name": "Sich und andere führen",
        "kennung": "IN9009",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme haben die Studierenden anhand von Erfahrungslernen durch Feedback und Selbstreflexion ihre Führungskompetenzen erweitert, indem sie auf Basis einer realistischen Einschätzung Stärken ausgebaut bzw. Schwächen abgefedert haben. Sie sind in der Lage, konstruktiv Feedback zu geben und zu erhalten.",
        "inhalt": "- Persönliche Definition von Führung, Kompetenzprofil einer erfolgreichen Führungskraft\n- Standortbestimmung: Eigene Stärken und Schwächen, Führungsanspruch\n- Wahrnehmung, Einschätzung, Kommunikation, Feedback\n- Führen einzelner Mitarbeiter: Führungssituationen und -gespräche\n- Führen von Gruppen: Gruppendynamik, Widerstand\n- Umgang mit Konflikten\n- Sich präsentieren und Sitzungen moderieren\n- Führungsinstrumente und Führungsstile (inkl. Coaching)\n- Führung zwischen Unternehmens- und Mitarbeiterinteressen",
        "voraussetzungen": "Die Teilnehmer sollten sich in der aktiven Phase der Auseinandersetzung mit dem künftigen Berufsbild befinden. Erste Führungserfahrungen im beruflichen / privaten / sozialen Umfeld sind hilfreich.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456382&pOrgNr=1",
        "name": "Simulation und Animation",
        "kennung": "IN2025",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer verstehen die grundlegenden (physikalischen) Modelle und die mathematischen Beschreibungen und Lösungsverfahren zur computer-unterstützten Simulation von Charakteranimationen, Starr- und Weichkörpern, und Fluiden. Die Teilnehmer sind in der Lage, die im bereich der Computergraphik zum Einsatz kommenden Techniken in Bezug auf Realismus und Komplexität zu analysieren und differenzieren.",
        "inhalt": "Industrial animation process, character animation (keyframing, inverse kinematic, ragdolls), rigid body motion (kinematics, collision detection, collision response), soft body simulation (mass-spring systems, linear elasticity, finite-elements), fluid simulation (wave equation, shallow water equation, Navier-Stokes equations, discretization), visualization techniques for volumetric phenomena",
        "voraussetzungen": "Bachelor Informatik, Semester 1 bis 4",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=654521&pOrgNr=1",
        "name": "Social Computing",
        "kennung": "IN2241",
        "organisation": "Department Computer Science",
        "anmerkung": "5 Credits ab SoSe 2015; Übertrag der Modulverantwortlichkeit von Prof. Klinker auf Prof. Groh ab WiSe25/26 (17.06.25, KG)",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme am Modul sind die Studierenden in der Lage, die im Inhalt genannten Grundbegriffe, Konzepte und Denkweisen des Social Computing zu verstehen, um diese zum einen bei der Konzeption und Implementierung von Social Computing Anwendungen anwenden zu können, die insbesondere individuelle und soziale Kontexte von Spielern intelligent einbeziehen. Zum anderen sind sie in der Lage, diese Grundbegriffe, Konzepte und Denkweisen, auch in der Forschung zum Thema Social Computing anwenden zu können. Hierzu zählt insbesondere die Fähigkeit, entsprechende Fachpublikationen lesen und verstehen zu können sowie die Fähigkeit, auch eigene Algorithmen und abstraktere soziotechnische Lösungsansätze für Social Computing Probleme in Zusammenhang mit den genannten Inhalten entwickeln zu können.",
        "inhalt": "In dem Modul IN2241 werden beispielhaft folgende Inhalte behandelt:\n- Grundlagen Social Computing, Social Media, Web2.0, (Mobile, Decentralized) Social Networking, Modelle sozialen Kontexts\n- Grundlagen Soziometrie: Zentralität: Konzepte und Algorithmen\n- Grundlagen Soziometrie: Dichte Subnetzwerke: Konzepte und Algorithmen\n- Grundlagen Soziometrie: Graph Clustering: Konzepte und Algorithmen\n- Metrische Clustering Verfahren für Social Computing / Social Gaming Anwendungen\n- Metriken, Eigenschaften und Modelle realer Netzwerke (Small Worlds etc.)\n- Modelle für soziale Beziehungen in Raum und Zeit\n- Grundlagen des Social Signal Processing\n- Grundlagen Spieltheorie\n- Optional: Visualisierung von statischen und dynamischen Netzwerken\n- Optional: Social Semantic Web",
        "voraussetzungen": "Empfohlene Voraussetzungen sind die Studieninhalte des Bachelors Informatik.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1002906&pOrgNr=1",
        "name": "Social Gaming",
        "kennung": "IN0040",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme am Modul sind die Studierenden in der Lage, die im Inhalt genannten Konzepte/Modelle, Techniken/Algorithmen und Denkweisen/Methodiken des Social Computing und Social Gaming und bestehender und möglicher Anwendungen (insbesondere im Bereich Social Gaming) zu verstehen. Sie haben darüber einen Überblick gewonnen, um diese im Team in der praktischen Konzeption und Implementierung eigener sozialer Spiele und freizeitbezogener Social Computing Anwendungen anwenden zu können, die insbesondere individuelle und soziale Kontexte von Spielern intelligent einbeziehen. Zum anderen sollen sie in die Lage versetzt werden, die im Inhalt aufgeführten Konzepte/Modelle, Techniken/Algorithmen und Denkweisen/Methodiken auch in der Forschung zum Thema Social Gaming / Social Computing anwenden zu können. Hierzu zählt insbesondere die Fähigkeit, entsprechende Fachpublikationen lesen, verstehen und im Hinblick auf ihre Anwendung im Bereich soziale Spiele bewerten zu können sowie die Fähigkeit, auch eigene Algorithmen und abstraktere soziotechnische Lösungsansätze für Social Gaming / Social Computing Probleme (in Zusammenhang mit den genannten Inhalten, insbesondere im Hinblick auf die intelligente Nutzbarmachung sozialer Kontexte) entwickeln zu können.",
        "inhalt": "In dem Modul IN0040 werden beispielhaft folgende Inhalte behandelt:\n- Ludologische Grundbegriffe sozialer Spiele (Konzepte und Modelle)\n- Grundlagen Social Computing, Social Media, Web2.0, (Mobile, Decentralized) Social Networking, sozialer Kontext (jeweils algorithmisch verarbeitbare Konzepte und Modelle sowie grundlegende Denkweisen und Methodiken)\n- Formen sozialer Spiele und freizeitbezogener Social Computing Anwendungen im Web (Anwendung der besprochenen Konzepte und Modelle)\n- Grundlagen Soziometrie: Zentralität: Konzepte, Modelle und Algorithmen\n- Grundlagen Soziometrie: Dichte Subnetzwerke: Konzepte, Modelle und Algorithmen\n- Grundlagen Soziometrie: Graph Clustering: Konzepte, Modelle und Algorithmen\n- Metrische Clustering Techniken für Social Computing / Social Gaming Anwendungen\n- Metriken, Eigenschaften und Modelle realer Netzwerke (Small Worlds etc.). Algorithmen die diese Metriken, Eigenschaften und Modelle verwenden.\n- Konzepte und Modelle für soziale Beziehungen in Raum und Zeit\n- Grundlagen des Social Signal Processing: Konzepte, Modelle und Algorithmen und Anwendungen.\n- Grundlagen Spieltheorie: Konzepte und Algorithmen\n- Optional: Visualisierung von statischen und dynamischen Netzwerken: Konzepte und Algorithmen\n- Optional: Social Semantic Web: Konzepte und Algorithmen",
        "voraussetzungen": "Empfohlene Voraussetzungen sind die Studieninhalte des ersten bis dritten Fachsemesters. Das Praktikum Social Gaming (IN0041) sollte gleichzeitig besucht werden.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1452141&pOrgNr=1",
        "name": "Software Engineering for Business Applications - Master's Course: Web Application Engineering",
        "kennung": "IN2087",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an dem Modul verfügen Studierende über die notwendige Kompetenz, Web Anwendung eigenständig zu konzipieren, zu planen und umzusetzen. Studierende sind nach der Teilnahme an dem Modul in der Lage, Geschäftsmodelle im Web zu identifizieren und die zugrundeliegenden Konzepte zu erklären, Muster für die Gestaltung von Web Anwendungen auszuwählen und anzuwenden.\nDarüber hinaus sind Studierende in der Lage, nutzerzentrierte iterative Vorgehensmodelle zu erklären, zu bewerten und im Team anzuwenden. Aktuelle webbasierte Technologien und Integrationstechniken können Studierende erklären, für die Implementierung eigener Webanwendungen auswählen und erfolgreich einsetzen. Das umfasst sowohl endgerätespezifische als auch serverseitige Aspekte.\nStudierende sind nach erfolgreicher Teilnahme in der Lage, moderne Web Applikationen mit Hilfe von aktuellen Entwicklungsframeworks zu implementieren. Sie besitzen grundlegende Kenntnisse, diese Frameworks mit anderen zu vergleichen und die Vor- bzw. Nachteile zu beschreiben.\nZuletzt besitzen Studierende die Fähigkeit das Ergebnis aus Web-Entwicklungsprojekten vor einem Fachpublikum zu präsentieren.",
        "inhalt": "1. Web Site Genres\n-- Business Models in the Web\n-- Web 2.0 and Social Software\n-- Anything as a Service (XaaS)\n2. Web Site Design\n-- Key Issues of Customer-Centered Web Design\n-- An Overview of Web Design Patterns\n-- Knowing Your Customers\n-- Involving Customers with Iterative Design\n-- Processes for Developing Customer-Centered Sites\n-- Additional Viewpoints and Aspects\n3. Patterns for Web Site Design\n-- Explaining your Value Proposition\n-- Creating a Navigation Framework\n-- Basic and Advanced E-Commerce\n-- Designing Effective Page Layouts\n-- Making Site Search Fast and Effective\n-- Making Navigation Easy\n-- Speeding Up Web Sites\n-- Supporting a Wide Range of Devices (Responsive design)\n-- Integrating Multiple Touchpoints (Mobile apps, progressive web apps, and hybrid apps)\n-- Integrating Independently Developed Web Services, Content, and Processes\n4. Fundamental Concepts of Single-Page Web Applications\n-- HTML Concepts and Evolution\n-- CSS Concepts and their Link to HTML\n-- JavaScript Basics\n-- SVG and Canvas\n-- Web Components\n-- Single-Page Applications\n-- Component-based Frameworks\n5. Developing Single-Page Applications with a Specific Web Application Framework\n-- Web Application Framework Comparison\n-- Basic Concepts of the chosen Framework\n-- State Management\n-- Navigation & Routing\n-- Client-Server Communication\n-- Consuming RESTful Service\n6. Building REST-enabled Back-End Service\n-- Target Architecture and Development Environment\n-- Event-Driven Architecture and Asynchronous I/O Operations\n-- Creating REST Interfaces\n-- Using Document-Oriented Database Storage\n-- Enabling User Authentication on the Web Service\n7. Advanced Topics in Web Application Engineering\n-- Real-Time Web Applications\n-- Virtual DOM\n-- Hybrid Web Applications\n-- Other Web Frameworks\n-- Traditional Web Stacks, Server-Side Rendering\n8. High Performance Web Applications\n-- Database Options for Web Applications\n-- Scaling Web Applications",
        "voraussetzungen": "Kenntnisse und Fertigkeiten auf Bachelor-Niveau (Informatik/Wirtschaftsinformatik) in Software Engineering, Programmierung und Datenbanken.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460528&pOrgNr=1",
        "name": "Software Engineering für betriebliche Anwendungen - Bachelorkurs",
        "kennung": "IN2085",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an dem Modul sind die Studierenden in der Lage, die bei der Analyse, dem Entwurf und der Realisierung betrieblicher Anwendungen auftretenden \"domänenspezifischen\" Problemstellungen (Persistenz, Verteilung, Customizing, Mehrsprachigkeit, Betrieb, Wartung, Konfigurationsmanagement) zu verstehen und zu bewerten. Weiterhin können die Studenten diese Probleme durch in der Praxis bewährte Methoden und Technologien unter der Verwendung von Individual- und Standardsoftware adressieren sowie Vor- und Nachteile der verfügbaren Methoden fundiert darstellen. Außerdem sind die Studierenden nach der Teilnahme an dem Modul in der Lage, eigenständig die erlernten Konzepte beim Programmieren von betrieblichen Anwendungen praktisch anzuwenden.",
        "inhalt": "Inhalte umfassen:\n- Charakterisierung betrieblicher Informationssysteme\n- Requirements-Engineering für betriebliche Anwendungen\n- Persistenz: Konzepte, Werkzeuge, Technologien und Frameworks\n- Verteilung in Informationssystemen: Konzepte, Middleware und Architekturen\n- Mehrsprachigkeit und Internationalisierung\n- Standardsoftware vs. Individualsoftware\n- Customizing und Konfigurationsmanagement\n- Weiterführende Programmierparadigmen und -techniken",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=476726&pOrgNr=1",
        "name": "Softwarearchitekturen",
        "kennung": "IN2088",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen verstehen die Studierenden die Bedeutung der Architektur eines Softwaresystems für den erfolgreichen Verlauf eines Entwicklungsprojekts. Sie kennen Techniken die zur Beschreibung, Konstruktion, Wiederverwendung und Evolution von Softwarearchitekturen angewendet werden. Sie verstehen Architekturen die zur Entwicklung von verteilten Systemen eingesetzt werden, sowie aktuelle Trends der Modellierung von Softwarearchitektur als Teil modellgetriebener Softwareentwicklung und die Bedeutung der Softwarearchitektur für Softwarewiederverwendung.",
        "inhalt": "- Beschreibung von Softwarearchitekturen\n- Konstruktion von Softwarearchitekturen\n- Wiederverwendung von Softwarearchitekturen\n- Evolution von Softwarearchitekturen und Refaktorisierung\n- Architekturen von verteilten Systemen\n- Modellgetriebene Softwareentwicklung\n- Aktuelle Trends",
        "voraussetzungen": "",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=608628&pOrgNr=1",
        "name": "Software-Engineering in der industriellen Praxis",
        "kennung": "IN2235",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul verfügen die Studierenden über einen fundierten, ganzheitlichen Überblick der verschiedenen Tätigkeitsprofile und Berufsbilder von Informatikern und Wirtschaftsinformatikern in der Software-Entwicklung für Unternehmen. Zudem verstehen Studierenden nach der Teilnahme an dem Modul aktuelle softwaretechnische Herausforderungen und Entwicklungen der Praxis.",
        "inhalt": "Die Vorlesung ist aus der industriellen Softwarepraxis motiviert. Anhand von Praxisbeispielen wird die typische Struktur von großen betrieblichen Informationssystemen gezeigt. Weiterhin werden wichtige Aspekte ihrer Gestaltung und Erstellung vorgestellt. Oft spielt ein solches System die Rolle des Nervenzentrums eines Unternehmens, es enthält wesentliches Geschäftswissen und ist Schlüssel für den wirtschaftlichen Erfolg des Unternehmens. Ein betriebliches Informationssystem mit dieser Bedeutung sollte entsprechend als Investitionsgut betrachtet werden. Sowohl für die Erstellung, als auch für den Betrieb und die Weiterentwicklung während der Lebensdauer sind nüchterne Kosten-Nutzen-Rechnungen (u. a. ROI) erforderlich. Eine durchdachte Software-Architektur verbessert in der Regel die Ergebnisse dieser Rechnungen.\nDie Vorlesung wird durch eingeladene Vorträge von Führungskräften aus Beratungsunternehmen und von großen Anwendern ergänzt.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3474598&pOrgNr=1",
        "name": "Statistical Foundations of Learning",
        "kennung": "CIT4230004",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, the students are able to:\nILO-1. mathematically analyze algorithms for data classification and clustering\nILO-2. remember techniques from statistics (limit theorems, concentration inequalities), which can be used in data analysis\nILO-3. apply statistical tools to improve performance of algorithms\nILO-4. judge the limitations of machine learning problem formulations, and statistical theories",
        "inhalt": "This course introduces the students to a statistical perspective of machine learning, and provides mathematical tools to analyze the performance of machine learning algorithms.\nThe first part of the course introduces concepts on statistical learning theory and other foundational results for machine learning. In particular, the following topics is covered:\n- Risk minimization, Bayes risk, Empirical risk (8 AE, 1 AE = 45 mins)\n- Statistical consistency and universal consistency (4 AE)\n- Vapnik-Chervonenkis (VC) theory of generalization (8 AE)\n- PAC learning and No free lunch theorem (6 AE)\n- Algorithmic stability (4 AE)\n- Universal approximation theorem (2 AE)\n- Boosting (4 AE)\n- Above techniques will be used to study generalization of Nearest Neighbor rule, Support Vector Machine and Neural Networks (6 AE)\n\nThe second part of the course introduces some advanced and recent topics on the theory of learning:\n- Approximation bounds for clustering (6 AE)\n- Theory of over-parametrized models (4 AE)\n- Training dynamics of neural networks, including neural tangent kernel (6 AE)\n\nA concluding lecture (2 AE) will present some current challenges and recent works in the statistical foundations of learning.",
        "voraussetzungen": "Machine learning (IN2064 or equivalent); Discrete probability theory (IN0018); Analysis for informatics (MA0902)\nSome background in statistics (MA2402 or equivalent) could be helpful.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1764854&pOrgNr=1",
        "name": "Statistical Foundations of Learning",
        "kennung": "IN2378",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, the students are able to:\n1. mathematically analyze algorithms for classification, regression and clustering\n2. critically think about pitfalls and limitations of learning problems\n3. apply statistical tools to improve performance and efficiency of algorithms\n4. remember techniques from modern statistics (concentration inequalities etc), which can be used in broader context of data analysis",
        "inhalt": "The success of machine learning has been unprecedented in the past few years. It is natural to wonder why popular machine learning algorithms exhibit good performance on a wide range of problems. This course will take a foundational perspective on learning, and will describe the mathematical principles that are useful for theoretically analyzing the performance of machine learning algorithms. The course is intended for students with mathematical familiarity, who are curious to gain a deeper theoretical understanding of machine learning.\n\nThe course will focus on statistical learning theory that provides the foundation for a systematic study of supervised learning. The following topics will be covered:\n- Bayes error for classification and regression\n- Vapnik-Chervonenkis (VC) theory\n- Probably-Approximately-Correct (PAC) learning and No free lunch theorem\n- Empirical risk minimization and loss functions\n- Analysis of Nearest Neighbor, Support Vector Machine (SVM) and Neural Networks\n- Boosting\n\nThe course will also briefly cover some recent (advanced) topics, such as:\n- Gradient descent and its implicit bias\n- Double descent phenomena of over-parametrised ML models\n- Kernel approximation of wide neural networks",
        "voraussetzungen": "Familiarity with machine learning (IN2064 Machine Learning, IN2332 Statistical Modeling and Machine Learning or equivalent), and knowledge of probability and linear algebra.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": "2022W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3260506&pOrgNr=1",
        "name": "Strategic IT Management",
        "kennung": "CIT4230000",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After participating in the module, students will be able to understand the key challenges, concepts, methods and decision areas of strategic IT management and their interactions. Furthermore, students will understand the relationship between strategic IT management, enterprise architecture management, scaled agile software development and IT governance. Moreover, after participating in the module, students have in-depth knowledge of patterns and frameworks of enterprise architecture management and scaled agile software development in the areas of models, methods, metrics and visualizations, among others.",
        "inhalt": "1. IT Strategy and IT Management Frameworks\n2. IT Governance and IT Organisation\n3. Enterprise Architecture Management\n3.1 Schools of EAM\n3.2 Foundations of EAM\n3.3 Capability Based Planning\n3.4 Agile EAM and EAM Patterns\n4. Large-scale Agile Software Development\n4.1 Foundations and Frameworks of LSAD\n4.2 Selected Topics of LSAD\n5. Case Studies",
        "voraussetzungen": "Bachelor in Informatics or Information Systems, specifically:\n- Fundamentals of Business Information Systems\n- Databases\n- Software Engineering\n- Business Process Management",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=563556&pOrgNr=1",
        "name": "Systems Engineering",
        "kennung": "IN8015",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden in der Lage:\n- die unterschiedlichen Aktivitäten der Systementwicklung zu benennen, voneinander abzugrenzen und zueinander sowohl inhaltlich als auch in ihrer zeitlichen Verzahnung in Bezug zu setzen,\n- Spezifika unterschiedlicher technischer Domänen und die Konsequenz ihrer Unterschiede für die Entwicklung zu benennen,\n- grundlegende Abstraktionen, wie etwa Schnittstellen, und Modellierungsansätze für cyberphysikalische Systeme zu verstehen und im Systementwurf anzuwenden sowie\n- komplexe cyberphysikalische Systeme auf einem hohen Abstraktionsgrad mit üblichen Formalismen zu modellieren.",
        "inhalt": "Einführung in das Systems Engineering, Systemmodellierung, Entwicklungsmethoden, Phasenmodelle, Projektmanagement, Anforderungsermittlung/-analyse, Schnittstellen, Spezifikation, Systementwurf, Architektur und Schnittstellenspezifikation, Modul-, Integrations- und Systemtest, Versions- und Konfigurationsmanagement, Software- und Systemwartung",
        "voraussetzungen": "IN8011 Einführung in die Informatik 1 für Ingenieure (MSE), IN8012 Einführung in die Informatik 2 für Ingenieure (MSE), Computergestützte Modellierung von Produkten und Prozessen, Software Engineering",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=710375&pOrgNr=1",
        "name": "Tanz und Schauspiel im Virtuellen Studio",
        "kennung": "IN2264",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls sind Studierende in der Lage, eine Auswahl aktuell am Markt verfügbarer neuartiger Interaktionsgeräte zum Motion Capturing eigenständig in Spieleanwendungen einzubeziehen. Desgleichen können sie einfache virtuelle Charaktere erstellen und steuern. Sie kennen Softwaresysteme zur Interpretation von Bewegungsdaten, sowie Komponenten einer Pipeline zum Anlernen ausgewählter Gesten kennen. Durch den praktischen Umgang mit diesen Systemen haben sie Erfahrungen, wie der Schwierigkeitsgrad ausgesuchter Ideen für interaktiven Tanz und Schauspiel von der aktuellen Qualität und den Grenzen verfügbarer Interaktionsgeräte und Gesteninterpretationssoftware abhängt. Die Lernergebnisse entsprechen denen in dem parallelen Modul IN2265 (Active SportGames) – aber die Spielszenarien sind unterschiedlich.",
        "inhalt": "Grundlegende Kenntnisse und Umsetzungserfahrung in den Bereichen:\n+ Ansteuerung und Einbindung neuer Interaktionsgeräte\n+ Interpretation von Trackingdaten als Körperbewegungen\n+ Charakter Animation",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1,\nIN0002 Praktikum: Grundlagen der Programmierung,\nIN0038 Echtzeit-Computergrafik,\nIN0033 Interaktionsmethoden und -geräte\nAusschluss: IN2265 Active SportGames darf NICHT absolviert sein.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": "2023S"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1446514&pOrgNr=1",
        "name": "Technik und Recht",
        "kennung": "IN9049",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul sind die Studierenden in der Lage:\n• die wichtigsten Entwicklungsphasen auf dem Weg zum Technikrecht und das Verhältnis von Technik und Recht zu skizzieren.\n• die wichtigsten Grundlagen der zivil- und strafrechtlichen Haftung und deren Anwendung auf autonome Systeme zu verstehen.\n• Sorgfaltsmaßstäbe zu identifizieren und somit Fragen der Fahrlässigkeit einer adäquaten Lösung zuzuführen.\n• anhand von unbekannten technischen Sachverhalten sich ergebende Probleme für die zivil- und strafrechtliche Haftung zu skizzieren.\n• die wichtigsten Strukturen und Prinzipien des Datenschutzrechts darzustellen und die europäischen Einflüsse auf das Rechtsgebiet nachzuvollziehen.\n• die Zulässigkeit von Fahrerassistenzsystemen und die Herausforderungen, die sich bei autonomen Fahrzeugen z.B. für die zivilrechtliche Haftung stellen, darzustellen und zu beschreiben.\n• die Verantwortlichkeit von Providern nach dem Telemediengesetz differenzieren zu können und problematische Einzelfälle diskutieren.\n• das Erlernte auf unbekannte Fälle anzuwenden und eigenständig Lösungen zu entwickeln, in denen sie die rechtlichen Aspekte mit den technischen verknüpfen. So werden sie die Linie zwischen „rechtlich Erlaubtem“ und „technisch Möglichem“ ziehen können.",
        "inhalt": "Folgende fachlichen Inhalte werden im Modul vermittelt:\n1. Einleitung\na) Das Verhältnis von Technik und Recht\nb) Die Geschichte des Technikrechts\n\n2. Grundlagen zivilrechtlicher Haftung\na) Grundsätzliches\nb) Herausforderungen durch die Autonomik\nc) Relevante Urteile\nd) Fallbeispiele zur vertraglichen Haftung\n\n3. Grundlagen strafrechtlicher Verantwortlichkeit\na) Grundsätzliches\nb) Relevante Straftatbestände\nc) Herausforderungen durch die Autonomik\nd) Relevante Urteile\ne) Fallbeispiele zur strafrechtlichen Verantwortlichkeit\n\n4. Datenschutz und Datensicherheit\na) Rechtshistorische und –politische Hintergründe des Datenschutzrechts\nb) Anwendungsbereich des BDSG\nc) Erlaubnistatbestände\nd) Rechte und Pflichten\ne) Datensicherheit\nf) Relevante Urteile\ng) Herausforderungen durch die Autonomik\nh) Fallbeispiele zum Datenschutz\n\n5. Fahrerassistenzsysteme im Straßenverkehr\na) Verkehrs- und Zulassungsrecht\nb) Änderungen des Wiener Übereinkommens im März 2016\nc) Rechtliche Auswirkungen des Betriebs von automatisierten Fahrzeugen auf die zivilrechtliche Haftung\nd) Relevante Urteile\ne) Fallbeispiel\n\n6. Providerhaftung\na) Grundsätzliches\nb) Das Telemediengesetz (TMG)\nc) Verantwortlichkeit der Anbieter nach dem TMG",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2809143&pOrgNr=1",
        "name": "Tensornetzwerke",
        "kennung": "IN2388",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, students are familiar with the mathematical formalism and graphical notation for tensor networks. They can assess and apply tensor network approaches for approximating high-dimensional data. They understand why tensor network methods are suitable for simulating strongly correlated quantum systems, and are familiar with corresponding algorithms.",
        "inhalt": "- Fundamentals and graphical representation of tensor networks\n- Mathematical approximation theory\n- Backpropagation through tensor network operations\n- Simulating strongly correlated quantum systems and digital quantum computers\n- Probability distribution sampling using tensor networks",
        "voraussetzungen": "• MA0901 Linear Algebra for Informatics\n• MA0902 Analysis for Informatics\n• IN0018 Discrete Probability Theory\n• Knowledge about quantum mechanics or computing helpful (but not a formal prerequisite)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=487473&pOrgNr=1",
        "name": "Tracking and Detection in Computer Vision",
        "kennung": "IN2210",
        "organisation": "Department Computer Science",
        "anmerkung": "seit WS15 7 Credits und 6 SWS",
        "lernergebnisse": "In the end, the students will have a thorough description of the most important tracking and detection techniques. They should be able to understand and implement those solutions and apply them in reasonably complex problems. The concepts described in this course will be accompanied with brief explanations of the necessary mathematical tools. The participants of this course will be given an important basis to follow the vast and growing Computer Vision literature and use the acquired knowledge to solve new practical problems.",
        "inhalt": "Computer Vision, as a relatively young research area, has emerged as a key discipline in computer science.\nThis is not only evident by a growing and highly competitive research community with a high impact factor in computer science, but also by the emergence of numerous vision companies turning research ideas into a myriad of commercial applications. Besides well-known studies of 3D geometry and camera models, object tracking and detection in images and videos becomes one of the principal research directions of modern Computer Vision. The main objective of this course is to provide students with a gradual introduction to modern tracking, detection and recognition techniques developed in the last years. The course will provide in-depth knowledge of image features, their detection and description, matching techniques, key-point recognition, basic and advanced tracking algorithms based on image features and image intensities, basics of probabilistic and machine learning methods for tracking and object detection. Note that every year the course content is refreshed with new the most promising and potentially the most influential works in the field.\nThe following topics will be handled\n\n- Introduction (overview of the course)\n- Convolution and filtering:\n-- Basic of image formation\n-- Convolution and correlation\n-- Non-linear filtering\n-- Gaussian Filtering\n-- Image Derivatives\n-- Edge Detection\n- Local invariant feature detectors:\n-- Harris corner\n-- Harris Laplace/Affine\n-- Hessian, Hessian-Laplace/Affine\n-- FAST\n- Feature descriptors:\n-- Difference of Gaussians and SIFT\n-- Integral images and SURF\n-- Histogram of Oriented Gradients (HOG)\n- Keypoint recognition:\n-- Randomized trees\n-- FERNS\n-- Keypoint signatures\n- Face detection\n-- Haar features\n-- Ada-boost\n-- Viola-Jones Face Detection\n- Camera models and projections\n-- Model based tracking\n-- Pose estimation from 2D-3D coresspondencies (DLT, P-n-P)\n-- Rotation parametrization\n- Non-linear optimisation\n-- Robust estimators\n-- RANSAC\n- Template tracking methods:\n-- Lucas-Kanade,\n-- Compositional Alg.\n-- Inverse Compositional\n-- ESM\n-- Linear Predictor\n- Mean-shift tracking\n-- mean-shift for pdf estimation\n-- mean-shift for segmentation\n-- mean-shift for object tracking\n-- multi-scale\n- Template matching approaches\n-- basic correlation methods (SAD, NCC etc.)\n-- DOT(Dominant Orientation Template)\n-- LineMod (LINEarizing the memory multiMODal template matching)\n- Kalman and particle filtering\n-- basics Kalman filer\n-- basics Particle filer\n-- applications to visual tracking\n-- applications to camera tracking\n- Tracking with Dictionary Learning",
        "voraussetzungen": "Most of the knowledge required should be part of the normal background in Computer Science, undergraduate/graduate Mathematics and Geometry.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=757477&pOrgNr=1",
        "name": "Transaction Systems",
        "kennung": "IN2267",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden\n- verstehen die Interaktion von Transaktionsverwaltung und Recovery\n- können Transaktionen sicher und trotzdem effizient entwickeln, so dass ACID-Transaktionen mit hoher Nebenläufigkeit erreicht werden",
        "inhalt": "- Konzepte von Korrektheit\n- Algorithmen für die Mehrbenutzersynchronisation (Concurrency Control)\n- Multiversion Concurrency Control\n- Concurrency Control für Objekte\n- Concurrency Control für relationale Datenbanken\n- Concurrency Control für Indexstrukturen\n- Implementierung der Mehrbenutzersynchronisation\n- Transaktionsfehlerbehandlung (Recovery)\n- Crashrecovery\n- Mediarecovery\n- Anwendungsrecovery\n- Verteilte Mehrbenutzersynchronisation\n- Verteilte Transaktionsrecovery",
        "voraussetzungen": "- IN0015 Diskrete Strukturen\n- IN0008 Grundlagen: Datenbanken",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473924&pOrgNr=1",
        "name": "Trendseminar CDTM",
        "kennung": "IN9026",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer beherrschen die Grundlagen der Trendforschung ebenso wie die Grundlagen wissenschaftlichen Arbeitens, können in interdisziplinären Teams arbeiten, Seminararbeiten auf Englisch erstellen und Arbeitsergebnisse auf Englisch präsentieren.",
        "inhalt": "Technische, ökonomische und soziale Auswirkungen von ausgewählten, aktuellen Trends",
        "voraussetzungen": "Nur für Studierende des Studienprogramms Technology Management des CDTM",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": "2024W"
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1060610&pOrgNr=1",
        "name": "Turbulent Flow Simulation on HPC-Systems",
        "kennung": "IN2311",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After participation in this module, the students are able to understand problems in the field of modelling turbulent flows. They can analyze and implement algorithms to solve the corresponding model equations. Furthermore they can implement these algorithms in parallel code for distributed computing systems and can thus execute parallel simulations.\nThey are able to develop an understanding of the different approaches to computational fluid dynamics by the two fields of research (computer science, fluid dynamics) and they can thus successfully apply the learned techniques of effective work in interdisciplinary teams.",
        "inhalt": "- introduction of the RANS-equations for incompressible flows: concept of RANS and a short introduction to turbulence\n- introduction to programming in C++, numerical discretization of conservation equations, techniques for solving incompressible flow problems, algorithms for solving differential equations, visualization of simulation data\n- introduction to parallelization, application of existing toolkits\n- introduction to applied turbulence modelling, method for validating simulation results, creation of experimental and numerical results and their processing",
        "voraussetzungen": "IN0019 Numerical Programming and/or IN2147 Parallel Programming",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977322&pOrgNr=1",
        "name": "Virtuelle Trainingswelten",
        "kennung": "IN2302",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul können die Studierenden ermessen wie und wodurch Gametechnologien das Lernen und Trainieren von morgen verändern werden. Sie sind im Anschluss in der Lage das Erlernte auf vergleichbare Projekte in der Industrie zu übertragen und anzuwenden. Auf Basis der Grundlagen können die Voraussetzungen für eigene, neue Trainingswelten geschaffen werden. Darüber hinaus sind die Studierenden in der Lage die Diversität der unterschiedlichen Disziplinen in einem Gameprojekt zu erkennen und angemessen zu bewerten.",
        "inhalt": "In diesem Modul wird der Frage nach dem Nutzen von Virtuellen Trainingsmodellen nachgegangen. Es werden dabei verschiedene Aspekte und Grundsätze des, vor allem spielerischen, Lernens erläutert und erlernt:\n- Training und Lernen soll auch Spaß machen\n- Virtualität und Management, zwei ergänzende Welten\n- Was ist ein Spiel aus Sicht des Managements?\n- Die Lust am Lernen und Arbeiten\n- Studieren und arbeiten in der virtuellen Welt\n- Mobiles Arbeiten und Lernen ist omnipräsent und wird zum Motor moderner Wissensgesellschaften\n- Die Dynamik der Zeit\n- Künstliche Charaktere (Avatare) In der virtuellen Arbeitswelt von morgen\n- Der Uncanny-Valley Effekt\n- Der Weg vom realen Vorbild zum künstlichen Charakter\n- Game Technologie als Antrieb virtueller Arbeitswelten\n- Motivation durch Gamification\n- Die Verbindung von Game-Film-Lernen",
        "voraussetzungen": "IN0031 Einführung in die Informatik für Games Engineering\nIN0038 Echtzeit-Computergrafik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1528428&pOrgNr=1",
        "name": "Visual Data Analytics",
        "kennung": "IN2026",
        "organisation": "Department Computer Science",
        "anmerkung": "auf 5 Credits erhöht ab WiSe 13/14",
        "lernergebnisse": "After successful completion of the module, the students have gained advanced knowledge concerning the visualization pipeline, ranging from data acquisition to the final image of the data. This includes knowledge about the application specific data representations, data interpolation and approximation techniques for discrete data sets, data filtering techniques like convolution, as well as the final mapping stage to generate a renderable representation from the data. The students know the common methods which are used in information visualization to graphically depict abstract data, and in scientific visualization to graphically depict 2D and 3D scalar and vector fields, including isocontouring, direct volume rendering, flow visualization, and terrain rendering. They can analyze and categorize available techniques in terms of quality, efficiency, and suitability for a particular data type, and they can model and develop new approaches considering application-specific requirements. In the practical exercises the student learn about the functionality of commonly used visualization tools, they can evaluate available tools based on their functionality, and they can apply these tools to create own visualizations of given data sets.",
        "inhalt": "Visualization pipeline (data acquisition, filtering, display), information visualization vs. scientific visualization, grids and grid construction (Delaunay triangulation), interpolation in grids (inverse distance weighting, radial basis functions), discretization aspects, visualization of scalar fields (color coding, iso-contours and iso-surfaces, volume rendering, vector field visualization (particle-based visualization, line integral convolution, topological approaches), terrain rendering including adaptive meshing techniques and hierarchical data representations using quadtree and octrees.",
        "voraussetzungen": "None.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1820439&pOrgNr=1",
        "name": "Visuelle Programmierung in der Spielebranche",
        "kennung": "IN2382",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach Teilnahme an diesem Modul ist der Studierende in der Lage, komplexe Zusammenhänge mithilfe von visueller Programmierung zu verstehen und zu erklären. Außerdem können visuelle Programme bewertet werden und in Verbindung mit klassischer Programmierung können eigenständig Lösungsansätze für unterschiedliche Probleme entworfen werden.",
        "inhalt": "Visuelle Programmierung gewinnt mehr und mehr an Bedeutung als Werkzeug im interdisziplinären Kontext der Spieleentwicklung.\nAnhand von aktuellen Beispielen wird den Studenten die Entwicklung von Computerprogrammen mit visueller Programmierung, deren Rolle in industrieüblichen Games-Projekten und andere strukturelle und Software-architektonische Standards erläutert. Als Entwicklungsumgebung kommen die Unreal Engine, sowie Visual Studio zum Einsatz. Spezieller Fokus liegt hier auf:\n- Funktionsweisen und Konzepte von Graph-basierten Programmen\n- Event-basierte visuelle Programmierung\n- Shader\n- State-Machines\n- Behavior-Trees\n- Schnittstellen zwischen textbasierter und visueller Programmierung\n- Bewährte Methoden für Workflow-orientierte Projektsetups\n- Einblicke in gängige Game Engines (z.B. Unreal Engine 4)",
        "voraussetzungen": "IN0031 Einführung in die Informatik für Games Engineering\nIN0038 Echtzeit-Computergrafik\nIN0039 Praktikum: Echtzeit-Computergrafik\nGrundkenntnisse in C++",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977325&pOrgNr=1",
        "name": "Von der Idee zum Produkt",
        "kennung": "IN2303",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an diesem Modul haben die Studierenden praxisrelevante Kenntnisse zum methodischen Vorgehen bei der Entwicklung von Spieleideen. Die Teilnehmer beherrschen die methodischen Prozesse der Produktentwicklung und können diese auf das Gamedesign übertragen.\nDie Teilnehmer sind dadurch in der Lage die Wahrscheinlichkeit eines Erfolgs des Spieles signifikant zu erhöhen, indem sie diese prozessorientierte Arbeitsweise im kreativsten Teil der Entwicklung eines Computerspiels, dem Game Design, zur Anwendung bringen.",
        "inhalt": "Ein erfolgreiches Computerspiel lebt nicht von der Spieleidee alleine. Es ist ein Zusammenspiel eines Prozesses der Entwicklung, der in der ersten Näherung für die Gestaltung/Design eines jeden Produktes gilt. Die sechs, grundlegenden Schritte \"verstehen\", \"beobachten\", \"Sichtweise definieren\", \"Ideen finden\", \"Prototypen entwickeln\" und \"testen\" werden einzeln erörtert, mit Beispielen hinterlegt und anschließend am eigenen Projekt angewandt.",
        "voraussetzungen": "IN0031 Einführung in die Informatik für Games Engineering\nIN0038 Echtzeit-Computergrafik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3049513&pOrgNr=1",
        "name": "Weiterführende Bioinformatik",
        "kennung": "IN2399",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "Wenn die Studierenden das Modul bestanden haben, erinnern und verstehen sie die Theorie der ausgewählten fortgeschrittenen Themen. Sie sind in der Lage bei einem Problem, das den präsentierten ähnelt, die angemessenen Methoden auszuwählen und anzuwenden. Sie können die entsprechenden Werkzeuge richtig bedienen und ihre eigenen Lösungen basierend auf existierenden Frameworks implementieren.",
        "inhalt": "Die folgenden Themen werden behandelt:\n- Wissenschaftliche Prinzipien und Struktur wissenschaftlicher Vorträge und Schriftstücke\n- Grundlagen des maschinellen Lernens auf biologischen Sequenzen\n- Grundlagen des Deep Learnings\n- Fortgeschrittene Codierung und Deskriptoren von Proteinen (z. B. PSSM, Sprachmodelle, Evolutionary Couplings, etc.)\n- Deep learning auf Proteinen\n- Ausgewählte Themen in der Massen- und Einzelzellsequenzierung, die die Datenverarbeitung und Analyse abdecken mit Anwendungen die von der Genomik und Epigenomik bis zur Transkriptomik reichen\n- Einführung in die Proteomik\n- Ausgewählte Themen der Proteomik\n- Regulatorische Netzwerke\n- Fortgeschrittene Proteinstruktur",
        "voraussetzungen": "IN5167 Fortgeschrittene Biochemie, IN5001 Algorithmische Bioinformatik 2",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1004061&pOrgNr=1",
        "name": "Wissenschaftliche Visualisierung",
        "kennung": "IN8019",
        "organisation": "Department Computer Science",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the module, the students have gained advanced knwowledge concerning the visualization pipeline, ranging from data acquisition to the final image of this data. This includes knowledge about the application specific data representations, data interpolation and approximation techniques for discrete data sets, data filtering techniques like convolution, as well as the final mapping stage to generate a renderable representation from the data. The students know the methods which are used in scientific visualiztion to graphically depict 2D and 3D scalar and vector fields, including isocontouring, direct volume rendering and flow visualization. They can analyse and categorize availaible techniques in terms of quality, efficiency, and suitability for a particular data type, and they can model and develop new approaches considering application-specific requirements.",
        "inhalt": "Visualization pipeline (data acquisition, filtering, display), information visualization vs. scientific visualization, grids and grid construction (Delaunay triangulation), interpolation in grids (inverse distance weighting, radial basis functions), discretization aspects, visualization for scalar fields (color coding, iso-contours and iso-surfaces, volume rendering, vector field visualization (particle-based visualization).",
        "voraussetzungen": "None",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1279274&pOrgNr=1",
        "name": "Adaptive and Array Signal Processing",
        "kennung": "EI7433",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to analyze and to design signal processing algorithms both in the temporal and spatial domain to support wireless and wired communication. Students are able to create those algorithms in Matlab code.",
        "inhalt": "- Motivation:\nApplication areas of adaptive filters; Adaptive Equalization; Single channel (single-sensor) temporal processing; Multichannel (multi-sensor) spatial/spatio-temporal processing.\n\n- Mathematical Background:\nGradients; Complex analysis; Quadratic Optimization with Linear Constraints; Method of Lagrangian multipliers for complex-valued problems; Stochastic processes, correlation and covariance matrices; Matrix decomposition (eigenvalue and singular value decomposition); Solving linear system of equations and least-squares problems.\n\n- Linear Optimum Filtering:\nWiener filtering; Spatial Filtering: Minimum Variance Distortionless Response (MVDR) Beamforming and Generalized Sidelobe Canceller (GSC); Iterative solution of normal equations: Gradient descent and Least Mean Square (LMS) algorithm;\n\n- High Resolution Direction of Arrival (DoA) Algorithms:\nSubspace Estimation; Multiple Signal Classification (MUSIC); Estimation of Signal Parameters via Rotational Invariance Techniques (ESPRIT); Unitary ESPRIT",
        "voraussetzungen": "Pre-requisite are basic knowledge of linear algebra, linear discrete time systems and linear transforms on an undergraduate level.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4388204&pOrgNr=1",
        "name": "Adaptive and Learning-based Control",
        "kennung": "CIT433038",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, adaptive und lernende Regelungen zu konzipieren und auszulegen. Die Studierenden erhalten ein vertieftes Verständnis ueber die Grundprinzipien und der wesentlichen Auslegungsmethoden der adaptiven Regelung.",
        "inhalt": "Einführung in adaptive und lernende Regelungsprinzipien. - Online-Parameterschätzung und adaptive Beobachter. - Lineare Systemidentifikation mit Machine-Learning Methoden;\nLineare und nichtlineare adaptive Regelung mit Modellreferenz;\nConcurrent und iterativ lernende Regler. - Gain-Scheduling. Robuste adaptive Regelungen - Anwendungen.",
        "voraussetzungen": "Grundlagen der (nichtlinearen) Regelungstechnik",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456672&pOrgNr=1",
        "name": "Advanced Computer Architecture",
        "kennung": "IN2076",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ab WS 11/12 6 statt 4 Credits",
        "lernergebnisse": "At the end of the module students know and understand the architecture of current processors as well as of entire IT systems. They can evaluate and assess different designs. The students understand the interaction of architecture and compiler technology. They understand the different classes of parallel architectures and can evaluate their advantages and disadvantages for certain applications.",
        "inhalt": "After an introduction to the goals and the learning outcomes of the module, cross cutting aspects for all advanced architectures are presented. This section covers performance, availability, reliability, fault tolerance, parallelism, memory hierarchy and virtualization. After a recap of the computer architecture basics, the module covers the major types of parallelism and the respective architectures. For instruction level parallelism advanced concepts of the instruction pipeline are discussed as well as superscalar and VLIW processors. This part also covers advanced techniques for the memory hierarchy and compiler support for instruction level parallelism. The next architecture class, data parallel systems, covers vector units in standard processors, array computers, GPGPUs and vector supercomputers. The section presents also the programming interfaces and discusses their interaction with the architectures. Shared memory systems supporting thread level parallelism are discussed next. First the general concepts coherence, memory consistency and synchronization are covered. Then their implementation in uniform and non-uniform memory architectures is presented, ranging from standard multicore systems to large-scale shared memory systems. The last presented architecture class covers distributed memory systems supporting process-level parallelism. This section presents high performance communication networks and design alternatives for network interfaces, manycore processors and massively parallel systems. Parallel file systems are discussed as they are important for all these systems. The module closes with optional presentations about energy efficiency, parallel applications, parallel programming, performance evaluation and non-conventional architectures.",
        "voraussetzungen": "IN0004 Einführung in die Rechnerarchitektur",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460544&pOrgNr=1",
        "name": "Advanced Computer Networking",
        "kennung": "IN2097",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer verstehen den Aufbau des Internet, die Funktionsweise der einzelnen Protokolle, und kennen weiterführende Prinzipien von Rechnernetzen.\nSie verstehen die Architektur von Netzkomponenten, in denen die einzelnen Protokolle implementiert sind, und sind selbst in der Lage, Protokolle zu implementieren, sowie Netze zu dimensionieren. Sie beherrschen Netzwerkgrundlagen und sind damit in der Lage, künftige Entwicklungen nachzuvollziehen und zu bewerten.",
        "inhalt": "Internet-Protokolle. Protokollmechanismen und Entwurfsprinzipien, die man üblicherweise in Netzwerkprotokollen (insbesondere im Internet) finden kann. Inklusive einer Diskussion, für welche Zwecke sie benutzt werden. Implementierungsprinzipien. Netzwerkarchitektur: Prinzipien, die das Design von Netzwerkarchitekturen leiten. Netzwerkalgorithmen. Simulation von Netzwerken.",
        "voraussetzungen": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, Vorkenntnisse in Rechnernetzen und Programmierkenntnisse in C oder Java werden erwartet.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=918722&pOrgNr=1",
        "name": "Advanced Control and Robotics Lab",
        "kennung": "EI7303",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage für unterschiedliche, praxisnahe steuerungs- und regelungstechnische Problemstellungen systematisch einen über Standard-Ansätze hinausgehenden, modernen Regler zu wählen, diesen auf einem realen Versuchsaufbau anzuwenden und das Ergebnis kritisch zu bewerten.",
        "inhalt": "Das Praktikum umfasst Versuche zu folgenden Themenschwerpunkten: Phase-locked loop, Feedback-Linearisierung, Schaltende Regler, Robuste Regelung, Analyse hybrider Regelsysteme, Sliding Mode Regler, Impedanzregelung für Telepräsenzsysteme, Beobachterentwurf und LQ Regelung",
        "voraussetzungen": "Grundlagen der linearen und nichtlinearen Regelungstechnik\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\n(Dynamische Systeme)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3893427&pOrgNr=1",
        "name": "Advanced Deep Learning for Robotics",
        "kennung": "CIT433027",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks and state of the art deep reinforcement learning methods in the context of robotic tasks. In addition to the theoretical foundations, a significant aspect lies on the practical realization of deep reinforcement learning (DRL) methods in robotic scenarios.",
        "inhalt": "This is the advanced deep learning lecture with a specific focus on Robotics and Deep Reinforcement Learning (including guest lectures from DeepMind and Intrinsic). Taking the “Introduction to Deep Learning” course is expected.\n\n1. Introduction & Recap of Deep Learning\n2. Advanced Network Architectures & Recursive Neural Networks (LSTMs)\n3. Hyperparameter & Architecture Search\nBayesian optimization, network architecture search (NAS)\n4. Adversarial Samples & Adversarial Training\n5. Bayesian Deep Learning\nBayesian learning, variational inference, Monte Carlo dropout method\n6. Generative Models: VAEs & GANs\nvariational auto-encoders, generative neural networks (WGAN-GP)\n7. Data Efficient Learning: Transfer & Semi-Supervised Learning\n8. Deep Reinforcement Learning I\nMDPs, Q-iteration, Bellman equation, deep Q-learning, example: Atari-games\n9. Deep Reinforcement Learning II\npolicy gradients, REINFORCE, actor-critic algorithm, TRPO, PPO, robotic applications\n10. Deep Reinforcement Learning III\nadvanced methods: DDPG, soft Q-learning, soft actor-critic (SAC), robotic applications\n11. &\n12. Guest Lectures from DeepMind\nRecent Developments in Deep Reinforcement Learning for Robotics\n13. Guest Lecture from Intrinsic (formerly Google X Robotics)\nLearning methods and challenges in real-world robotic applications",
        "voraussetzungen": "MA0902 Analysis for Informatics\nMA0901 Linear Algebra for Informatics\n\nIN2346 Introduction to Deep Learning (expert knowledge required!)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4167869&pOrgNr=1",
        "name": "Advanced Multi-Fingered Robotic Hands: Dextrous Manipulation and Learning AI",
        "kennung": "CIT433034",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this module, students will have acquired an extensive understanding of the modern autonomous (simulation-based) learning ai methods for dextrous manipulation with multi-fingered hands as well as the mathematically sound modeling and fast simulation of the physics esp. of the complex multi-contacts and highly resolved spatio-temporal tactile sensors. Moreover, the students will learn about the methods for robust transfer of the learned manipulation strategies onto the real robot system.",
        "inhalt": "The combination of advanced multi-fingered robotic hands equipped with highly resolved tactile sensors and modern methods for autonomous learning ai enable a new level in intelligent dextrous manipulation close to human performance. The course teaches both tightly interdependent aspects: the mathematical modeling and fast GPU-base simulation of hand mechatronics and sensors as well as the application of deep (reinforcement) methods for grasp planning of arbitrary, in-hand and tactile fine manipulation.\n\nTwo guest lectures from industry show the huge potential of dextrous manipulation with robotic hands in real industrial manufacturing and the rapid developments in highly parallel computing ressources.\n\n⁃ Recap of Mathematical Hand Modeling: kinematics, grasp matrix, impedance control, …\n⁃ Fast Physics Simulation of Manipulation with Hands contact modeling, drivetrain dynamics, simulation engines (Isaac, Mujoco, Simscape, …), …\n⁃ Learning-based Grasp Planning for Complex Multi-Contact Power Grasps: precise grasp metrics for multi-contact, learning a foundational grasp generation model, …\n⁃ Learning Dynamic In-Hand Manipulation I: reinforcement learning (state, observation), reward function from first principles, task driven exploration, …\n⁃ Learning Dynamic In-Hand Manipulation II:\n⁃ learning object pose state estimation, modular end to-end rl & estimator architecture, …\n\n⁃ Highly Resolved Spatio-Temporal Tactile Sensors physics of tactile sensors, data efficient learning of slip detection & material classification, …\n⁃ Learning Tactile Fine-Manipulation fast simulation model for tactile skin, RLfor fine manipulation\n⁃ Bayesian Self-Contained Hand Calibration\n⁃ kinematics, proprioceptive sensors, tactile sensors, …\n⁃ Combined Whole-Body Motion and Grasp Planning for Humanoids fast learning-based collision-free planning, efficient representations of 3D obstacle environment, learning multi-head inverse kinematics, …\n⁃ Guest lecture from Agile Robots: Industrial Applications\n⁃ Guest lecture from NVIDIA: Modern GPU- & Cloud Computing Architectures for Fast Robotic Simulation & Learning",
        "voraussetzungen": "Knowledge in\na) foundation of robotics (kinematics, dynamics, control) via modules like\nIN2067 Robotics\nIN2373 Control of Modern Lightweight Robots\nIN2068 Sensor-based Robotic Manipulation and Locomotion\nEI71099 Introduction to Human and Robotic Hand Grasping Control and Manipulation\nEI7408 Multi-Sensory Based Robot Dynamic Manipulation\nED160028 Robot Dynamics for RCI\n\nb) advanced deep & reinforcement learning methods via modules like\nCIT433027 Advanced Deep Learning in Robotics\nCIT4330014 Control for Robotics: from Optimal Control to Reinforcement Learning",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1734236&pOrgNr=1",
        "name": "Advanced Robot Control and Learning",
        "kennung": "IN2376",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful participation in the module, the students are able to:\n- Understand robotics problems from differential geometry point of view and consequently interpret control objectives\n- Identify and determine the Robot Dynamics\n- Solve modern control problems with advanced methods\n- Understand and exploit the concept of redundancy in robotics\n- Design robust controllers\n- Design bio-inspired controllers\n- Understand and use learning methods in robotics",
        "inhalt": "The Control section covers advanced topics in robot control, modeling and identification. Starting with the\nfundamental concepts such as differential geometry, it then covers the essential ideas behind the state-of-the-art of\ncontrol methods in real robotic applications. Moreover, advanced methods are presented for the modeling and\nidentification of physical systems and in particular robots. Finally, in the Adaptive Impedance Control section, the\ntheories behind the human motor control are concisely explained and the associated bio-inspired control algorithms\nare described. The second part of the course covers typical problems in robot learning and approaches to solve them.\nBeyond that, many practical implications and problems regarding real-world applications are covered. The outline for\nthis course is as follows.\n\nI. Differential Geometry in Robotics\n- Manifolds\n- Rigid Body Configuration\n- Tangent and Cotangent Space\n- Tensors\nII. Task Space Control\n- Robot Equations in Task Coordinates\n- SE3 Coordinates and Jacobian Matrix\n- Decoupled Position Control in Task Space\nIII. Redundant Robots\n- Dynamics of Redundant Robots\n- Motion/Torque Null space\n- Null space and Stability\nIV. Passivity-based Robot Control\n- Passivity\n- 1-DoF Robot\n- Passive Representation of a Robot\n- PD-g(q) Control\n- Passivity & Robustness\n- PD-g(q)-Feedforward & PD+ Control\n- Damping Design\n- Slotine & Li Control\n- Joint Control Summary\n- Cartesian Impedance Control\n- Impedance vs. Admittance Control\n- Local Nature of Cartesian Control\nV. Port-based Modeling in Robotics\n- Dirac Structure & Power Ports\n- Port-based Modeling of a Manipulator\n- Passivity Analysis\nVI. Linear Parametric Modeling and Identification of Robot Dynamics\n- Linear Parameterization of the Manipulator’s Dynamic Model\n- The Minimum Parameter Set\n- Parameter Identification\n- Trajectory Optimization\n- Modeling of Friction\n- Identification Procedure\n- Adaptive Control\nVII. Adaptive Impedance Control\n- Bio-inspired formulation\n- Adaptive impedance control for a manipulator\nVIII. Learning for Physical Systems – Overview\n- Latest advances in machine learning for physical systems\n- Recent applications for autonomous systems\n- Literature overview\nIX. Real-world Problem Classes\n- Motion and manipulation skill learning\n- Blind manipulation\n- Vision-based manipulation\n- Sensitive grasping\n- Compound manipulation tasks\nX. Complexity reduction\n- Expert knowledge vs. data-driven approaches\n- Smart data vs. big data\n- Interaction control architectures\n- Interaction skill formalisms\n- System limits and task context\n- Latent spaces and dimensionality reduction\nXI. Cost function design\n- Feasibility and optimality\n- Unknown constraints\n- Confidence in real-world problems\nXII. Practical implications\n- Simulation vs. real world\n- Experiment design\n- Limitations of physical systems",
        "voraussetzungen": "- Fundamentals of control engineering\n- Fundamentals of robotics\n- Fundamentals machine learning\n- Fundamentals of statistics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1707762&pOrgNr=1",
        "name": "Advanced Robot Control and Learning",
        "kennung": "EI71056",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die erfolgreiche Teilnahme am Modul befähigt die Studenten:\n- Problemstellungen der Robotik aus der Perspektive der Differentialgeometrie zu verstehen und Steuerungsziele zu interpretieren\n- Das dynamische System eines Roboters zu identifizieren und bestimmen\n- Aktuelle Problemstellungen der Steuerung mit fortgeschrittenen Methoden zu lösen\n- Das Konzept der Redundanz in der Robotik zu verstehen und zu nutzen\n- Stabile Regler aufzubauen\n- Biologisch inspirierte Steuerungen zu entwickeln\n- Lernmethoden der Robotik zu verstehen und anzuwenden",
        "inhalt": "Der Abschnitt Regelung behandelt fortgeschrittene Konzepte der Roboterregelung, -modellierung und -identifikation. Ausgehend von den grundlegenden Konzepten wie der Differentialgeometrie werden die wesentlichen Ideen für den Stand der Technik im Bereich Regelungsmethoden für reale Roboteranwendungen behandelt. Darüber hinaus werden fortgeschrittene Methoden zur Modellierung und Identifizierung physikalischer Systeme und insbesondere von Robotern vorgestellt. Abschließend werden im Abschnitt adaptive Impedanzregelung die Theorien hinter der menschlichen Motorsteuerung kurz erläutert und die zugehörigen bio-inspirierten Regelalgorithmen beschrieben. Der zweite Teil des Kurses behandelt typische Probleme des Roboterlernens und dessen Lösungsansätze. Darüber hinaus werden viele praktische Aspekte und Probleme in Bezug auf reale Anwendungen behandelt. Der Überblick für diesen Kurs ist wie folgt.\n\nI. Differential Geometry in Robotics\n- Manifolds\n- Rigid Body Configuration\n- Tangent and Cotangent Space\n- Tensors\n\nII. Task Space Control\n- Robot Equations in Task Coordinates\n- SE3 Coordinates and Jacobian Matrix\n- Decoupled Position Control in Task Space\n\nIII. Redundant Robots\n- Dynamics of Redundant Robots\n- Motion/Torque Null space\n- Null space and Stability\n\nIV. Passivity-based Robot Control\n- Passivity\n- 1-DoF Robot\n- Passive Representation of a Robot\n- PD-g(q) Control\n- Passivity & Robustness\n- PD-g(q)-Feedforward & PD+ Control\n- Damping Design\n- Slotine & Li Control\n- Joint Control Summary\n- Cartesian Impedance Control\n- Impedance vs. Admittance Control\n- Local Nature of Cartesian Control\n\nV. Port-based Modeling in Robotics\n- Dirac Structure & Power Ports\n- Port-based Modeling of a Manipulator\n- Passivity Analysis\n\nVI. Linear Parametric Modeling and Identification of Robot Dynamics\n- Linear Parameterization of the Manipulator’s Dynamic Model\n- The Minimum Parameter Set\n- Parameter Identification\n- Trajectory Optimization\n- Modeling of Friction\n- Identification Procedure\n- Adaptive Control\n\nVII. Adaptive Impedance Control\n- Bio-inspired formulation\n- Adaptive impedance control for a manipulator\n\nVIII. Learning for Physical Systems – Overview\n- Latest advances in machine learning for physical systems\n- Recent applications for autonomous systems\n- Literature overview\n\nIX. Real-world Problem Classes\n- Motion and manipulation skill learning\n- Blind manipulation\n- Vision-based manipulation\n- Sensitive grasping\n- Compound manipulation tasks\n\nX. Complexity reduction\n- Expert knowledge vs. data-driven approaches\n- Smart data vs. big data\n- Interaction control architectures\n- Interaction skill formalisms\n- System limits and task context\n- Latent spaces and dimensionality reduction\n\nXI. Cost function design\n- Feasibility and optimality\n- Unknown constraints\n- Confidence in real-world problems\n\nXII. Practical implications\n- Simulation vs. real world\n- Experiment design\n- Limitations of physical systems",
        "voraussetzungen": "- Fundamentals of control engineering\n- Fundamentals of robotics\n- Fundamentals machine learning\n- Fundamentals of statistics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4388109&pOrgNr=1",
        "name": "Advanced Robot Learning and Decision-Making",
        "kennung": "CIT433037",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the course, students are able to\nDerive optimal controller equations for mobile robots and design learning-based approaches to cope with non-idealities such as model errors;\nUnderstand the strengths and limitations of various approaches, including optimal control, learning-based control, and reinforcement learning;\nImplement state-of-the-art algorithms, rapidly prototype new ideas, and apply them to their own problem domains.",
        "inhalt": "Course Summary: This course covers advanced topics in robot learning and control, combining theoretical foundations with practical implementation to equip students with the skills to tackle real-world robotics challenges. The course emphasizes a systems-oriented approach, introducing modelling techniques for robot systems, optimal control methods, learning-based approaches, and reinforcement learning tailored to robotic applications. Students will learn how to model and control robotic platforms, integrate learned models into control frameworks, and address real-world challenges such as uncertainty, disturbances, and model inaccuracies.\nTopics covered in the course include:\nRobotics Preliminaries: Discrete- and Continuous-Time Models, Robot Dynamics Modeling (e.g., Quadrotor) and Simulation, Linearization Techniques (About Equilibrium, Feedback Linearization, Flatness), Control Architecture and Considerations\nFoundations of Optimal Control: Dynamic Programming, Bellman Equation, Continuous-Time Optimal Control (Pontryagin’s Minimum Principle), Linear-Quadratic Approximations (LQR and iLQR)\nLearning-Based Model Predictive Control (MPC): Robust MPC, Deterministic Approaches (Linear Regression, Neural Networks), Probabilistic Approaches (Bayesian Linear Regression, Gaussian Processes), MPC with Learned Dynamics Models, Optimization Toolboxes and Practical Considerations\nDeep Reinforcement Learning: Deep Q-Learning, Policy Gradient Methods, Proximal Policy Optimization (PPO), Risk-Aware Reinforcement Learning\nAdditional Topics in Safe Robot Decision-Making (adapted periodically based on the state-of-the-art)",
        "voraussetzungen": "Motivation and interest in robotics, machine learning, and control, as well as good knowledge of calculus, probability theory, linear algebra, fundamentals of control, and Python programming (the programming exercises will be in Python).\nAdditional knowledge and courses on the following topics will be beneficial: Dynamic systems, optimal control, classical reinforcement learning, basics of optimization, mobile robotics, and machine learning, deep learning (e.g., I2DL course).\nMoreover, our course, “Optimal Control and Decision Making,” which runs parallel to this one, serves as a good foundation but it is not mandatory.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1457083&pOrgNr=1",
        "name": "Advanced Topics in Communications Electronics",
        "kennung": "EI79002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module students have gained deeper understanding of a particular research area in communications electronics. They are able to apply the understanding to IC design problems, analyze the results, evaluate their impact, and create new communications designs",
        "inhalt": "In detail varying each semester, depending on the specific guest professor, the topics alter between the areas of analog design and logic design. Guest professors in the past have been for instance: Prof. Günhan Dündar, Bogazici University Istanbul; Prof. Willy Sansen, Katholieke Universiteit Leuven; Prof. David Binkley, University of North Carolina at Charlotte; Prof. Paolo Lenne, Ecole Polytechnique Federale de Lausanne; Prof. Radu Marculescu, Carnegie Mellon University Pittsburgh.",
        "voraussetzungen": "At least 2 Core modules from the CE stream",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1457077&pOrgNr=1",
        "name": "Advanced Topics in Communications Systems",
        "kennung": "EI79001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module students have gained deeper understanding of a particular research area in communications systems. They are able to apply the understanding to system communication problems, analyze the results, evaluate their impact, and create new communications solutions.",
        "inhalt": "In detail varying each semester, depending on the specific guest professor, the topics alter between the areas of e.g. coding, signal processing, or protocols. Guest professors in the past have been for instance: Prof. Günhan Dündar, Bogazici University Istanbul; Prof. Willy Sansen, Katholieke Universiteit Leuven; Prof. David Binkley, University of North Carolina at Charlotte; Prof. Paolo Lenne, Ecole Polytechnique Federale de Lausanne; Prof. Radu Marculescu, Carnegie Mellon University Pittsburgh.",
        "voraussetzungen": "At least 2 Core modules of the CS stream",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3047622&pOrgNr=1",
        "name": "Advanced Topics in IoT Security",
        "kennung": "EI71105",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the course, students are able to:\n• Demonstrate knowledge of the security issues of the Internet of Things\n• Understanding the vulnerabilities that threaten IoT systems and the countermeasures used to protect this system.\n• Develop critical thinking skills, lead a scientific discussion, write and presenting research ideas.",
        "inhalt": "In this seminar, students will broaden their understanding of IoT security by discussing recent attacks and vulnerabilities that threaten different IoT systems (such as intelligent vehicles, e-health systems, etc.) and countermeasure approaches proposed to mitigate these attacks. Many topics will be offered, and each student needs to choose one topic and write a short paper about it. The seminar will mimic the workflow of real conferences: Students need to submit research papers, perform peer-review to other submissions, and finally present their papers.",
        "voraussetzungen": "Basic knowledge of LaTeX typesetting for the seminar paper; Passing the following courses are recommended:\n1) IoT Security\n2) System Design for the Internet of Things",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3567443&pOrgNr=1",
        "name": "Advisor Advanced Training",
        "kennung": "CIT6320000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Besuch des Moduls haben die Studierenden folgende Kompetenzen erworben:\n• Differenziertes Führungsverständnis\n• Klare Kommunikation als\n• Teamleitungskompetenzen\n• Selbstleitung und Selbstreflexion\n• Entwicklung als Person und Persönlichkeit\n• Verantwortung\n• Umfangreicher Methodenpool für die Gruppensteuerung und zur Krisen-bewältigung\n• Unterstützung der Motivation durch Zielvereinbarungen und Sinnstiftung\n• Annehmbares, klares Delegieren von Aufgaben und Prozess- und Ergeb-nisverantwortung\n• Gezielte Projektsteuerung\n• Fachliche Verantwortung in komplexen Projekten wahrnehmen\n• Moderation auch von anspruchsvollen Prozessen\n• Meeting Kultur effektiv und effizient gestalten",
        "inhalt": "Das Modul besteht aus mehrtägigen professionellen Seminaren als Blockveranstaltung (meist Wochenendveranstaltungen), in welchen die Teilnehmenden folgende Inhalte auf theoretischer Basis vermittelt werden:\n• Anleitung und Begleitung bei der Planung, Gestaltung und Leitung von Workshops\n• Sinnvolle Übertragung von Aufgaben und Aufgabenbereichen\n• Moderationstechniken, Rollen in der Moderation\n• Supervisionsverständnis und S.-techniken\n• Nahtstellenmanagement effektiv gestalten\n• Individuelle Betreuung bei der Aufgabenerstellung und Verantwortungs-übernahme\n• Individuelles, persönliches Coaching mit Ziel- und Lösungserarbeitung",
        "voraussetzungen": "• Advisor in der Projekt- oder Gruppenleitung im advisor-Programm der CIT\n• Studierende in der CIT, mind. 5. Semester Bachelor oder im Masterstudiengang\n• Interesse und Eignung für Führungs- und Teamleitungsaufgaben",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3664085&pOrgNr=1",
        "name": "Advisor Training",
        "kennung": "CIT6330002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul ist der Studierende in der Lage gruppendynamische Prozesse zu erkennen und zu bewerten. Durch intensives Zusammenarbeiten der Gruppe innerhalb des advisor Trainings und das kontinuierliche Coaching durch externe Trainer erfährt jeder Teilnehmer eine intensive Persönlichkeitsentwicklung, welche sich wesentlich an seinen Stärken und Schwächen orientiert.",
        "inhalt": "Das Modul besteht aus mehrtägigen professionellen Seminaren (Präsenzzeit 12,5d à 8h = 100h) in welchen den Teilnehmern folgende Inhalte auf theoretischer Basis vermittelt werden:\n- Teamarbeit, Führung, Kommunikation\n- Lerntechniken, Zeitmanagement\n- Rhetorik und Präsentation\n- Moderation\n- Stressbewältigung\nIm Rahmen der Guppenphase des adveisor Tutoriums (eigenständiges Modul im fachlichen Wahlbereich des Bachelorstudiengangs) werden die in den Seminaren erlernten theoretischen Inhalte praktisch angewandt. Hierfür übernehmen die Teilnehmer die Vorbereitung (Eigenstudium 9 à 3h = 27h) und die Leitung der Gruppenstunden (Präsenzeit 9 à 1,5h = 13,5h).\nIm Anschluss an das Wintersemester erhalten die einzelnen Gruppen des adveisor Tutoriums eine klar definierte, praktische Aufgabe aus dem Bereich der Elektrotechnik und Informationstechnik, wie beispielsweise ein Fahrzeug zu bauen, das einer vorgegebenen Linie folgen kann. Aufgabe der Teilnehmer des adveisor Trainings ist es im Sommersemester jeweils eine Gruppe bei der Umsetzung des Projekts zu unterstützen und zu begleiten sowie die Gruppendynamik zu bewerten (Eigenstudium 40h).",
        "voraussetzungen": "Voraussetzung für die Teilnahme am Modul ist die Teilnahme als Tutor am advisor Programm der CIT.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3664089&pOrgNr=1",
        "name": "Advisor Tutorium",
        "kennung": "CIT6330001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul kennen die Studierenden die einzelnen Bestandteile sozialer Kompetenz, deren Wichtigkeit und deren Auswirkung auf einzelne Personen sowie Gruppen im Hinblick auf ein Projekt. Die Absolventen des Moduls haben das theoretische Wissen aus dem Seminar in der Projektphase angewendet und kennen einen Teambildungsprozess sowie mögliche auftretende Schwierigkeiten während eines Projekts.",
        "inhalt": "Das Modul besteht aus einem Seminar (Präsenzzeit) und einem praktischen Projekt (Eigenstudium), wofür die Teilnehmer zu Beginn des Moduls in Gruppen eingeteilt werden.\nIm Seminar werden Inhalte der sozialen Kompetenz besprochen:\n- Kommunikation\n- Teambildung\n- Zeit- und Selbstmanagement\n- Präsentationstechniken\n- Stressbewältigung\n- Projektmanagement\nDie einzelnen Gruppen lernen sich kennen, arbeiten zusammen mit einem Tutor an den einzelnen, oben genannten Themen und bereiten sich so als Team auf die anschließende Projektphase vor. In der Projektphase bekommen die einzelnen Gruppen eine klar definierte, praktische technische Aufgabe, wie beispielsweise ein Fahrzeug zu bauen, das einer vorgegebenen Linie folgen kann. Dafür werden ein technisches Konzept und ein Projektplan erarbeitet, die vor einer Jury präsentiert werden müssen. Anschließend steht den Gruppen ein begrenzter Zeitraum für die Umsetzung zur Verfügung. Das Modul wird mit der Präsentation der Projektergebnisse auf einer großen Abschlussveranstaltung durch die Studierenden abgeschlossen.",
        "voraussetzungen": "Das Modul richtet sich ausschließlich an Studierende im ersten Fachsemester der Bachelorstudiengänge der CIT.\nVoraussetzung für die Teilnahme am Modul ist die gleichzeitige Teilnahme am advisor Programm der CIT.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456654&pOrgNr=1",
        "name": "Analyse von Systemperformanz",
        "kennung": "IN2072",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Analyse der Performanz komplexer Systeme. Sie können für die Analyse von Systemperformanz geeignete Modelle auswählen, bewerten und entwickeln und Verfahren und Werkzeuge anwenden, um Kapazitätsplanungen und Vorhersagen durchführen zu können.",
        "inhalt": "- Evaluationstechniken, Leistungsmetriken und Workloads\n- Angemessenes Vorgehen bei Leistungsmessungen\n- Statistische Techniken der Datenauswertung\n- Entwurf von Experimenten\n- Simulation und analytische Modellierung\n- Beispiele",
        "voraussetzungen": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, IN0009 Grundlagen: Betriebssysteme und Systemsoftware",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1084720&pOrgNr=1",
        "name": "Analysis, Modeling and Simulation of Communication Networks",
        "kennung": "EI7450",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module, students gained an in-deep understandig of network analysis, modeling and simulation techniques. They are able to analyse and evaluate communication networks using analytical and simulation-based methods including traffic models, graph models and mobility models and they are put in the position to create tools for network simulation and to get acquainted with example simulation frameworks.",
        "inhalt": "Simulation and modeling basics (traffic modeling, link-, system-, packet level simulation, SW/HW in the loop), probability theory fundamentals, random number generation, mobility models, channel models, topology models, graph theory and algorithms, queuing models, queuing networks, network calculus, discrete event-based simulation, monte carlo simulation, rate-based simulation, analysis of simulation results, statistical analysis, visualisation of results, simulation languages and tools, simulation packages;\nas part of the course a simulation tool will be stepwise designed by the students during the tutorial and as homework",
        "voraussetzungen": "Basics in communication networks (protocols and performance analysis). The knowledge of following modules are therefore recommended:\n- Broadband Communication Networks\n\nBasic knowledge in object-oriented programming and basic knowledge in the Python programming language",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=608652&pOrgNr=1",
        "name": "Analysis of Three-Dimensional Shapes",
        "kennung": "IN2238",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students are familiar with continuous and discrete representations of three-dimensional shapes. Participants understand methods to analyze and compare three-dimensional shapes given in different representations and are able to implement these methods.",
        "inhalt": "It is a classical problem in Machine Vision to represent, analyze and compare three-dimensional shapes. In the last years this field has known a fast development leading to a number of very powerful algorithms with a solid mathematical foundation. In this course we will present some of these, discussing both, the mathematics involved and the practical issues for the implementation.\n\nTopics we plan to cover include:\n- Foundations of Differential Geometry of surfaces (tangent spaces, shape operator, metric, geodesics and their discrete versions)\n- Detection of intrinsic symmetries\n- Matching pairs or a collection of shapes\n- The Gromov-Hausdorff distance and its variants\n- Spectral methods (i.e. Laplace-Beltrami operators and their eigenspaces)\n- Conformal geometry applied to shape analysis\n- Shape matching based on continuum mechanics\n- Pointwise feature descriptors\n- Machine learning applied to 3D shape analysis",
        "voraussetzungen": "The requirements for the class are knowledge in basic mathematics, in particular multivariate analysis and linear algebra.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1392538&pOrgNr=1",
        "name": "Angewandte Biorobotik",
        "kennung": "IN2352",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende der Veranstaltungen sind die Studierenden in der Lage,\n• die Konzepte zur Verwendung biologischer Erkenntnisse bei der Lösung technischer Aufgabenstellungen zu erklären und diese auf konkrete Problemstellungen anzuwenden.\n• die Rolle von Modellen im Wissenstransfer von der Biologie in die Robotik zu beschreiben und zur Problemlösung geeignete Modelle zu vergleichen, ihre spezifischen Grenzen zu charakterisieren und sie zur Lösung von spezifischen Problemen anzuwenden.\n• Anwendungsbereiche sowie Vor-und Nachteile biologisch inspirierter Optimierungsverfahren zu unterscheiden, und sie zur Optimierung erarbeiteter Lösung anzuwenden.\n• das erworbene Wissen im praktischen Versuch anzuwenden, und einen Regler für einen Laufroboter zu entwerfen.",
        "inhalt": "Das Modul behandelt die folgenden Themen\n• Einführung in die Portfolioerstellung, Grundlagen der Präsentation, Literaturrecherche und interaktiver Lernumgebungen\n• Grundlagen zweibeiniger Lokomotion\n• Regelung zweibeiniger Roboter\n• Biologisch inspirierte Optimierungsverfahren\n• Einführung in Experimentaufbau und –Durchführung\nIm Praxisprojekt werden die im Theorieteil behandelten Inhalte von den Studenten auf einen Roboteraufbau übertragen, ein Regler entworfen und optimiert und das resultierende Verhalten analysiert und bewertet.",
        "voraussetzungen": "Technische Mechanik, Algorithmen und Datenstrukturen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1321148&pOrgNr=1",
        "name": "Angewandte Kryptologie",
        "kennung": "EI04003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer sind nach dem erfolgreichen Abschluss des Moduls in der Lage, die\nFunktionsweise der grundlegenden Verfahren der Kryptologie und deren Implementierung zu analysieren, diese in einem praktischen Umfeld anzuwenden und die Implementierungskomplexitäten kryptographischer Verfahren zu erfassen. Zusätzlich verstehen sie die Herausforderungen der Kryptologie in Zeiten von Quantencomputer und können Lösungen darlegen.\n\nIm Rahmen der Programmieraufgabe(n) sind die Teilnehmer in der Lage einen kryptographischen Algorithmus in der Programmiersprache C zu implementieren.",
        "inhalt": "Die Vorlesung bietet eine Einführung in die Themen der Kryptologie. Die für die Vorlesung relevanten Aussagen der diskreten Mathematik werden rekapituliert. An die Besprechung kryptographischer Mechanismen (symmetrische vs. asymmetrische Verschlüsselung, Stromchiffren, hybride Kryptographie, Einweg- und Hashfunktionen, digitale Signaturen, sowie deren Kombination in Authenticated Encryption) schließt sich die beispielhafte Betrachtung wichtiger kryptographischer Algorithmen an. Es werden symmetrische und asymmetrische Verfahren mit ihren verschiedenen Arbeitsmodi betrachtet. Ihre Verwendung in kryptographischen Protokollen zu Authentifizierung und Key-Exchange, sowie Public-Key-Infrastrukturen wird untersucht. Außerdem wird das Konzept des Secret-Sharings erklärt. Dabei wird auch auf die Generierung und Eigenschaften kryptographisch sicherer Zufallszahlen eingegangen.\nAbschließend wird auf die neuen Herausforderung der Kryptogrpahie in Zeiten von Quantencomputer eingegangen. Hierzu werden verschiedene Post-Quantum-Algorithmen vorgestellt.",
        "voraussetzungen": "Grundkenntnisse in Programmierung, Algorithmen und Datenstrukturen, Computerhardware, Kommunikationsprotokolle,\ndiskrete Mathematik\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich\nabsolviert sein:\nAlgorithmen und Datenstrukturen, Programmierpraktikum C,\nComputertechnik, Kommunikationsnetze",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456521&pOrgNr=1",
        "name": "Anwendungen Wissenbasierter Methoden",
        "kennung": "IN2058",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "The participants attain detailed knowledge about current techniques for designing and realizing knowledge-based systems and their applications to real-world problems, especially in the context of the world-wide web and the control of intelligent software systems. In the accompanying exercises, participants will gain knowledge about the design and realization of central components of such systems.",
        "inhalt": "The lecture course teaches state-of-the-art techniques for implementing knowledge-based systems and applying them to real problems, in particular in the contexts of the World Wide Web and controlling intelligent systems. The lecture course covers the following topics:\n- description logics: representation of taxonomic knowledge and reasoning about it;\n- principles of the Semantic Web: Semantic Markup Languages, Inference mechanisms and engines for the Semantic Web;\n- information systems in the WWW: data integration from distributed information sources; wrappers and wrapper learning; planning mechanisms for data integration; global-as-view and local-as-view abstractions;\n- Semantic Web Services and planning complex services;\n- selected examples of intelligent web services;\n- grounded knowledge representation: principles of data mining and the integration of data mining mechanisms into knowledge-based systems",
        "voraussetzungen": "IN2062 Techniques in Artificial Intelligence, basic courses in informatics",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4112127&pOrgNr=1",
        "name": "Applied Cryptography for Decentralized Systems (ACDS)",
        "kennung": "CIT333000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After participating in the module, students can describe the goals and properties and internals of cryptography of selected decentralized systems and blockchain systems. They can describe the concepts of zero-knowledge-proof constructions and their application in decentralized systems. They will be able apply advanced security concepts such as threshold cryptography and trusted execution environments in a correct manner to solve security problems. They are able to assess performance properties of different cryptographic concepts for decentralized systems, and to develop solutions based on the methods and concepts they have learned.",
        "inhalt": "Cryptographic Proof Basics\n• Hash Functions, Commitment Schemes, ZKP Basics\n• Sigma Protocols\n• SNARK Constructions\n\nPolynomials in Cryptography (Secret Sharing, Polynomial\nCommitments)\n• Arithmetization\n• PlonK\n\nSNARK Applications\n• Circuit programming\n• zkVMs\n\nTrusted Execution Environments\n• Process and VM based solutions\n• Building blocks, Performance and use-cases\n\nSecure Multiparty Computation\n• Oblivious Transfer, Garbled Circuits\n• Beaver Triples, BGW and GMW protocols",
        "voraussetzungen": "- Introduction to Computer Networking and Distributed Systems\n(IN0010)\n- IT Security (IN0042) or Network Security (IN2101)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2695590&pOrgNr=1",
        "name": "Applied Machine Intelligence",
        "kennung": "EI71086",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After the successful participation in the module, students know the methods, algorithms and underlying machine learning concepts for extracting information from audio, visual, and textual unstructured content. They understand the real-life constraints and resulting requirements for the design, implementation, and application of information extraction from unstructured data. Students are able to apply and modify existing information extraction algorithms, taking into account real-life requirements. They are able to evaluate information extraction algorithms and methodologies with respect to their suitability for specific applications or services.",
        "inhalt": "Process/Lifecycle of a Data Analysis/Machine Learning task, Data Preprocessing, Regression (Algorithms and Metrics), Classification (Algorithms and Metrics), Deep Learning, Model Selection, Validation Techniques, Model Interpretation, etc.",
        "voraussetzungen": "Successful completion of at least one of the following lectures:\nEI70360 Machine Learning and Optimization\nEI70380 Signal Processing and Machine Learning\nEI70130 Machine Learning in Robotics\nEI70150 Pattern Recognition\n\nFurthermore the lecture assumes basic knowledge of general topics discussed at undergraduate level (BSc.) in one of the following areas:\n- Linear Algebra\n- Computer engineering\n- Communications engineering\n- Multimedia technology and human machine interaction\n\nAdditionally, basic knowledge of Python (or the motivation to learn it) is recommended.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4390104&pOrgNr=1",
        "name": "Applied Machine Intelligence - Block Course",
        "kennung": "CIT433042",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After the successful participation in the module, students know the methods, algorithms and underlying machine learning concepts for extracting information from audio, visual, and textual unstructured content. They understand the real-life constraints and resulting requirements for the design, implementation, and application of information extraction from unstructured data. Students are able to apply and modify existing information extraction algorithms, taking into account real-life requirements. They are able to evaluate information extraction algorithms and methodologies with respect to their suitability for specific applications or services.",
        "inhalt": "Process/Lifecycle of a Data Analysis/Machine Learning task, Data Preprocessing, Regression (Algorithms and Metrics), Classification (Algorithms and Metrics), Deep Learning, Model Selection, Validation Techniques, Model Interpretation, etc.\n\nBlock event (1 week), all day before the start of the semester, plus individual dates during the semester (non-weekly/on-demand)",
        "voraussetzungen": "Successful completion of at least one of the following lectures:\nEI70360 Machine Learning and Optimization\nEI70380 Signal Processing and Machine Learning\nEI70130 Machine Learning in Robotics\nEI70150 Pattern Recognition\n\nFurthermore the lecture assumes basic knowledge of general topics discussed at undergraduate level (BSc.) in one of the following areas:\n- Linear Algebra\n- Computer engineering\n- Communications engineering\n- Multimedia technology and human machine interaction\n\nAdditionally, basic knowledge of Python (or the motivation to learn it) is recommended.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1114260&pOrgNr=1",
        "name": "Applied Reinforcement Learning",
        "kennung": "EI7641",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "On completion of this course, students are able to:\n- describe classic scenarios of reinforcement learning problems;\n- explain basics of reinforcement learning methods;\n- model real engineering problems using reinforcement learning methods;\n- compare performance of the reinforcement learning algorithms that are covered in the course practically in the specific projects;\n- select proper reinforcement learning algorithms in accordance with specific problems, and argue their choices;\n- construct and implement reinforcement learning algorithms to solve simple robotics problems on the e-Puck platform.",
        "inhalt": "Reinforcement learning (RL) is one most powerful approach in solving sequential decision making problems. A reinforcement learning agent interacts with its environment and uses its experience to make decisions towards solving the problem. The technique has succeeded in various applications of operation research, robotics, game playing, network management, and computational intelligence.\n\nThis lecture provides an overview of basic concepts, practical techniques, and programming tools used in reinforcement learning. Specifically, it focuses on the application aspects of the subject, such as problem solving and implementations. By design, it aims to complement the theoretical treatment of the subject, such as mathematical derivation, convergence proves, and bound analysis, which are covered in the lecture \"\"Approximate Dynamic Programming and Reinforcement Learning\"\" in winter semesters.\n\nIn this lecture, we will cover the following topics (not exclusively):\n- Reinforcement learning problems as Markov decision processes\n- Dynamic programming (value iteration and policy iteration)\n- Monte Carlo reinforcement learning methods\n- Temporal difference learning (SARSA and Q learning)\n- Simulation-based reinforcement learning algorithms\n- Linear value function approximation, e.g. tile coding\n- Programming skills on e-Puck.",
        "voraussetzungen": "Basic knowledge of linear algebra, statistics, optimization, and machine learning, as well as basic knowledge in Matlab or Python (or the motivation to learn it).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1137454&pOrgNr=1",
        "name": "Approximate Dynamic Programming and Reinforcement Learning",
        "kennung": "EI7649",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "On completion of this course, students are able to:\n- describe classic scenarios in sequential decision making problems;\n- explain basic models of ADP/RL methods;\n- derive ADP/RL algorithms that are covered in the course;\n- characterize convergence properties of the ADP/RL algorithms covered in the course;\n- compare performance of the ADP/RL algorithms that are covered in the course, both theoretically and practically;\n- select proper ADP/RL algorithms in accordance with specific applications;\n- construct and implement ADP/RL algorithms to solve simple (robotic) problems.",
        "inhalt": "Approximate dynamic programming (ADP) and reinforcement learning (RL) are two closely related paradigms for solving sequential decision making problems. ADP methods tackle the problems by developing optimal control methods that adapt to uncertain systems over time, while RL algorithms take the perspective of an agent that optimizes its behavior by interacting with its environment and learning from the feedback received. Both technologies have succeeded in applications of operation research, robotics, game playing, network management, and computational intelligence.\n\nWe will cover the following topics (not exclusively):\n- Markov decision processes\n- Dynamic programming\n- Approximate dynamic programming\n- Reinforcement learning\n- Policy gradient algorithms",
        "voraussetzungen": "Basic knowledge of linear algebra, statistics, optimization, analysis and machine learning, as well as basic knowledge in Python (or the motivation to learn it).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=708276&pOrgNr=1",
        "name": "Aspekte der systemnahen Programmierung bei der Spieleentwicklung",
        "kennung": "IN0035",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Teilnahme an dem Modul sind die Studierenden in der Lage, den Aufbau von für die Spieleentwicklung relevanten Rechensystemen (ARM, AArch64) und deren maschinennahe Programmierung zu verstehen. Sie können die Funktionsweise wichtiger Programme und Algorithmen analysieren und deren Leistung bewerten. Anhand der Ergebnisse können die Teilnehmer Optimierungen entwickeln und umsetzen.",
        "inhalt": "- Einführung in die Rechnerarchitektur für Spiele-Hardware\n- Einführung in die Nutzung relevanter Programmierwerkzeuge\n- Implementierung einfacher Algorithmen in Maschinensprache\n- Gruppenarbeit anhand für die Spieleentwicklung praxisrelevanter Aufgaben auf Spiele-Hardware.\n- Leistungsanalyse der entwickelten Programme, sowie\n- Optimierung auf Assembler-Ebene\n- Zielarchitekturen: ARM, AArch64",
        "voraussetzungen": "Modul Betriebssysteme und hardwarenahe Programmierung für Games (IN0034) sollte gleichzeitig besucht werden",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=836182&pOrgNr=1",
        "name": "Audiokommunikation",
        "kennung": "EI0602",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, die Theorie und Praxis von Schallwandlern und Schallspeichern zu verstehen und auf die Berechnung von Schallfeldern einfacher Schallstrahler anzuwenden. Die Studierenden haben ein grundlegendes Verständnis der Physiologie und Psychoakustik des Gehörs und sind in der Lage, dieses auf Fragestellungen in der Audiologie, Signalcodierung und Studiotechnik, sowie der gehörgerechten Beurteilung der akustischen Produktqualität anzuwenden.",
        "inhalt": "Komponenten der Audiokommunikation. Physik: Schallgrößen (Druck, Schnelle, Intensität, Impedanz), Schallfelder, Schallwandler (dynamische, elektrostatische Wandler, Kolbenmembran), Schallspeicher (Schallplatte, CD, MP3, SACD, DVD-Audio). Physiologie: peripheres Hörsystem, Otoakustische Emissionen (OAE), zentrales Hörsystem. Psychoakustik: Methoden, Hörfläche, Maskierung, Frequenzgruppen, Lautheit, Schärfe, Tonhöhe, Ausgeprägtheit der Tonhöhe, Unterschiedsschwellen, Schwankungsstärke, Rauigkeit, Binaurales Hören: binaurale Information, Richtungshören und binaurale Entmaskierung. Anwendungen: Auswahl aktueller Forschungsergebnisse aus Audiologie, Geräuschdesign, Raumakustik, Sprachgütebeurteilung, Tonstudiotechnik.",
        "voraussetzungen": "Mathematische Grundlagen (komplexe Rechnung), Grundlagen der Signaldarstellung (Fouriertransformation)",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=480385&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Formale Methoden und ihre Anwendungen",
        "kennung": "IN3350",
        "organisation": "Department Computer Engineering",
        "anmerkung": "5 ECTS ab SS18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Formalen Methoden und ihren Anwendungen und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Formale Methoden und ihre Anwendungen an. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet Formale Methoden und ihre Anwendungen (FMA) wählen.",
        "voraussetzungen": "Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=480835&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Künstliche Intelligenz und Robotik",
        "kennung": "IN3150",
        "organisation": "Department Computer Engineering",
        "anmerkung": "5 ECTS ab SS18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Künstlicher Intelligenz und Robotik und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Künstliche Intelligenz und Robotik an. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet Künstliche Intelligenz und Robotik (KIR) wählen.",
        "voraussetzungen": "Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=480918&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Rechnerarchitektur",
        "kennung": "IN3250",
        "organisation": "Department Computer Engineering",
        "anmerkung": "5 ECTS ab SS18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen der Rechnerarchitektur und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Rechnerarchitektur an. Studierende des Masterstudienganges Informatik können eine dieses Modul einmal als Wahlmodul aus dem Fachgebiet Rechnerarchitektur (RA) wählen.",
        "voraussetzungen": "Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=488013&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Software Engineering",
        "kennung": "IN3050",
        "organisation": "Department Computer Engineering",
        "anmerkung": "5 ECTS ab SS18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Software Engineering und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Software Engineering an. Studierende des Masterstudienganges Informatik können eine dieser Veranstaltungen als Wahlveranstaltung aus dem Fachgebiet Software Engineering (SE) wählen. Umfang und Anzahl der Credits variieren.",
        "voraussetzungen": "Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=484175&pOrgNr=1",
        "name": "Ausgewählte Themen aus dem Bereich Verteilte Systeme, Rechnernetze und Sicherheit",
        "kennung": "IN3300",
        "organisation": "Department Computer Engineering",
        "anmerkung": "5 ECTS vom SS18",
        "lernergebnisse": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Verteilten Systemen, Rechnernetzen und Sicherheit und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
        "inhalt": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Verteilte Systeme, Rechnernetze und Sicherheit an. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet Verteilte Systeme, Rechnernetze und Sicherheit (VRS) wählen.",
        "voraussetzungen": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, Bachelor Informatik",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1446290&pOrgNr=1",
        "name": "Autonomes Fahren",
        "kennung": "IN2356",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Absolvieren des Moduls kennen die Teilnehmer die Grundlagen des automatisierten Fahrens, und haben Bezug sowohl wissenschaftlichen, als auch praktischen Bezug zu den aktuellen Themenstellungen aufgebaut. Die Studenten kennen exemplarische Lösungsansätze für zentrale Fragstellungen und können diese grundlegend anwenden.",
        "inhalt": "Das Modul lehrt die Grundlagen des Automatisierten Fahrens, stellt aktuellen Bezug zu Wissenschaft und Praxis her, erörtert zentrale Fragestellungen und vermittelt für diese exemplarische Lösungsansätze, die die Studenten grundlegend anzuwenden lernen.\n\nÜberblick:\n\nBahnplanung, Entscheidungsfindung, Trajektorien\nMultisensor Datenfusion, Tracking, Detektion, Sensormodelle\nFahrbahnerkennung, –Modellierung und Kartographierung\nKI im Fahrzeug, Szenarioklassifikation und –Prädiktion\nSemantische Konzepte, Beschreibung von Verkehrsszenarien, Reasoning\nArchitekturen und Rechnersysteme für Autonomes Fahren\nConnected Vehicles & Intelligente Infrastruktur\nFunctional and Operational Safety\n\nVorträge von Experten aus der Industrie verstärken den aktuellen Praxisbezug\n\nEin Bonus von 0.3 Notenpunkten kann über die freiwillige Einreichung eines in Python umgesetzten Demonstrators zu einer der diskutierten Fragestellungen erzielt werden.",
        "voraussetzungen": "Lineare Algebra für Informatik (MA0901)\nDiskrete Wahrscheinlichkeitstheorie (IN0018)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1126210&pOrgNr=1",
        "name": "Autonomous Navigation for Flying Robots",
        "kennung": "IN2318",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage:\n- Die Flugprinzipien von Quadrokoptern sowie deren Anwendungsmöglichkeiten zu erklären, sowie einen Quadrokopter (zumindest in Simulation) sicher zu fliegen,\n- die Lage von dreidimensionalen Körpern zu spezifizieren und mit ihnen bestimmte Berechnungen anzustellen (z.B. die relative Pose zu berechnen)\n- das Prinzip der Bayes’schen Zustandsschätzung zu erklären,\n- einen erweiteren Kalmanfilter (EKF) zu implementieren, anzuwenden, und für einen gegebenen Anwendungsfall geeignete Parameter zu finden,\n- einen PID Regler selbst zu implementieren und diesen richtig einzustellen,\n- die Grundlagen von visueller Bewegungsschätzung und Kartierung zu verstehen und wiederzugeben.",
        "inhalt": "Über die letzten Jahre haben Minihelikopter und Quadrotoren enorm an Popularität gewonnen. Das Anwendungsspektrum reicht von professionellen Luftaufnahmen über visuelle Inspektion von Industrieanlagen bis hin zur automatischen 3D Rekonstruktion von Gebäuden. Jedoch bedarf es zur Steuerung eines Quadrotors eines erfahrenen Piloten und während des Flugs dessen ständige Aufmerksamkeit. Deshalb gibt es starkes Interesse nach Lösungsansätzen, die einen sicheren autonomen Flug ermöglichen. Dies setzt jedoch voraus, dass alle benötigte Sensorik und Rechenpower auf dem Quadrotor mitgeführt werden muß, der nur über eine sehr beschränkte Nutzlast verfügt, was zu starken Einschränkungen führt.\n\nDieser Kurs führt in die Grundlagen der autonomen Navigation von Flugrobotern ein. Hierzu werden folgende Themengebiete abgedeckt:\n- 3D Geometrie,\n- probabilistische Zustandsschätzung mit Kalmanfiltern,\n- visuelle Odometrie, SLAM, 3D Mapping,\n- lineare Regelung mit PID Reglern.\nInsbesondere werden die Studierenden lernen, wie sich die Position eines Quadrotors von seinen Sensordaten schätzen läßt, und wie man geeignete Regelungssignale ableitet um den Quadrotor entlang einer Trajektorie zu navigieren.\n\nDer Kurs besteht aus einer Serie von wöchentlichen Vorlesungsvideos sowie interaktiven Übungs- und Programmieraufgaben. Für die Flugexperimente steht ein browser-basierte Quadrotor-Simulator bereit, für den kleine Python-Skripte vervollständigt werden müssen.\n\nDieser Kurs ist sowohl für Bachelor- als auch Masterstudierende geeignet, die Informatik, Elektrotechnik oder Maschinenbau studieren. Der MOOC wurde im Sommersemester 2014 von der TUM zum ersten Mal auf EdX angeboten. Von 20.000 registrierten Teilnehmern haben damals mehr als 1.400 den Kurs erfolgreich abgeschlossen. Der MOOC basiert auf der TUM Vorlesung „Visuelle Navigation für Flugroboter“, der in den Jahren 2012 und 2013 jeweils mit dem TUM TeachInf Award für die beste Lehrveranstaltung ausgezeichnet wurde.",
        "voraussetzungen": "Lineare Algebra, Wahrscheinlichkeitstheorie, 3D Geometrie, Python",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=936412&pOrgNr=1",
        "name": "Basic Laboratory Course on Telecommunications",
        "kennung": "EI0679",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dieser Veranstaltung sind die Studierenden in der Lage, die theoretischen Grundlagen aus den Modulen „Nachrichtentechnik“ und „Nachrichtentechnik 2“ praktisch mittels Computersimulationen anzuwenden. So können sie Kommunikationssysteme hinsichtlich von Leistungsindikatoren charakterisieren und vergleichen.",
        "inhalt": "Die folgenden Komponenten eines Kommunikationssystems werden untersucht:\n- Quellenkodierung (Huffman)\n- Kanalkodierung (Wiederholungscode)\n- Digitale Modulationsverfahren (ASK, PSK, QAM, DPSK)\n- Digitale Signaldarstellung (Abtasttheorem)\n- Digitale Basisbandübertragung (Pulsformung, Signaldetektion)\n- Bandpasssignalübertragung\n- Entzerrung von Kanälen mit Intersymbolinterferenz (Zero Forcing Entzerrer, Wiener Filter)",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits absolviert worden sein:\n- Nachrichtentechnik\n- Stochastische Signale\n- Signaltheorie\n \nEs wird empfohlen begleitend an folgenden Modulen teilzunehmen:\n- Nachrichtentechnik 2",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3939503&pOrgNr=1",
        "name": "Beinroboter",
        "kennung": "CIT436000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Das Modul vermittelt Kenntnisse über die kinematische und dynamische Modellierung von Systemen leggeder Roboter. Es unterrichtet über die Steuerung der Fortbewegung von leggeden Robotern und bietet somit Fachkenntnisse an, die auf die Steuerung verschiedener dynamischer Robotersysteme anwendbar sind. Das Modul behandelt fortgeschrittene Regelalgorithmen, einschließlich modellprädiktiver Regelung und Ganzkörperregelung.",
        "inhalt": "1. Einführung in legged Robots\n2. Modellierung und Steuerung eines einbeinigen Roboters, der sich in der Ebene hüpft\n3. Modellierung und Steuerung eines beinbasierten Roboters, der sich in drei Dimensionen bewegt\n4. Steuerung des Laufs von Zweibeinern und Vierbeinern\n5. Fortgeschrittene Regelalgorithmen zur Steuerung von legged Robots, einschließlich modellprädiktiver Regelung und Ganzkörperregelung",
        "voraussetzungen": "Wissen über Robotik, mindestens an einer Vorlesung über Robotik teilgenommen, wie z.B. IN2067 (Robotik), IN2138 (Roboterbewegungsplanung).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473853&pOrgNr=1",
        "name": "Bildverstehen I: Methoden der industriellen Bildverarbeitung",
        "kennung": "IN2023",
        "organisation": "Department Computer Engineering",
        "anmerkung": "neuer Titel ab WS 11/12",
        "lernergebnisse": "Nach Bestehen des Moduls verstehen die Teilnehemer die wesentlichen Hardware-Komponenten eines industriellen Bildverarbeitungssystems, sowie die Theorie, Datenstrukturen und Implementierung der wichtigsten Algorithmen der industriellen Bildverarbeitung. Sie sind in der Lage, Bildverarbeitungsaufgaben zu analysieren und zu bewerten und können diese Kenntnisse und Fähigkeiten nutzen, um industrielle Bildverarbeitungsanwendungen zu entwickeln.",
        "inhalt": "Das Modul gibt eine detaillierte Beschreibung der praxisrelevanten Methoden und Algorithmen, die zur Lösung von Anwendungen in der industriellen Bildverarbeitung verwendet werden. Die Auswahl der Verfahren orientiert sich an den häufigsten Einsatzgebieten der Bildverarbeitung in der Industrie: Lageerkennung, Form- und Maßprüfung und Objekterkennung. Der Schwerpunkt der Vorlesung ist die Beschreibung der Verfahren und ihrer Grundlagen. Beispiele aus der Praxis zeigen die typischen Anwendungen, in denen die vorgestellten Verfahren eingesetzt werden. Im einzelnen werden folgende Themenbereiche behandelt:\n- Bildaufnahme\n- Bildverbesserung\n- Segmentation und Merkmalsextraktion\n- Morphologie\n- Kantenextraktion\n- Segmentation und Anpassung von geometrischen Primitiven\n- Kamerakalibrierung\n- Template Matching\n- Stereo-Rekonstruktion",
        "voraussetzungen": "Das Modul setzt grundlegende Kenntnisse der folgenden Gebiete voraus: Lineare Algebra (lineare Transformationen zwischen Vektorräumen in Matrixalgebra), Analysis (Reihen, Differentiation und Integration ein- und zweidimensionaler Funktionen).",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458310&pOrgNr=1",
        "name": "Bildverstehen II: Robot Vision",
        "kennung": "IN2016",
        "organisation": "Department Computer Engineering",
        "anmerkung": "neuer Titel seit WS 11/12",
        "lernergebnisse": "Teilnehmer der Vorlesung verstehen die Theorie, Datenstrukturen und Implementierung der wichtigsten Algorithmen, die im Robotersehen und im maschinellen Sehen verwendet werden. Sie sind in der Lage, Bildverarbeitungsaufgaben zu analysieren und zu bewerten und können diese Kenntnisse und Fähigkeiten nutzen, um Anwendungen des Robotersehens und maschinellen Sehens zu entwickeln.",
        "inhalt": "Die Vorlesung gibt eine detaillierte Beschreibung der praxisrelevanten Methoden und Algorithmen, die zur Lösung von Anwendungen im Robotersehen und maschinellem Sehen verwendet werden. Der Schwerpunkt der Vorlesung ist die Beschreibung der Verfahren und ihrer Grundlagen. Beispiele aus der Praxis zeigen die typischen Anwendungen, in denen die vorgestellten Verfahren eingesetzt werden. Unter anderem werden folgende Themenbereiche behandelt:\n- Merkmalsextraktion\n- Klassifikation\n- Farbbildverarbeitung\n- Beschriftungserkennung (Barcodes, OCR)\n- Hand-Auge-Kalibrierung\n- Objekterkennung",
        "voraussetzungen": "Modul IN2023 Bildverstehen I: Methoden der industriellen Bildverarbeitung;\ngrundlegende Kenntnisse der folgenden Gebiete:\n- Lineare Algebra (lineare Transformationen zwischen Vektorräumen in Matrixalgebra)\n- Analysis (Reihen, Differentiation und Integration ein- und zweidimensionaler Funktionen)\n- Wahrscheinlichkeitstheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=808887&pOrgNr=1",
        "name": "Biologically-Inspired Learning for Humanoid Robots",
        "kennung": "EI7263",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach diesem Kurs sind die Studierenden in der Lage:\n- Das Roboter-Betriebssystem ROS mit dem NAO Roboter zu benutzen.\n- Die wichtigsten biologischen Mechanismen zu verstehen, die für das Lernen verantwortlich sind.\n- Biologisch inspirierte Algorithmen für sensomotorische Zuordnungen/Funktionen und Reinforcement-Lernen zu implementieren.",
        "inhalt": "1) Einleitung\n- Motivation\n- Forschung über das menschliche Gehirn\n- Menschliches Gehirn als Inspiration für motorische Steuerung\n\n2) Lernen\n- Warum müssen Humanoide lernen?\n- Was müssen Humanoide lernen?\n- Lernalgorithmen\n-- Überwachtes Lernen\n-- Unüberwachtes Lernen\n-- Reinforcement-Lernen\n- Lernen durch eigenständige Exploration\n- Lernen durch Demonstration\n\n3) Das Kleinhirn\n- Fakten\n- Anatomie\n- Neuronale Schaltkreise\n- Auswirkungen von Krankheiten, die das Kleinhirn betreffen\n\n4) Computermodell des Kleinhirns\n- Assoziativspeicher\n- Cerebellar Model Articulation Controller (CMAC)\n\n5) Basalganglien\n- Anatomie und Hauptkomponenten\n- Projektionen von und zu anderen Hirnregionen\n- Direkte und indirekte Leitungsbahn\n- Schleifen in den Basalganglien\n\n6) Reinforcement-Lernen (RL)\n- Eigenschaften\n- Belohnung\n- Agent und Umgebung\n- Hauptkomponenten eines RL Agenten\n- Zeitdifferenz-Lernen\n\n7) Selbstorganisierende Karten (SOK)\n\n8) Zentraler Mustergenerator (ZMG)\n- Biologischer Ansatz\n- Computermodell\n- Mehrschicht ZMG",
        "voraussetzungen": "C/C++ Programmier-Fähigkeiten",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=793128&pOrgNr=1",
        "name": "Blockpraktikum C++",
        "kennung": "EI0554",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Modulveranstaltung haben die Studierenden Grundlagen und erweiterte Kenntnisse in der Programmiersprache C++ erworben und sind in der Lage ihr wissen praktisch anzuwenden. Auch können die Studierenden Template Klassen und Funktionen entwickeln und die Standard Template Library (STL) im Rahmen von Programmieraufgaben mit C++ anwenden. Sie haben die Bedeutung guter Lesbaren und gut Dokumentation von Code verstanden und sind in der Lage solchen Code in C++ zu entwickeln. Zudem haben die Studierenden die Konzepte der objektorientierte Programmierung (OOP) verstanden und sind in der Lage, auf Basis dieser Konzepte eigene objektorientierte Programme - unter Verwendung von Klassen, Vererbung, Polymorphie, virtuelle Funktionen, etc. - in der Programmiersprache C++ zu entwickeln.",
        "inhalt": "Im Rahmen des Elektrotechnik-Studiums ist eine Ausbildung in einer führenden, in der Industrie weit verbreiteten Programmiersprache wie C++ unabdingbar. Dieses Blockpraktikum zum Thema C++ wird in den Semesterferien angeboten. Es gliedert sich in einen Grundlagen- und einen Projektteil. Im Grundlagenteil werden fundamentale Sprachkonzepte von C++, wie Objekte, Klassen und Templates, in Vorlesungen erklärt und anschließend anhand praktischer Beispiele umgesetzt und vertieft. Dieser Grundlagenteil soll 2 Wochen lang in Vollzeit bearbeitet werden. Es stehen dabei stets Tutoren für Fragen zur Verfügung.\nIm zweiten Teil sollen die Lehrinhalte vertieft werden, indem ein kleines Projekt aus dem Tätigkeitsfeld des Lehrstuhls umgesetzt werden muss. Hierfür haben die Studierenden 4 Wochen Zeit, und können sowohl zu Hause als auch in den Räumen der TUM arbeiten. Über eine Prüfung am Ende wird die Bewertung durchgeführt.\nDas Praktikum ist als Veranstaltung mit zwei SWS praxisorientierter Vorlesung und vier SWS Praktikum konzipiert.",
        "voraussetzungen": "Grundpraktikum C, Algorithmen und Datenstrukturen oder vergleichbare Vorlesung",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3399030&pOrgNr=1",
        "name": "Brain, Mind and Cognition",
        "kennung": "CIT4330010",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Moduls haben die Studierenden zum einen einen breiten und interdisziplinären Zugang und Einblick zum Thema \"Brain, Mind and Cognition\" gewonnen haben und können entsprechende Konzepte verstehen und bewerten.\n\nStudierende sind anhand der gelesenen Literatur in der Lage wissenschaftliche Fragestellungen zu identifizieren und zu formulieren. Zudem verbessern die Studierenden ihre schriftliche und mündliche Ausdrucksweise sowie die Fähigkeit zum wissenschaftlichen Dialog.",
        "inhalt": "Im Seminarteil lesen Studierende allgemeinverständliche Literatur (bis zu 5 Bücher) zum erweiterten Themenkreis Brain, Mind and Cognition und diskutieren in der Gruppe. Es soll dabei die Frage beantwortet werden in welcher Form wir etwas aus der Literatur lernen können über den Aufbau und die Funktion von Gehirn, Geist und Kognition. Welche Inspiration können wir daraus für die technische Arbeit gewinnen? Ergänzend zum Seminar gibt es eine Vorlesung, in der Hintergrundinformation zu den Themen Neuro- und Kognitionswissenschaften mit Blick auf kognitive Roboter vermittelt werden.\nLehr- und Lernmethode",
        "voraussetzungen": "Ausreichende Sprachkenntnisse in Englisch, um sprachlich anspruchsvolle Literatur lesen, sowie verständliche Essays zum Thema verfassen zu können.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2690338&pOrgNr=1",
        "name": "Brain, Mind and Cognition für Nicht-Ingenieure",
        "kennung": "EI10016",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Moduls haben die Studierenden zum einen einen breiten und interdisziplinären Zugang und Einblick zum Thema \"Brain, Mind and Cognition\" gewonnen haben und können entsprechende Konzepte verstehen und bewerten.\nStudierende sind anhand der gelesenen Literatur in der Lage wissenschaftliche Fragestellungen zu identifizieren und zu formulieren. Zudem verbessern die Studierenden ihre schriftliche und mündliche Ausdrucksweise sowie die Fähigkeit zum wissenschaftlichen Dialog.",
        "inhalt": "Im Seminarteil lesen Studierende allgemeinverständliche Literatur (bis zu 5 Bücher) zum erweiterten Themenkreis Brain, Mind and Cognition und diskutieren in der Gruppe. Es soll dabei die Frage beantwortet werden in welcher Form wir etwas aus der Literatur lernen können über den Aufbau und die Funktion von Gehirn, Geist und Kognition. Welche Inspiration können wir daraus für die technische Arbeit gewinnen? Ergänzend zum Seminar gibt es eine Vorlesung, in der Hintergrundinformation zu den Themen Neuro- und Kognitionswissenschaften mit Blick auf kognitive Roboter vermittelt werden.",
        "voraussetzungen": "Ausreichende Sprachkenntnisse in Englisch, um sprachlich anspruchsvolle Literatur lesen, sowie verständliche Essays zum Thema verfassen zu können.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3566996&pOrgNr=1",
        "name": "Brain-inspired Computing for AI",
        "kennung": "CIT4310008",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to analyze and evaluate circuits that perform brain-inspired computing to accelerate machine learning applications and learn the necessary concepts of HS/WS codesign for brain-inspired systems. They are capable of designing and creating circuits to perform brain-inspired computing with complex system components as well as develop brain-inspired computing algorithms. They are also capable to analyze the entire systems of brain-inspired computing with the HW/SW interactions.",
        "inhalt": "Circuit design implemented using SPICE to perform brain-inspired computing. Simulation and validation of the circuit functionality. Circuit analysis of the figure of merit of the system like energy, reliability and performance. Algorithm writing in a programming language like Python or C++ for a brain-inspired machine learning. Integrating both HW and SW parts in one system and analyzing it. Project management: Coordination, integration of submodules, verification in system environment",
        "voraussetzungen": "Basic knowledge in circuits;\nGood knowledge in programming;",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=973979&pOrgNr=1",
        "name": "Channel Codes for Iterative Decoding",
        "kennung": "EI7411",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to understand the principles, common techniques and major applications of channel coding. They are thereby able to apply, analyse, evaluate, and create codes for communications.",
        "inhalt": "1. Preliminaries: Communication channels, channel capacity. Summary of binary linear block/convolutional codes, decoding algorithms: MAP, ML. Soft-output decoding of binary convolutional codes and of binary block codes. Factor graphs.\n\n2. Codes for iterative decoding.\nProduct codes.\nTurbo codes: Decoding, decoder analysis via EXIT charts, distance spectrum properties, interleaver design. Turbo code classes (PCCC, SCCC). Turbo codes in standards.\nLow-Density Parity-Check (LDPC) codes: Decoding, decoder analysis via EXIT charts, distance spectrum properties, finite-length code design. LDPC codes in standards.\n\n3. Advanced topics.\nNon-binary LDPC Codes: Decoding / code structures.\nCoded modulation: Principles of bit interleaved coded modulation.\nCoding for erasure channels: LDPC, Luby-Transform and Raptor codes, EXIT analysis on the binary erasure channel. Iterative and inactivation decoding.",
        "voraussetzungen": "Recommendations:\n- Basics of digital communications;\n- Basics of statistics\n\nFollowing should be passed before taking the course:\n- UG level Communications Engineering\n\nIt is recommended to take the following modules additionally:\n- Information Theory",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743548&pOrgNr=1",
        "name": "Channel Coding",
        "kennung": "EI70320",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Lehrveranstaltung sind die Studierenden in der Lage\n• das Ziel der Kanalcodierung zu verstehen und Prinzipien der Kanalcodierung zu demonstrieren,\n• verschiedene Codeklassen zu charakterisieren,\n• die Mathematik endlicher Körper auf lineare Codes anzuwenden,\n• passende Codierungsschema auszuwählen, deren Parameter anzupassen und das Ergebnis zu evaluieren,\n• Decodierungsalgorithmen abzuleiten,\n• Schranken für Codegrößen zu verstehen,\n• für ein gegebenes, bekanntes, Codierungsschema und eine gegebene Anwendung die Korrekturfähigkeit im Vergleich zu den behandelten Schranken und anderen Codeklassen zu beurteilen,\n• nicht in der Vorlesung behandelte Codierungsschemata nach entsprechender Literaturrecherche zu verstehen.",
        "inhalt": "Dieser Kurs befasst sich mit modernen Kanalcodierungsprinzipien. Kein Vorwissen im Bereich Kanalkodierung ist notwendig.\n\n- Applications of Channel Coding\n- Channel Coding Principles:\nChannel Models, Decoding Principles, Hamming Metric\n- Finite Fields:\nGroups, Fields, Prime Fields, Extension Fields, Vector Spaces\n- Linear Block Codes:\nDefinition, Encoding, Coset Decoding, Bounds (Hamming Bound, Singleton Bound, Gilbert- Varshamov Bound), Hamming Codes, Perfect Codes\n- Reed-Solomon Codes:\nMDS Codes, Definition, Key Equation, Unique Decoding, List Decoding\n- BCH Codes:\nMinimal Polynomials, Generator and Parity-Check Polynomial, BCH Bound, Efficient Decoding\n- Convolutional Codes:\nState Diagram, Shift Register, Viterbi Decoding\n- Reed-Muller Codes:\nDefinition, Simplex Code, Plotkin Construction\n- Concatenated Codes:\nBasic Concepts",
        "voraussetzungen": "Mathematische Grundkenntnisse (lineare Algebra)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=809610&pOrgNr=1",
        "name": "Chip Multicore Processors",
        "kennung": "EI7271",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Moduls verfügen die Studierenden über grundlegende Kenntnisse zu Problemen und Lösungsansätzen der Parallelverarbeitung auf Mehrkernprozessoren. Die Studenten sind in der Lage, Prozessorarchitekturen und deren Vor-/Nachteile bewerten zu können.",
        "inhalt": "Motivation für Mehrkernprozessoren, Potential und Probleme paralleler Programmausführung, Kategorisierung von Mehrkern-Prozessoren, Gesetz von Amdahl, Speicherhierarchie und -kohärenz, Synchronisation, On-Chip Verbingungsnetzwerke (NoC), Programmiermodelle",
        "voraussetzungen": "Grundlegende Kenntnisse der Computertechnik. Idealerweise Besuch der 'System-on-Chip Technologies'-Vorlesung.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1744305&pOrgNr=1",
        "name": "Circuit Design for Security",
        "kennung": "EI70520",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Bestehen des Moduls haben Studierende folgende Qualifikationen erlangt:\n- Sie kennen wesentliche Grundelemente Digitaler Schaltungen wie Zustandsautomaten, FIFOs, LFSRs und Multiplizierer und können diese selbstständig implementieren.\n- Sie kennen typische Problemstellungen des Schaltungsentwurfs wie des Clock Domain Crossings, der Wahl von Synchronem und Asynchronem Reset oder der Testbarkeit von Schaltungen und können geeignete Lösungen auswählen.\n- Sie kennen Einsatzszenarien von Multiplizierern und LFSRs im Security-Kontext, verstehen die theoretischen Grundlagen der besprochenen Konzepte und können die Vor- und Nachteile dieser benennen.\n- Sie sind in der Lage Digitalschaltungen in VHDL zu beschreiben und erste Syntheseschritte durchzuführen.",
        "inhalt": "In diesem Modul wird ausgehend von Grundschaltungen die Entwicklung digitaler Schaltungen im Security-Kontext beleuchtet. Dazu werden zunächst die Kenntnisse zur Implementierung von Zustandsautomaten aufgefrischt und erweitert. Die Implementierung wichtiger Bausteine des digitalen Schaltungsentwurfs wie FIFOs und LFSRs wird eingeführt. Unter anderem wird hierbei die Implementierung von Pseudo-Zufallszahlengeneratoren auf Basis von LFSRs und deren Anwendung im Security-Kontext besprochen. Von wesentlicher Bedeutung in vielen kryptographischen Anwendungen ist die Implementierung von Multiplizierern. Hierzu werden im Modul grundsätzliche Implementierungen, aber auch spezielle Varianten zur Modulo-Multiplikation erörtert. Auch werden Konzepte besprochen, um kryptographische Schaltungen geeignet testen zu können; Implementierungsstrategien zur Optimierung von Schaltungen bezüglich Fläche, Leistungsaufnahme, und Performance werden eingeführt.\nNeben der theoretischen Vermittlung der Inhalte in Vorlesungen, wird in Übungen und in einem Praktikum der Praxisbezug verdeutlicht. Dabei lernen die Studierenden auch digitale Schaltungen mit einem kommerziellen Entwurfstool zu implementieren und zu synthetisieren.",
        "voraussetzungen": "Grundlegende VHDL-Kenntnisse\nGrundkenntnisse zur IT-Sicherheit wie sie bspw. in den Vorlesungen Grundlagen der IT-Sicherheit und Angewandte Kryptographie vermittelt werden.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3840009&pOrgNr=1",
        "name": "Circuit Reliability for AI in Advanced Technologies",
        "kennung": "CIT433023",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students know and understand the fundamental concepts of design for reliability for circuits in advanced technology nodes. Students understand how heavy workloads induced by AI applications negatively impact the circuits' reliability. Students obtain a comprehensive knowledge and solid understanding of the underlying key mechanisms which impact reliability circuits and transistors. Students obtain solid knowledge on how technology scaling and advanced technologies impact the circuit reliability. Students learn in detail about the various mechanisms, such as aging effects, temperature effects, soft errors, and self-heating effects which degrade the reliability of transistors in modern chips in sub-10nm technologies. Students master advanced techniques and methods for protecting circuits and on-chip systems against reliability degradations. The module covers how circuit’s reliability can be investigated, modeled, improved, and managed at different abstraction levels starting from transistors to logic gates to complex circuits like processors all the way to the system level. Students learn how novel emerging technologies can help in improving the reliability of circuits in the future.",
        "inhalt": "• Technology Scaling and the Ever-Increasing Challenges in\nTransistor’s and Circuit’s Reliability.\n• Key Reliability Degradation Mechanisms: Impact of Aging Effects, Temperature Effects, Self-heating Effects, and Soft Error Effects on the Reliability of Circuits.\n• Modeling and Investigating Reliability Degradations from Transistors to Complex Circuits.\n• Reliability-Aware Circuit Design.\n• Techniques to Improve the Reliability of Processors and Mitigate Degradation Effects.\n• System-Level Management Techniques to Optimize Reliability in Multi-Core Processors.\n• Impact of Emerging Technologies on the Reliability of Future Chips.",
        "voraussetzungen": "Basic knowledge of computer architecture\nBasic knowledge of digital circuits",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1209309&pOrgNr=1",
        "name": "Circuit Theory and Communications",
        "kennung": "EI7440",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Modulveranstaltung sind die Studierenden in der Lage die schaltungstechnische Mehrtortheorie anzuwenden und damit eine physikalisch konsistente Modellierung von Kommunikationssystemen vorzunehmen. Durch diese Modellierung gewinnen die Studierenden eine tiefere Einsicht in das Verhalten komplexer Mehrantennensysteme und können diese optimieren. Damit können die Studierenden den Anschluss zu den Nachbardisziplinen Informationstheorie und Signalverarbeitung herstellen.",
        "inhalt": "The high level of abstraction makes information theory a versatile and powerful tool for the analysis and optimization of a wide variety of communication systems. On the other hand, information theory has no concept of the flow of energy that accompanies the flow of information. Consequently, some important aspects of communication, like transmit power or noise covariance are by no means straight forward. In this lecture, we introduce effective methods which overcome this inherent limitation of information theory. We deal with this problem from a classic circuit theory point of view. This allows correct assessment of the energy flow in communication systems and thereby enables an information theoretic analysis and optimization which is consistent with the underlying physics of the communication system under investigation. After developing appropriate circuit theoretic channel models, we analyze the performance potential of different kinds of multi-antenna radio communication systems. Besides the study of channel capacity, we also develop interesting insight into receive and transmit antenna gain, super-directivity and super-resolution. A knowledge of circuit- and information theory is helpful but not strictly required, as all necessary methods are introduced during the lecture.",
        "voraussetzungen": "Grundwissen:\n- Lineare Algebra,\n- Elektrische Netzwerke,\n- LTI Systeme\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Schaltungstechnik\n- Adaptive and Array Signal Processing\n- Lineare Signalverarbeitung",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=795516&pOrgNr=1",
        "name": "Clinical Applications of Computational Medicine",
        "kennung": "EI7585",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module the students are able to understand the problems and key success factors for business models in computational medicine/telemedicine with examples in selected medical areas (multiple sclerosis, obstetrics, cardiovascular disease, fall prevention/detection, exercise therapy).\nThey are able to apply basic signal processing techniques to solve specific problems (filtering and analysis of data from mobile accelerometry/ECG). They also should be able to understand the scientific method to conduct exploratory research generating and testing hypothesis, looking at events, collecting data, analyzing information and reporting the results. In addition, it is expected that they improve their written and oral communications skills by the creation of a scientific report and holding a public presentation.",
        "inhalt": "Computational Medicine is a new scientific field in the intersection between mathematics, physics, biostatistics, computer science, electronics, biomedical engineering and medicine. We focus on actual clinical applications of complex, interdisciplinary solutions for problems in healthcare. Using examples from areas mostly from multiple sclerosis, obstetrics, cardiovascular disease, fall prevention/detection and sport medicine we will explore some of the following important aspects: data collection, biostatistical modelling, filtering, pattern recognition, alarms, prediction, validation, development & certification of web-based tools for clinical decision making.",
        "voraussetzungen": "Analysis, classical mechanics, fundamentals in electrical engineering, basics in social psychology, basic knowledge of R/Matlab and statistics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456656&pOrgNr=1",
        "name": "Cloud Computing",
        "kennung": "IN2073",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "The students know the goals of Cloud and Grid computing. They can present application scenarios in different domains. They are familiar with the fundamental techniques in the areas security, application development and resource management. They can identify the differences and similarities between Cloud and Grid computing and istributed systems. They are able to participate in Cloud and Grid-related research projects.",
        "inhalt": "The lecture starts with an introduction and a presentation of the base technologies for Cloud and Grid computing. The layered architecture of Grids and the base services are presented. Cloud Computing is then introduced and the different models SaaS, PaaS, IaaS. The list of base services is extended for Cloud Computing. The lecture also covers a discussion of legal issues.",
        "voraussetzungen": "Knowledge in computer architectures and distributed systems would be helpful.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1447435&pOrgNr=1",
        "name": "Coded Modulation",
        "kennung": "EI74121",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of this course, the student knows how to analyze and design digital communication systems for reliable data transmission at high data rates and understands the key principles that are used in current and future standards.",
        "inhalt": "This course is all about how to use channel coding for reliable data transmission at high rates over discrete-time continuous-valued channels. Covered topics:\n\n- Introduction\no Brief overview of the course, system model, information theory, decision rules, probability of error analysis, channel coding\n- Trellis Coded Modulation (TCM)\no Concept of TCM, design of TCM schemes\n- Multilevel Coding\no Concept, chain rule, error propagation\n- Bit-Interleaved Coded Modulation (BICM)\no Parallel channels, capacity\n- Signal Shaping\no Geometric shaping, probabilistic shaping, ultimate shaping gain\no Probabilistic Amplitude Shaping, ASK capacity, systematic channel code with uniform check symbol assumption, bit-metric decoding",
        "voraussetzungen": "Recommendations:\n- Basics of digital communications\n- Basics of channel coding\n\nIt is recommended to take one the following modules additionally:\n- Information Theory, Channel Coding, Channel Codes for Iterative Decoding",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3539143&pOrgNr=1",
        "name": "Coding for Private Reliable and Efficient Distributed Learning",
        "kennung": "CIT4330015",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of this course, the students are able to:\n- Identify the challenges of modern distributed computing systems and tackle them using coding theory\n- Analyze and assess the privacy and the performance guarantees of coding theoretic methods applied to distributed computing\n- Manipulate the fundamental secret sharing tool and be able to apply it in several applications to private distributed systems\n- Understand the basics of machine learning algorithms\n- Implement through programming languages algorithms explained in a research paper, produce their own observations and analyze their findings\n- Prepare and present a poster (or a paper) within the standards of international conferences/workshop",
        "inhalt": "This course covers the coding-theoretic tools behind speeding up distributed computing. In addition, data privacy being of crucial importance, this course includes a deep understanding of the main tool behind information-theoretic privacy: secret sharing. Several applications of secret sharing and coding theoretic tools in modern distributed systems and distributed machine learning are then explained together with the impact brought by applying those tools.\n\nMore precisely, the course covers the following topics\n- Coding to ensure information-theoretic privacy through secret sharing.\n- Communication efficient secret sharing: a modification of secret sharing to better suit modern distributed systems\n- Basic probability theory such as ordered statistics used to analyze the performance of different techniques used in coding for distributed systems\n- Coding for private and fast distributed matrix multiplication, based on secret sharing schemes. Several state-of-the-art techniques will be explained in detail and their performance will be analyzed\n- Basics of machine learning algorithms: gradient descent, stochastic gradient descent, linear and logistic regression\n- Fast distributed gradient descent with and without coding theory",
        "voraussetzungen": "Basic knowledge of mathematics, e.g., linear algebra, calculus and probability theory\nBasic knowledge of a programming language, e.g., MATLAB or python\nThe course \"Channel Coding\" is recommended",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2716352&pOrgNr=1",
        "name": "Coding Theory for Storage and Networks",
        "kennung": "EI71087",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage\n- aktuelle Anwendungsbereiche der Codierungstheorie zu nennen,\n- für die in der Vorlesung behandelten Anwendungen ein passendes Codierungsschema auszuwählen, die Parameter anzupassen, es zu evaluieren und in Software zu implementieren.\n- für ein gegebenes bekanntes Codierschema und eine gegebene Anwendung die Korrekturfähigkeit und Grenzen zu beurteilen, auch im Vergleich zu klassischen fehlerkorrigierenden Codes.\n- nicht in der Vorlesung behandelte Codierschemata nach entsprechender Literaturrecherche zu verstehen.",
        "inhalt": "- Decodierung von Reed-Solomon Codes über die halbe Mindestdistanz: Listendecodierung, Power-Decodierung.\n- Interleaved Reed-Solomon Codes und Algorithmen zur Burst-Fehler-Korrektur.\n- Network Coding: Rang-Metrik Codes, Untervektorraum Codes, Anwendung zur Fehlerkorrektur in Netzwerken.\n- Codierung für Flash Speichermedien: Write-Once-Memory Codes, Codierung von defekten Speicherzellen.\n- Codierung für verteilte Datenspeicher: Locally Repairable Codes, Regenerating Codes.\n- Codes zur Korrektur von Insertions und Deletions.",
        "voraussetzungen": "- Mathematische Grundkenntnisse (vor allem lineare Algebra).\n- Für das Praktikum: Grundkenntnisse in MATLAB oder einer anderen Programmiersprache.\n- Der vorherige Besuch der Vorlesung \"Channel Coding\" ist empfohlen, aber nicht notwendig.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=487482&pOrgNr=1",
        "name": "Cognitive Systems",
        "kennung": "IN2222",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Absolvieren des Moduls verstehen die Studierenden wesentliche Prinzipien der menschlichen Kognition und die Möglichkeiten der Übertragung dieser Fähigkeiten auf technische Systeme. Sie sind in der Lage, mathematische und algorithmische Methoden zum Erreichen kognitiver Eigenschaften in technischen Systemen, insbesondere im Bereich der Robotik, anzuwenden. Dazu gehören Architekturen für kognitive Systeme, Wissensrepräsentation und Schlussfolgern, Umgang mit unsicherem Wissen, Perzeption, Planung, Handlungsausführung.",
        "inhalt": "Grundbegriffe (Perzeption - Kognition - Handlung), Maschinelle Umsetzung von Fertigkeiten (Sensoren, Algorithmen, Programmierung von Verhaltensmustern), Beispiele für ausgeführte Systeme anhand von Systemen, die an TUM vorhanden sind.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4433138&pOrgNr=1",
        "name": "Coherent Optics for Communication, Security and Sensing",
        "kennung": "CIT433043",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Moduls haben die Studierenden einen fundierten Einblick gewonnen, wie elektro-optische Komponenten und digitale Signalverarbeitungstechniken in optischen Fasersystemen eingesetzt werden, um folgende Anwendungsfälle zu realisieren:\ni) Übertragung großer Datenmengen über lange Strecken;\nii) eine quantensichere Verteilung von Chiffrierschlüsseln (QKD: quantum key distribution);\niii) hochauflösendes Sensing über optische Fasern (coherent optical time-domain reflectometry).\nDie Studierenden werden in der Lage sein, die zugrunde liegenden Prinzipien der kohärenten Optik und der digitalen Signalverarbeitung (DSP: digital signal processing) zu analysieren und zu bewerten, sowie ausgewählte angewandte DSP-Methoden in Python zu implementieren. Mit ihrem fundierten Verständnis des Themas können die Studierenden faserbasierte Kommunikations-, Sicherheits- und Sensoriksysteme, die auf den Prinzipien der kohärenten Optik basieren, auf Systemsicht analysieren und bewerten.",
        "inhalt": "Überblick über die zentralen Bausteine kohärenter optischer Systeme (Laser, Modulator, optische Faser, Photodiode, kohärenter optischer Empfänger, DAC und ADC, digitale Signalverarbeitung)\nÜberblick über Verzerrungen in faserbasierten optischen Systemen (Taktverzerrungen, Laser-Phasenrauschen, chromatische Dispersion, Polarisationsmodendispersion)\nDigitale Signalverarbeitungsmethoden zur Kompensation dieser Verzerrungen (Taktrückgewinnung, Schätzungen von Trägerphase und Frequenzversatz, adaptive Entzerrung, etc.)\nAnwendung dieser Methoden auf Datenkommunikation, QKD-Systeme und verteilte Fasersensoren.",
        "voraussetzungen": "Kenntnisse über digitale Kommunikationssysteme (Signale und Systeme, Zeit- und Frequenzbereich, Abtasttheorem)\nGrundkenntnisse über elektro-optische Komponenten und optische Faserübertragung\nDie Vorlesung „Optische Kommunikationssysteme“ von Prof. Hanik ist vorteilhaft\nErfahrung mit Python ist vorteilhaft.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1237001&pOrgNr=1",
        "name": "Communication Acoustics",
        "kennung": "EI71004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Grundlegendes Wissen und Verständnisses der behandelten Gebiete aus den Grundlagen der Akustik, der Schallausbreitung, Audiotechnik, Schallproduktion, Sprachverarbeitung, Psychoakustik, Kommunikationsakustik. Fähigkeit zur individuellen Problemlösung kommunikationsakustischer Fragen.",
        "inhalt": "1. Grundlagen der Akustik (Müller, Vorländer) 1.1 Schallfeldgrößen, Wellengleichung\n1.2 Ebene Wellen, Kugelwellen\n1.3 Energie, Intensität, Decibel\n1.4 Schallquellen: Stimme / musikalische Instrumente / Rauschen\n1.5 Schallreflektion, Absorption, Beugung\n1.6 Statistische Raumakustik, Hall\n\n2. Grundlagen von Signalen und Systemen (Ahrens)\n2.1 Komplexe Zahlen, harmonische Signale\n2.2 Fourierreihe, Fourier Transformation, Zeit- und Frequenzdomäne (DFT, FFT)\n2.3 LTI Systeme, Impulsantworten und Übertragungsfunktionen\n2.4 Digitale Filter\n2.5 Kurze Einführung in nichtlineare Systeme\n\n3. Anatomie und Physiologie des Hörsystems(Fels)\n3.1 Periphäres Hörsystem\n3.2 Physikalische binaural Merkmale und binaurales Hören\n3.3 Grundlagen der Binauraltechnologie\n3.4 Wiedergabe binauraler Aufnahmen\n\n4. Psychoakustik (Seeber)\n4.1 Ruhehörschwelle\n4.2 Auditorische Maskierung\n4.3 Frequenzselektivität des Hörsystems und Frequenzgruppen\n4.4 Lautheit von Schallen\n4.5 Tönhöhe, Ausgeprägtheit der Tonhöhe, Klang\n4.6 Schärfe\n4.7 Schwankungsstärke und Rauigkeit\n4.8 Binaural Entmaskierung beim Sprachverstehen\n4.9 Psychophysikalische Methoden\n\n5. Elektroakustik (Altinsoy)\n5.1 Einführung in elektroakustische Systeme und Übertragung\n5.2 Elektromechanische und elektroakustische Analogien\n5.3 Amplitudenfrequenzgang, harmonische Verzerrungen, Intermodulationsverzerrung, Rauschpegel und Signal-Rauschabstand\n5.4 Übertragerprinzipien\n5.5 Mikrophone\n5.6 Lautsprecher\n5.7 Kopfhörer und Ohrhörer\n\n6. Sprachakustik (Möller)\n6.1 Anatomie des menschlichen Sprechapparats\n6.2 Periodische und aperiodische Erregung\n6.3 Klangformung\n6.4 Eigenschaften des Sprachsignals\n6.5 Sprachschalle\n6.6 Modelle der Sprachproduktion\n6.7 Analyse von Sprachsignalen\n6.8 Sprachverständlichkeit\n\n7. Schallaufnahme und -wiedergabe (Weinzierl)\n7.1 Stereophone Wiedergabe\n7.2 Wiedergabeformate: Von 1.0 zu 24.1.10\n7.3 Aufnahmeverfahren\n7.4 Kanalorientiere vs. Objektorientierte räumliche Audiokodierung\n\n8. Virtuelle Akustik I: Binauraltechnologie (Weinzierl)\n8.1 Das Konzept binauraler Aufnahme und Wiedergabe\n8.2 Aufnahme- und Wiedergabegeräte\n8.3 Dynamische Binauralsynthese und Resynthese\n8.4 Qualität virtueller akustischer Umgebungen\n\n9. Virtuelle Akustik II: Schallfeldanalyse und -synthese (Ahrens)\nRäumliche Reproduktion: Lautsprecher Arrays\nRäumliche Aufnahme: Mikrofonarrays, Beamforming\n\n10. Anwendungen der Raumakustik 1 (Müller)\nGeometrische Akustik, Impulsantworten, Wahrnehmung (ISO 3382 Parameter),\nBeispiele von Auftrittsräumen und Klassenzimmern\n\n11. Anwendungen der Raumakustik 2 (Vorländer)\n11.1 Raumimpulsantwort und Spiegelquellenmodell\n11.2 Ray Tracing Modell\n11.3 Wellenmodelle, hybride geometrische und Wellenmodelle\n11.4 Eingangsdaten: Quellen und Randbedingungen\n11.5 Auralisation und Virtuelle Akustik\n11.6 3D Audio-Schnittstellen\n\n12. Anwendungen der Automatischen Spracherkennung (Möller)\nGrundlagen der Spracherkennung, Architektur eines Spracherkenners, Featureextraktion, Hidden Markov Modelle, Sprachmodelle\n\n13. Anwendungen der Sprachsynthese (Möller)\nHistorische Ansätze, Struktur eines Sprachsynthesizers, symbolische Vorverarbeitung, Generierung von Prosodie, Signalgenerierung\n\n14. Anwendungen der Psychoakustik in der Produktentwicklung (Altinsoy)\n\n15. Sound Design von Produkten (Altinsoy)\n\n16. Perzeptive Audiokodierung (Ahrens) (mp3)",
        "voraussetzungen": "Mathematische Grundlagen (komplexe Rechnung); Grundlagen der Signaldarstellung hilfreich (werden im Kurs wiederholt)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1083240&pOrgNr=1",
        "name": "Communication Network Reliability",
        "kennung": "EI7644",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon succesful completion of the module students gained an understanding of network reliability, and learn how to model and analyze connection availability and network reliability. Students also understand different protection and restoration techniques.",
        "inhalt": "Introduction to network realiability and main concepts and parameters. Mathematical models (including failure and repair models). Basic span- and path- restoration techniques. Logical network desgn. Operational aspects of real-time restoration and self-organizing pre-planning agains failures. Restoration in IP networks. Techniques for mesh-restorable networks. p-Cycles. Dual-failure restorability and availability in mesh networks.",
        "voraussetzungen": "The knowledge of following modules are recommended:\n- Broadband Communication Networks",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3384222&pOrgNr=1",
        "name": "Communication Networks Modeling and Optimization",
        "kennung": "CIT4330006",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, students are able to understand and apply analytical tools that can be used in modeling the network operation (both wireless and wireline) and its optimization. They are able to formulate optimization problems in different solvers.",
        "inhalt": "Introduction to probability and stochastic processes. Discrete-time Markov chains. Continuous-time Markov chains. Introduction to queueing theory. M/G/1 queues. Special queues. Queueing networks. Real-world examples. Math for the Internet architecture. Statistical multiplexing and packet buffering. Scheduling. Network optimization problems. Power optimization application.",
        "voraussetzungen": "The knowledge of following modules are recommended:\n- Data Networking",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452532&pOrgNr=1",
        "name": "Communications Lab",
        "kennung": "EI5032",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dieser Veranstaltung sind die Studierenden in der Lage, die theoretischen Grundlagen aus den Modulen „Nachrichtentechnik“ und „Nachrichtentechnik 2“ praktisch mittels Computersimulationen anzuwenden. So können sie Kommunikationssysteme hinsichtlich von Leistungsindikatoren charakterisieren und vergleichen.",
        "inhalt": "Die folgenden Komponenten eines Kommunikationssystems werden untersucht:\n- Quellenkodierung (Huffman)\n- Kanalkodierung (Wiederholungscode)\n- Digitale Modulationsverfahren (ASK, PSK, QAM, DPSK)\n- Digitale Signaldarstellung (Abtasttheorem)\n- Digitale Basisbandübertragung (Pulsformung, Signaldetektion)\n- Bandpasssignalübertragung\n- Entzerrung von Kanälen mit Intersymbolinterferenz (Zero Forcing Entzerrer, Wiener Filter)",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits absolviert worden sein:\n- Nachrichtentechnik\n- Stochastische Signale\n- Signaltheorie\n\nEs wird empfohlen begleitend an folgenden Modulen teilzunehmen:\n- Nachrichtentechnik 2",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1010788&pOrgNr=1",
        "name": "Compressive Sampling",
        "kennung": "EI7638",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende der Veranstaltung ist der Student mit den Grundlagen der Parameterschätzung mittels \"Compressive Sampling\" vertraut. Er kann u.a. auch die behandelten Algorithmen in der Entwicklung bzw. im Entwurf von Signalverarbeitungs- und Schätzverfahren einsetzen.",
        "inhalt": "Ziel der Vorlesung ist es, die Teilnehmer an \"\"Compressive Sampling\"\" heranzuführen - ein Forschungsgebiet, welches sich insbesondere in den letzten Jahren rasant entwickelt und etabliert hat. Hierbei liegt die Annahme zugrunde, dass aus einer großen Gesamtheit an Parametern letztlich nur eine deutlich geringere - aber unbekannte - Teilmenge die Signale wirklich bestimmen wird. Diese sparse Parametrisierung der Signale ermöglicht es alternative Messverfahren und Algorithmen zu verwenden, welche\nentscheidend weniger Messungen benötigen als klassische Abtastverfahren (Sampling). Neben einer grundsätzlichen Einführung in diese Theorie werden weitergehende Zusammenhänge zu Gebieten der Geometrie und Approximation vermittelt.",
        "voraussetzungen": "Lineare Algebra, Mathematisches Interesse, Systemtheorie, Signalbeschreibung im Zeit- und Frequenzbereich.\nFolgende Module sollten bereits erfolgreich absolviert worden sein: Analysis 1-3, Signale, System",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1369742&pOrgNr=1",
        "name": "Computational Haptics Laboratory",
        "kennung": "EI72071",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able understand the fundamental properties of computational haptics. They are able to design and implement haptic communication and computing approaches. They are able to optimize the schemes towards coding efficiency, computational complexity and memory requirements. Additionally, students are able to judge the performance of different approaches and to understand and evaluate the involved trade-offs. Students additionally know how to read and present scientific papers in the area of computer haptics and haptic communication.",
        "inhalt": "Visual and auditory information are predominant in modern multimedia systems. In contrast, processing and in particular efficient communication of haptic data have not been a field of intense research so far. This is surprising given the fact that we as humans rely heavily on the haptic modality to interact with our environment. With recent advances in Virtual Reality (VR), Man-Machine Interaction, Telerobotics, Telepresence, and Teleaction, however, the topic of haptic communication and computation is rapidly gaining in relevance and is becoming an enabling technology for many novel fields of application. The laboratory provides the participants with a detailed overview of the theoretical background and the implementation of haptic communication and computing approaches.",
        "voraussetzungen": "Digital Signal Processing; Communication Networks, Internet Communication\n\nThe following modules should be passed before taking the course:\n-\n\nIt is recommended to take the following modules additionally:\n-",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3393112&pOrgNr=1",
        "name": "Computational Intelligence",
        "kennung": "CIT1330000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind Studierende in der Lage, moderne Methoden der Computational Intelligence allgemein anzuwenden sowie Anwendungsfälle speziell im Bereich der Steuerungs- und Regelungstechnik zu analysieren.",
        "inhalt": "Einführung in Theorie und Anwendung Neuronaler Netze (Single-Layer Neuronale Netze, Multilayer Neuronale Netze und Backpropagation, Radial-Basis Function Netze, Rekurrente Neuronale Netze)\n\nFuzzy- und Neuro-Fuzzy-Verarbeitungstechniken (Grundlagen der Fuzzy Set Theorie, Fuzzy Relations und Fuzzy Logic Inference, T-S fuzzy)\n\nEvolutionsverfahren und genetische Algorithmen zur Optimierung (Evolutionsbasiertes Rechnen, Evolutionsbasierte Optimierung, Evolutionsbasiertes Lernen und Problemlösung)",
        "voraussetzungen": "Programmierkenntnisse in \"Matlab\"",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1120549&pOrgNr=1",
        "name": "Computational Neuroscience: Eine Ringvorlesung von Modellen bis zu Anwendungen",
        "kennung": "EI7646",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Diese interdisziplinäre Ringvorlesung wird von Experten der TUM und LMU in den Neurowissenschaften gehalten und bietet eine Einführung in die Computational Neuroscience. Nach der Teilnahme an diesem Kurs sind die Studenten mit den Grundlagen der Neuroanatomie und -physiologie und den neuronalen Prozessen in verschiedenen sensorischen Systemen (auditorisch, visuell) vertraut. Studenten kennen die grundlegenden Ansätze für die Modellierung des neuronalen Verhaltens von einzelnen Zellen wie auch Zellverbünden und sie wissen, wie Daten zur Parametrisierung derartiger Modelle in Experimenten gewonnen werden können. Weiterhin haben die Studenten verstanden, wie derartige Modelle für die Entwicklung technischer Anwendungen, wie Neuroprothesen, genutzt werden können.",
        "inhalt": "Allgemeiner Überblick: Anatomische und physiologische Grundlagen der Neurowissenschaften:\n- Grundlagen der Neurowissenschaften, Evolution, Modellsysteme, grundlegende Funktionen (sensorisches Organ → ZNS → Motorantwort), Anatomie (Wirbeltier/Mensch), genereller Aufbau des auditorischen und visuellen Systems und der wichtigsten Verarbeitungsstufen\n- neuronale Informationsübertragung: Grundlagen Ruhe- und Aktionspotenzial, synaptische Übertragung, neuronale Morphologie, Verarbeitung im Dendriten, kleine Netzwerke etc., in vitro electrophysiology (+ imaging)\n\nModellierung: Neuronale Dynamik und Kodierung\n- Modellierung einzelner Neurone (klassische computational neuroscience, spiking models, current models, firing rate models)\n- Neuronenpopulationen; (Sparse) coding, Theorie neuronaler Netzwerke, assoziatives Lernen (Hebbian, STDP), reinforcement learning, supervised vs. unsupervised learning\n- Grundlagen der neuronalen Signalverarbeitung und Modellierung; neurale Kodierung/Dekodierung; Korrelationen, reverse correlations, rezeptive Felder; Informationstheorie\n\nIntegration im Nervensystem\n- Lernen und Gedächtnis: Hippocampal formation, episodic memory and space representation\n\nEngineering für Neurowissenschaften und Neuroprothesen\n- Messung neuraler Aktivität in vivo, Mehrkanal-Electrophysiologie, Datenaufnahme, -analyse und -interpretation\n- Cell-chip interface, network patterning on chip, on-chip neuroscience\n- Machine learning and information retrieval in hochdimensionalen Daten\n- Cochlea Implantate: Elektrische Stimulation des Hörnerven, phenomenologische und biophysikalische Modelle, Aufbau und Stimulationsalgorithmen\n- Retina Implantate und Deep Brain Stimulation\n- Hauptprobleme bei Neuroimplantaten",
        "voraussetzungen": "Grundlagenwissen in Biologie und Mathematik empfohlen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1386210&pOrgNr=1",
        "name": "Computer Architecture and Networks",
        "kennung": "IN2189",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students understand what is inside a computer and how it works. They know the most important components inside a microprocessor (e.g. pipeline, functional units, vector units, caches and their structures, memory controller), and are able to analyze the interaction with the various components in the system. They are able to characterize the various levels of parallelism (instruction level parallelism, data parallelism across vector units, shared memory level parallelism inside a compute node, distributed memory parallelism across multiple nodes connected via networks), and capture how it can be exploited in code.",
        "inhalt": "- Foundations: Binary numbers.\n- Components of a computer system.\n- Microprocessors.\n- Multi- and Manycore Processors.\n- High Performance Computers.\n- High Speed Interconnects.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743475&pOrgNr=1",
        "name": "Computer Vision",
        "kennung": "EI70110",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls können die Studierenden elementare Algorithmen aus der 3D Computer Vision erklären, implementieren und selbstständig auf neue Probleme übertragen. Sie sind fähig, Fragestellungen der Computer Vision als Berechnungsprobleme der linearen Algebra auszudrücken, diese numerisch zu lösen und elementare Computer Vision Verfahren in Matlab zu implementieren und zu bewerten. Die Studierenden haben praktische Erfahrung in teamorientierter Problemlösung und teambasierter Software Entwicklung.",
        "inhalt": "Videoanalyse, Bildsynthese, Darstellung von Bildern, Bildgradient, Harris Ecken und Kantendetektor, trifokaler Tensor, Schätzalgorithmen, numerische Methoden der linearen Algebra, Bildrektifizierung, Bewegung steifer Körper, Essenzielle Matrix und Fundamentalmatrix, Epipolargeometrie, 8-Punkt-Algorithmus, 3D-Rekonstruktion, planare Epipolargleichung, 4-Punkt-Algorithmus, Mehrkamerasysteme, Koordinatentransformationen, robuste Parameterschätzung (RanSaC), maschinelles Lernen.",
        "voraussetzungen": "Grundkenntnisse in linearer Algebra, Signalverarbeitung und Matlab-Programmierung",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=672363&pOrgNr=1",
        "name": "Computer Vision I: Variational Methods",
        "kennung": "IN2246",
        "organisation": "Department Computer Engineering",
        "anmerkung": "seit WS15/16 neuer Titel und 8 ECTS",
        "lernergebnisse": "Upon successful completion of the module the participants understand the basic concepts of variational methods on a fundamental, scientific and practical level.\nThey are able to efficiently solve variational problems and to implement the solution with Matlab.",
        "inhalt": "Variational Methods are among the most classical techniques for optimization of cost functions in higher dimension.\nMany challenges in Computer Vision and in other domains of research can be formulated as variational methods.\nExemples include denoising, deblurring, image segmentation, tracking, optical flow estimation, depth estimation from stereo images or 3D reconstruction from multiple views.\nIn this class, the basic concepts of variational methods will be introduced :\n- The Euler-Lagrange calculus and partial differential equations\n- Formulation of computer vision and image analysis challenges as variational problems\n- Efficient solution of variational problems\n- Discussion of convex formulations and convex relaxations to compute optimal or near-optimal solutions in the variational setting\nThe key concepts will be implemented in Matlab to provide hands-on experience.",
        "voraussetzungen": "MA0901 Linear Algebra for Informatics\nMA0902 Analysis for Informatics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=608655&pOrgNr=1",
        "name": "Computer Vision II: Multiple View Geometry",
        "kennung": "IN2228",
        "organisation": "Department Computer Engineering",
        "anmerkung": "seit WS15/16 neuer Titel",
        "lernergebnisse": "Upon successful completion of the module, students understand the mathematics of image formation and are able to recover camera motion and 3D geometry from images. Moreover, the students are able to implement the basic concepts in Matlab.",
        "inhalt": "The module is focused on the mathematical aspects of multiple view geometry. The central challenge addressed in this class is the reconstruction of 3D geometry and camera motion from multiple images. To this end, the students will get a brief review of the main concepts of linear algebra (including matrix rank, SVD, various matrix groups). Students will learn about camera motion and perspective projection, camera calibration, epipolar geometry, the epipolar constraint, the 8-point algorithm, multiview matrices, rank constraints, bundle adjustment. Finally they will learn about the reconstruction of dense geometry. The key concepts will be implemented in Matlab to provide hands-on experience.",
        "voraussetzungen": "MA0901 Linear Algebra for Informatics\nMA0902 Analysis for Informatics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1733754&pOrgNr=1",
        "name": "Computer Vision III: Detection, Segmentation, and Tracking",
        "kennung": "IN2375",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Beendigung dieses Moduls werden die Studierenden ein Verständnis der theoretischen Konzepte hinter Objektdetektierung, Segmentierung und Tracking erlangt haben. Sie werden dabei reale Problem mithilfe von Deep Learning Modellen zu lösen.",
        "inhalt": "- Proposal-based object detection (Faster-RCNN)\n- One-stage detectors (YOLO, SSD, RetinaNet)\n- Point-based detection\n- Instance segmentation (Mask-RCNN)\n- Semantic segmentation\n- Panoptic segmentation\n- Video object segmentation (OSVOS)\n- Visual object tracking\n- Multiple object tracking\n- Graph neural networks for object tracking\n- 3D object tracking\n- Trajectory prediction",
        "voraussetzungen": "IN2346 Introduction to Deep Learning\nMA0902 Analysis für Informatiker\nMA0901 Lineare Algebra für Informatiker\n\nKenntnisse in Python und Pytorch sind Voraussetzung für die praktischen Projekte.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1447436&pOrgNr=1",
        "name": "Computertechnik für Nicht-Ingenieure",
        "kennung": "EI10005",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls kennen die Studierenden den grundlegenden Aufbau von Computersystemen. Die Studierenden kennen verschiedene Daten- und Befehlsformate, verstehen den Aufbau von Prozessoren bis zur Gatterebene und können einfache Teilkomponenten oder vergleichbare Schaltungen selbst entwerfen/analysieren. Die Studierenden können Computerprogramme auf Assembler- und Hochsprachen-Ebene verstehen, eigene Assembler- und Hochsprachenprogramme schreiben und dabei auch typischerweise zur Verfügung stehende Hilfsmittel gezielt einsetzen.",
        "inhalt": "Informationsdarstellung in Computersystemen, Mikro-Architektur, Befehlssatz-Architektur, Daten- und Befehlsformate, Programmierung auf Assembler- und Hochsprachen-Ebene.",
        "voraussetzungen": "Keine Voraussetzungen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1017183&pOrgNr=1",
        "name": "Computertechnik für Nicht-Ingenieure",
        "kennung": "EI2294",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen können die Studierenden einfache Prinzipien von Computersystemen skizzieren. Die Studierenden kennen einfache Datenformate sowie den prinzipiellen Aufbau von Befehlsformaten, verstehen Grundzüge des Aufbaus von Prozessoren bis zur Gatterebene und können einfache Teilkomponenten oder vergleichbare Schaltungen wiedergeben. Die Studierenden können Computerprogramme auf Assembler- und Hochsprachen-Ebene verstehen und einfache Assembler- und Hochsprachenprogramme schreiben und dabei auch typischerweise zur Verfügung stehende Hilfsmittel gezielt einsetzen.\nDabei verstehen die Studierenden Grundzüge der Interaktion zwischen Anwender-Programmen und Betriebssystem sowie die grundlegenden Aufgaben des Betriebssystems.",
        "inhalt": "Aufbau von Computersystemen, Mikro-Architektur, Befehlssatz-Architektur, Daten- und Befehlsformate, Programmierung auf Assembler- und\nHochsprachen-Ebene, Interaktion von Computer-Programmen mit dem Betriebssystem, Aufgaben des Betriebssystems",
        "voraussetzungen": "Keine Voraussetzungen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458031&pOrgNr=1",
        "name": "Computertechnik und Programmieren",
        "kennung": "EI00110",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls kennen die Studierenden den grundlegenden Aufbau von Computersystemen. Die Studierenden kennen verschiedene Daten- und Befehlsformate, verstehen den Aufbau von Prozessoren bis zur Gatterebene und können einfache Teilkomponenten oder vergleichbare Schaltungen selbst entwerfen/analysieren. Die Studierenden können Computerprogramme auf Assembler- und Hochsprachen-Ebene verstehen, eigene Assembler- und Hochsprachenprogramme schreiben und dabei auch typischerweise zur Verfügung stehende Hilfsmittel gezielt einsetzen.",
        "inhalt": "Informationsdarstellung in Computersystemen, Mikro-Architektur, Befehlssatz-Architektur, Daten- und Befehlsformate, Programmierung auf Assembler- und Hochsprachen-Ebene, Interaktion von Computer-Programmen mit dem Betriebssystem",
        "voraussetzungen": "Keine Voraussetzungen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1150616&pOrgNr=1",
        "name": "Connected Mobility Basics",
        "kennung": "IN2324",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, students will remember the basic elements that constitute connected mobile systems and understand the (technical) issues relevant to mobile system and service design and their evaluation. They recognize challenges arising from mobility and mobile networking. They understand the requirements for and the limitations of simulation-based evaluation of mobile services. They have an overview of the different components and techniques at their disposal to realize mobile services. They understand the principles of these underlying methods, know their advantages and disadvantages and can apply methods of design, modeling, and evaluation to simple example cases.",
        "inhalt": "The module IN2324 offers a broad introduction, including the following topics:\n- Introduction to mobile systems\n- Mobile systems by example\n- Mobility: models and simulations\n- Wireless networking technologies\n- Architectures and protocols for mobile networks\n- Architectures for mobile services and systems\n- Mobile measurements\n- Security and privacy",
        "voraussetzungen": "Recommended requirements are basics in computer networks and distributed systems (IN0010 or equivalent knowledge) as well as command of the Java programming language.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3825039&pOrgNr=1",
        "name": "Contact-Rich Robotics; an Optimization Perspective",
        "kennung": "CIT433020",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students will have learned how to efficiently model robotic systems and simulate their motion with contact. Also, they are able to use state-of-the-art available software and advanced model-based and data-driven techniques to control robots in contact with the environment.",
        "inhalt": "Chapter 1: Introduction to robot kinematics and dynamics\nRigid-body motions\nForward and inverse kinematics\nDynamics modeling\n\nChapter 2: Introduction to Optimization\nNonlinear optimization\nNewton-type optimization algorithms\nCalculating derivatives\nNumerical simulation\n\nChapter 3: Modeling contact\nFrictional contact\nCompliant models\nRigid models\nRelaxed models\n\nChapter4: Control of robots with contact\nDynamic programming\nOptimal control\nReinforcement learning\nAdvanced control methods for contact-rich systems",
        "voraussetzungen": "The course is fully self-contained. However, knowledge of robotics and optimization will be helpful in grasping the concepts explained in the course. The exercises and final project will require programming in Python.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3436129&pOrgNr=1",
        "name": "Control for Robotics: from Optimal Control to Reinforcement Learning",
        "kennung": "CIT4330014",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the course, students are able to:\n- derive optimal controller equations for mobile robots,\n- implement optimal controllers in practice and analyse their properties,\n- understand state-of-the-art approaches to learning-based control and reinforcement learning,\n- design learning-based controllers to cope with non-idealities such as model errors.",
        "inhalt": "Course Summary: This course presents optimal control, learning-based control, and reinforcement learning principles from the perspective of robotics applications. The course covers the foundations of optimal control and derives practical control algorithms that leverage first-principle robot models as well as data collected from the robot system. Real-world challenges such as disturbances, state estimation errors and model errors are addressed, and adaptive and reinforcement learning approaches are derived to address these challenges.\n\nCourse Topics: Topics covered in the course include:\n- Foundations of Optimal Control: Dynamic Programming, Bellman Equation, Value Iteration and Policy Iteration, Pontryagin’s Minimum Principle, Iterative Optimal Control Algorithms\n- Foundations of Model Predictive Control (MPC): Stability and Feasibility, Robust MPC, Practical MPC Considerations\n- Model Learning from Data: Deterministic Approaches such as Linear Regression and Neural Networks, Probabilistic Approaches such as Bayesian Linear Regression and Gaussian Processes\n- Combining Learned Models and Robust Control: Gaussian Process Model Predictive Control\n- Introduction to Reinforcement Learning: Markov Decision Processes, State Value Function, Action Value Function, Model-Based Reinforcement Learning\n- Model-Free Reinforcement Learning: Monte Carlo, Q Learning, Experience Replay\n- Current Research Directions: Deep Reinforcement Learning, Offline Reinforcement Learning, Safe Learning for Robotics",
        "voraussetzungen": "Motivation and interest in robot learning and control, as well as knowledge in dynamic systems, control theory (including state-space approaches), calculus, probability theory, linear algebra, and programming (Matlab and Python).\nAdditional knowledge and courses on the following topics will be beneficial: basics of optimization, mobile robotics, machine learning, optimal control.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1408213&pOrgNr=1",
        "name": "Convex Optimization",
        "kennung": "EI74351",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successfully passing the module, the students are able to characterize given mathematical optimization problems in terms of convex analysis on convex sets and convex functions and to derive optimality conditions related to F. John (FJ) and W. Karush, H. W. Kuhn and A. W. Tucker (KKT) for equality and inequality constraints, including the discussion of qualification constraints. Furthermore, the students are able to derive and to apply the weak and strong duality theorem and the saddle point theorem for the analysis and the appropriate reformulation of given optimization problems into prior and dual optimization problems and their related primal reconstruction algorithms. The student will be able to derive and apply gradient and subgradient based optimization methods and to take into account respective algorithms for a step size control. The students are also able to derive and apply the cutting plane method to reformulate convex optimization problems into a series of linear master problems. Finally, the students are able to derive and to apply a variety of state-of-the art algorithms, namely the simplex algorithm for linear programs, the gradient descent and the Newton algorithms for convex optimization problems, the Armijo-Goldstein rule for step-size control, and a few basis versions of interior point solvers.",
        "inhalt": "Introduction: basic definitions and fundamentals, problem statement.\nConvex analysis: convex sets, convex functions.\nLinear programming: extremal points and directions, simplex algorithm.\nOptimality conditions: Fritz John conditions, Karush-Kuhn-Tucker conditions, constraint qualifications.\nLagrangian duality: duality theorems.\nAlgorithms: general concept, unconstrained optimization, constrained optimization.\nSolutions for the dual problem: sub gradient method, cutting plane algorithm.\nInterior-point method: barrier functions, IP algorithm.\nApplications: problems form multi-user information theory, resource allocation, parameter optimization in layered and distributed communication systems.",
        "voraussetzungen": "Linear Algebra and Calculus.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1441514&pOrgNr=1",
        "name": "Convex Optimization Laboratory",
        "kennung": "EI72561",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successfully passing the module, the students are able to conduct a mathematical modeling of typical optimization problems in the field of information and communication technology by means of a mathematical optimization perspective, and to implement algorithms for the numerical solution of these optimization problems. The students are able to reformulate given optimization problems into prior and dual optimization problems and their related primal reconstruction algorithms. The student will be able to implement gradient and subgradient based optimization methods and to implement respective algorithms for a step size control. The students are also able to apply and to implement the cutting plane method to reformulate convex optimization problems into a series of linear master problems. Finally, the students are able to implement a variety of state-of-the art algorithms, namely the simplex algorithm for linear programs, the gradient descent and the Newton algorithms for convex optimization problems, the Armijo-Goldstein rule for step-size control, and a few basis versions of interior point solvers. The students are further able to apply state-of-the-art general purpose solvers for convex optimization problems.",
        "inhalt": "This laboratory provides insights and practical instructions for designing algorithms in the field of systems engineering (examples and application scenarios are mainly from information and communication technology) based on mathematical optimization theory by a series of successive teaching and hands-on units. Each unit includes the understanding and analysis of a typical problem of the addressed application scenarios, its mathematical modeling, and the design and implementation of an adequate solution. Designed algorithms from a previous unit of the laboratory are supposed to be reused.",
        "voraussetzungen": "Working knowledge about convex optimization theory and algorithms as presented in the Convex Optimization course. Working knowledge in fundamentals of technical systems in information and communication technology. Working knowledge in the programing language MATLAB.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1264715&pOrgNr=1",
        "name": "Current Trends in IT Security",
        "kennung": "IN2341",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul, sind die Studierenden in der Lage Grundkonzepte und Techniken der Angreifer und Verteidiger zu verstehen und zu analysieren.",
        "inhalt": "Im Zeitalter des Internets zeigt sich IT Security als ein wichtiger Bestandteil der Informatik. IT Security bezieht sich auf das Implementieren von Systemen und Hilfsmittel, die es ermöglichen sensible Informationen zu schützen. Auf Grund der Tatsache, dass ständig neue Angriffe auf moderne Systeme entstehen, muss sich auch die IT Security weiterentwickeln, um Angriffen mit entsprechenden Verteidigungsstrategien trotzen zu können. Aus diesem Grund beinhaltet die Vorlesung die folgenden Themen:\n-- Network security\n-- Web security\n-- Privacy\n-- Malware\n-- Underground economy\n-- Internet of Things (IoT) security",
        "voraussetzungen": "IN0009 Grundlagen: Betriebssysteme und Systemsoftware",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1707765&pOrgNr=1",
        "name": "Cybathlon Challenge: Mechanism Design & Control",
        "kennung": "EI78043",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden bilden Kompetenzen in Abhängigkeit der von ihnen gewählten Themenschwerpunkte. Im Bereich der mechanischen Konstruktion sind die Studierenden nach erfolgreichem Abschluss in der Lage, mechatronische Baugruppen unter Verwendung des Softwareprogramms SolidWorks zu entwerfen. Im Bereich Modellierung & Regelungstechnik sind die Studierenden nach erfolgreichem Abschluss in der Lage, die Komponenten für statische und dynamische Belastungsfälle auszulegen, als auch P-/PI-/PID-Regler in MATLAB / Simulink mit einer sequentiellen Benutzersteuerung zu implementieren. Außerdem können die Studierenden Sensoren und Aktoren unter Verwendung eines Mikrocontrollers auslesen und ansteuern. Ebenfalls werden Kompetenzen in dem Bereich des elektronischen Schaltungsentwurfs erworben und der Umgang mit dem PCB Design Programm Eagle erlernt. Studierende sind nach erfolgreichem Abschluss in der Lage, das Projekt zielgerichtet im Team zu planen, zu koordinieren und durchzuführen.",
        "inhalt": "Dieses Labor konzentriertsich auf die Entwicklung von grundlegenden mechatronischen Modulen einer transradialen Prothese. Die Teilnehmer lernen, wie man Hard- und Software-Prototyping von Grund auf durchführt. Darüber hinaus erwerben sie Kenntnisse in der mechanische Auslegung, CAD-Modellierung, sowie Komponentensteuerung-/regelung mit Positionsreglern. Außerdem wird die Integration von Sensoren und Aktoren in eine moderne HIL-Softwareumgebung behandelt und benötigte elektronische Schaltungen geplant und realisiert. Des Weiteren wird die präzise Präsentation von wissenschaftlichen Ergebnissen gelehrt und mit den Studierenden geübt.",
        "voraussetzungen": "Die Studierenden sollen über fundierte Kenntnisse in mindestens einem der folgenden Bereiche verfügen:\n- Konstruktion (CAD)\n- Grundlagen von Kinematik, Statik und Dynamik\n- Grundlagen der Regelungstechnik\n- Programmierung (C,C++)\n- Mikrocontroller-Programmierung\n- PCB Design",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1707763&pOrgNr=1",
        "name": "Cybathlon Challenge: Task Control & User Experiments",
        "kennung": "EI78041",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden bilden Kompetenzen in Abhängigkeit der von ihnen gewählten Themenschwerpunkte. Im Bereich Perzeption können die Studierenden, Objekterkennungsalgorithmen unter Verwendung der Softwarebibliotheken OpenCV, Caffe oder PCL entwickeln und EMG Signale via Support Vector Maschinen oder neuronalen Netzwerken klassifizieren. Im Bereich Reglungstechnik & Modellierung sind die Studierenden nach erfolgreichem Abschluss in der Lage, mechatronische Prothesensysteme in MATLAB / Simulink basierend auf dem Newton-Euler und Langrange Verfahren kinematisch und dynamisch zu modellieren, sowie erweiterte modellbasierte Regelungsmethoden wie beispielsweise eine Impedanzregelung zu entwerfen und zu implementieren. Des Weiteren ist eine intuitive Benutzersteuerung (task control) zu programmieren, die auf der natürlichen, koordinierten Bewegungskontrolle des Menschen basiert. Die Studierenden erlernen die Integration von mechatronischen Komponenten zu einem funktionierenden Prothesensystem. Außerdem sind die Studierenden nach erfolgreichem Abschluss in der Lage, zielgerichtet im Team zu planen und ein Ingenieursprojekt kooperativ durchzuführen.",
        "inhalt": "Dieses Labor konzentriert sich auf die Entwicklung einer leichten, tragbaren und intelligenten Prothese für die oberen Extremitäten, deren mechatronischen Basismodule im vorherigen Cybathlon Kurs entwickelt wurden. Es werden erweiterte modellbasierte und KI-gestützen Steuerungs- und Regelungsansätze thematisiert. Darüber hinaus werden neuartige User Task Control Methoden entwickelt, sowie Trainingseinheiten mit einem menschlichen Benutzer geplant und durchgeführt. Die Resultate werden am Prototyp sowohl unter Laborbedingungen als auch in Feldtests validiert.",
        "voraussetzungen": "Die Teilnahme an der Cybathlon Challenge: Fundamental mechanism design and lowlevel control wird empfohlen, ist aber nicht notwendig für die Teilnahme an diesem weiterführenden Laborkurs. Die Studierenden sollten über fundierte Kenntnisse in mindestens einem der folgenden Bereiche verfügen:\n- Grundlegende Kenntnisse in Bildverarbeitung\n- Modellbasierte Verfahren der Regelungstechnik\n- Robotik und Mehrkörpersysteme\n- Konstruktion (CAD)\n- Embedded systems\n- Programmierung (C,C++)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977331&pOrgNr=1",
        "name": "Cyber-Physical Systems",
        "kennung": "IN2305",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "In vielen modernen Systemen sind berechnende Elemente eng mit physischen Objekten verknüpft, für die sich die Bezeichnung \"Cyber-Physische Systeme\" in den letzten Jahren durchgesetzt hat. Beispiele sind selbstfahrende Fahrzeuge, Chirurgieroboter, Smart Grids und kollaborative Mensch-Roboter Produktionsanlagen. Nach dem Besuch der Vorlesung sind Studierende in der Lage Cyber-Physische Systeme auf einem Niveau zu modellieren, zu analysieren und zu regeln, so dass Sie sich im Selbststudium Spezialwissen aneignen können.\n\nNach erfolgreichem Abschluss des Moduls sind Studierende in der Lage Cyber-Physische Systeme zu modellieren und haben ein tiefes Verständnis vom Zusammenspiel zwischen kontinuierlicher Dynamik, die sich aus dem physikalischen Verhalten ergibt (z.B. mechanische Systeme), und der diskreten Dynamik, die sich aus den berechnenden Elementen ergibt (z.B. diskrete Steuerungen), was zu sogenannten hybriden Dynamiken führt. Studierende erlangen das Basiswissen zum Entwurf, zur Analyse und zur Regelung von Cyber-Physischen Systemen. Sie können die wesentlichen Informationen der dynamischen Aspekte von Cyber-Physischen Systemen extrahieren, sind in der Lage mit Experten über diese zu diskutieren und können selbständig Lösungen entwickeln, die die geforderten Spezifikationen erfüllen.",
        "inhalt": "Kontinuierliche Dynamik: Modellierung, gewöhnliche Differentialgleichungen, Systemeigenschaften, Lösungen linearer Differentialgleichungen, Simulation von Differentialgleichungen, Stabilitätsanalyse, Einführung in die Regelung von kontinuierlichen Systemen;\n\nDiskrete Dynamik: Modellierung (Moore/Mealy Automat, Petri Netze, Statecharts), Lösungen, temporale Logik, Einführung in Model Checking, systematischer Steuerungsentwurf;\n\nHybride Dynamik: Modellierung (gezeitete Automaten, hybride Automaten, hybride Statecharts), Simulation hybrider Dynamiken, Stabilitätsanalyse, Einführung in die Erreichbarkeitsanalyse, Supervisory Control;\n\nNetzwerke von Cyber-Physical Systems; typische Hardware (Sensoren, Aktuatoren, Rechner)",
        "voraussetzungen": "Keine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1744302&pOrgNr=1",
        "name": "Data Networking",
        "kennung": "EI70330",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss dieses Moduls können die Studierenden\n• verschiedene Medium Access Control (MAC) Protokolle für drahtlose paketbasierte Kommunikationsnetze mit in der Vorlesung vorgestellten Methoden analysieren,\n• verschiedene Retransmission-Schemata/-Prozeduren für drahtlose paketbasierte Kommunikationsnetze mit in der Vorlesung vorgestellten Methoden analysieren,\n• verschiedene Medium Access Control (MAC)-Protokolle für drahtgebundene paketbasierte Kommunikationsnetze mit in der Vorlesung vorgestellten Methoden analysieren,\n• die grundlegenden Designprinzipien von mobilen zellularen Kommunikationsnetzen (Generationen 2G bis 5G) erläutern,\n• verschiedene Ressourcenmanagementverfahren (Scheduling-Protokolle) anwenden, die in LTE (4G) und 5G Mobilfunkkommunikationssystemen verwendet werden,\n• die Grundprinzipien der Protokolle der Schicht 2 (Sicherungsschicht) und der Schicht 3 (Vermittlungsschicht) des Internet-Protokollstapels erläutern und\n• Methoden für den Entwurf und die Einrichtung von softwaredefinierten Netzen (SDN) anwenden.",
        "inhalt": "Inhalt der Vorlesung Data Networking sind verschiedene Medienzugriffsverfahren (Medium Access Control (MAC)) und das Resourcenmanagement für drahtlose und drahtgebundene Netze und deren Leistungsbewertung. Im Detail werden folgende\nInhalte behandelt:\n• MAC-Verfahren für drahtlose konkurrenzbasierte Netzwerke (z. B. WLAN);\n• MAC-Verfahren für drahtgebundene konkurrenzbasierte Netzwerke (z. B. Ethernet);\n• Leistungsbewertung der MAC-Verfahren basierend u.a. auf Queueing Theory;\n• Ressourcenaufteilung (z.B. Polling) in drahtgebundenen Netzen;\n• Ressourcenmanagement in zellularen Netzen: OFDMA, Scheduling Algorithmen, Prinzipien zellularer Netze, weitere Netzwerkprotokolle (z.B. LTE, 5G);\n• Packet Switching und Routing;\n• Software Defined Networking (SDN).",
        "voraussetzungen": "Grundlagen der Kommunikationsnetze und deren Analyse:\n- Paket-basierte Netze\n- Protokolle für die Datenkommunikation inkl. TCP/IP\n- Methoden für dieLeistungsbewertung von Kommunikationsnetzen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1187756&pOrgNr=1",
        "name": "Data-Driven Innovation",
        "kennung": "EI7480",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the course, students have developed a basic understanding of and practical skills in developing and implementing data-driven innovations. They are able to investigate and discover user / customer needs and align those to identified data opportunities. The students are familiar with the necessary data processing steps along the data value chain. In addition, they have acquired skills to scope data-driven business models as well as to position new offerings in the associated ecosystem/network.",
        "inhalt": "The course Data-Driven Innovation focuses on acquiring practical skills for developing data-driven innovation.\n\nThe main objective of the course is to develop a basic understanding for and practical skills in implementing data-driven innovations. Students will be able to investigate and discover user / customer needs and align those to identified data opportunities. The students will be familiar with the necessary data processing steps along the data value chain. In addition, they have acquired skills to scope data-driven business models as well as to position new offerings in the associated ecosystem/network.\n\nWe will discuss and work with methods that allow us\n• to understand the nature and characteristics of data driven innovation\n• to investigate and explore user needs of a particular customer segment\n• to systematically acquire and manage data sources\n• to explore the data value chain covering the range of necessary data processing steps\n• for developing insights in data analytics models\n• to get practical insights for generating business models\n• to understand the dynamics and impact of the associated ecosystems\n\nAll methods are presented along the phases underlying the development of data-driven innovations. The content of the course is focusing on conceptual steps for implementing data-driven innovations. The content is built on top of practical data analysis skills and their associated theoretical foundations. The necessary prerequisites will be covered by courses delivered by Prof. Diepold and Prof. Kleinsteuber.",
        "voraussetzungen": "The lecture is based on basic knowledge in\n- machine learning\n- statistics\n- R or Matlab\n- programming skills, e.g.python",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1095636&pOrgNr=1",
        "name": "Datenschutz",
        "kennung": "IN9044",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmende besitzen die notwendigen methodischen und überfachlichen Fertigkeiten, um selbständig wissenschaftliche Seminararbeiten zu anspruchsvolleren Themen im Bereich des Datenschutzes anzufertigen, zu präsentieren und zu diskutieren. Sie können mit wissenschaftlicher Literatur arbeiten (recherchieren, kategorisieren, priorisieren, zitieren). Sie beherrschen die erforderlichen Präsentations- und Diskussionstechniken.\nNach erfolgreichem Absolvieren des Moduls sind Studierende mithin in der Lage, die relevanten datenschutzrechtlichen Aspekte in ihre zukünftige berufliche Praxis zu integrieren. Damit sind sie in der Lage, die Rechte Betroffener gesetzeskonform zu schützen. Neben dem Schutz fremder Daten sind sie ebenfalls in der Lage, bewusst und selbstbestimmt mit den eigenen Daten umzugehen. Sie sind in der Lage, neue Trends der IT kritisch in Bezug auf den Datenschutz zu hinterfragen und als zukünftige Trendsetter der IT Wettbewerbsvorteile durch Berücksichtigung datenschutzrechtlicher Aspekte zu erzielen.",
        "inhalt": "- Entwicklung des Datenschutzes\n- Prinzipien und Grundlagen des Datenschutzes\n- Der Datenschutzbeauftragte in Unternehmen und Behörden\n- Datenschutz in der EU\n- Kontrolle des Datenschutzes\n- Selbstdatenschutz\n- Datenschutz und IT-Sicherheit: Gemeinsamkeiten und Konflikte\n- Datenschutz in der beruflichen Praxis eines IT-lers\n- Datenschutzrechtliche Aspekte beim Cloud-Computing\n- Datenschutz bei Scoring-Agenturen & Adresshändler\n- Datenschutz im Gesundheitswesen\n- Datenschutz in der Forschung\n- Aktuelle Datenschutzskandale",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=973761&pOrgNr=1",
        "name": "Datenübertragung mit Rückkopplung",
        "kennung": "EI7630",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul kennen die Studierenden die wichtigsten Modelle und Konzepte der Rückkopplung in der Informationstheorie aus. Und können die wichstigsten Verfahren beurteilen und abschätzen.\nDie Studierenden haben ein Verständnis für kooperative Techniken in drahtlosen Mehrnutzersystemen entwickelt, sie sind in der Lage einen aktuellen wissenschaftlichen Beitrag zu verstehen und zu analysieren, und sie können dazu einen wissenschaftlichen Vortrag halten.",
        "inhalt": "Die passive Rückkopplung gilt als Standard in Kommunikationssystemen. Hierbei existiert ein Rückkanal vom Empfänger zum Sender. Über diesen Kanal erhält der Sender Auskunft über das empfangende Bit. In dieser Veranstaltung nehmen wir an, dass der Kanal passiv ist, das heißt, dass der Empfänger die Rückkopplung nicht beeinflussen kann. Wir betrachten das kombinatorische Modell (fehler-korrigierende Codes) und das probabilistische Modell (diskrete gedächtnislose Kanäle). Shannon hat gezeigt, dass passive störungsfreie Rückkopplung die Kapazität des diskreten gedächtnislosen Kanals nicht vergrößert. Ahlswede zeigte jedoch, dass es einfachere Codes gibt um die Kapazität zu erreichen. Bei robusten Informationsübertragungen vergrößert Rückkopplung die Kapazität. Berlekamp hat gezeigt, dass die Kapazitätsfehlerfunktion für fehlerkorrigierende Blockcodes mit Rückkopplung immer größer ist als ohne Rückkopplung. Wir haben gezeigt, dass dies auch für nicht-binäre Codes gilt. Bei der Analyse des Problems stellt sich heraus, dass man gleichzeitig eine Lösung zu dem Ulam-Millionenspiel erhält. In dieser Veranstaltung werden beide Modelle vorgestellt und analysiert. Es werden gleichzeitig offene interessante Probleme vorgestellt.",
        "voraussetzungen": "Voraussetzungen:\n- Grundlagen der Nachrichtentechnik und Informationstheorie\n- Grundlagen der Wahrscheinlichkeitstheorie\n- Mathematisches Interesse\n\nEs wird empfohlen folgende Module zuvor abgelegt zu haben:\n- Nachrichtentechnik\n- Information Theory\n- Höhere Mathematik",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3397185&pOrgNr=1",
        "name": "Design Automation and Simulation for Microfluidic Devices",
        "kennung": "CIT4330013",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students will have detailed expertise of microfluidics and can design and simulate corresponding devices. More precisely, they will\n* be able to evaluate the potential of microfluidics and the applications it can be used for,\n* be able to analyze the different platforms that are available to realize certain applications,\n* be able to apply design steps, design methods, and design tools to realize a microfluidic device,\n* be able to apply simulation methods and simulation tools to evaluate the resulting device, as well as\n* understand the remaining steps that would be needed to eventually fabricate that device.",
        "inhalt": "The domain of microfluidics is a multi-disciplinary field which deals with the precise control and manipulation of fluids at the micro-scale. Corresponding devices, often also known as \"Lab-on-a-Chip\" (LoC), are used to realize experiments or operations in domains such as medicine, (bio-)chemistry, biology, pharmacology, etc. The main idea is to realize assays, which are originally conducted in bulky and expensive laboratories, on a minimized, integrated, and automated single device. Prominent (although simple) examples include the pregnancy test or the Covid-19 test; but much more elaborated devices exist.\n\nHowever, the design and layout of microfluidic devices is not trivial: Channels must be properly dimensioned and connected, the used samples and chemicals must be injected into the chip at the right pressure, and mixing, heating, or incubation processes must be initiated at the right time. This requires dedicated expertise on a huge number of parameters and, eventually, design automation and simulation methods. This module provides\n* an overview of the various applications which are suited for microfluidic devices,\n* an overview of the different biochip platforms that are available to realize those applications,\n* a detailed introduction into design automation for microfluidic devices,\n* a detailed introduction into simulation methods for microfluidic devices, as well as\n* an overview of fabrication procedures for microfluidic devices.\nOverall, after the lecture, students have a complete understanding of how to realize a microfluidic application from the initial idea to a prototypical implementation.",
        "voraussetzungen": "Basic knowledge in programming (e.g., in Python, C++, etc.)\nBasic knowledge in the use of design tools such as compilers, debuggers, etc.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4075922&pOrgNr=1",
        "name": "Design of Digital Circuits",
        "kennung": "CIT433033",
        "organisation": "Department Computer Engineering",
        "anmerkung": "Modul für Masterstudiengang Microelectronics and Chip Design",
        "lernergebnisse": "Nach erfolgreichem Bestehen des Moduls haben Studierende folgende Qualifikationen erlangt:\n- Sie verstehen Ursachen für Verlustleistung in digitalen Schaltungen sowie Techniken um Verlustleistungen zu reduzieren und können diese bei der Konzeptionierung von Digitalschaltungen anwenden.\n- Sie verstehen die unterschiede zwischen synchronen und asynchronen Implementierungen digitaler Schaltungen und können das Zeitverhalten von digitalen Schaltungen ermitteln und Methoden zur Synchornisierung zwischen Clock-Domänen anwenden.\n- Sie verstehen den Aufbau verschiedener Speichertechnologien und können dieses Wissen anwenden um bei der Entwicklung von Schaltungen eine geeignete Wahl zu treffen.\n- Sie kennen Prinzipien der Fehlertolreanz und können diese bewerten.\n- Sie kennen wesentliche Grundbausteine Digitaler Schaltungen wie Zustandsautomaten, FIFOs und Multiplizierer, verstehen aktuelle Konzepte zu deren Implementierung und können bewerten in welchen Szenarien ein bestimmtes Konzepte geeignet sind.\n- Sie kennen die Schritte des Entwurfsablaufs und verstehen die Zusammenhänge zwischen einer Beschreibung in einer Hardwarebeschreibungssprache und der daraus resultierenden Schaltung.",
        "inhalt": "In diesem Modul werden wesentliche Konzepte erläutert, die im aktuellen Digitaldesign für integrierte Schaltungen zum Einsatz kommen. Hierzu werden ausgehend von grundlegenden physikalischen Zusammenhängen die Eigenschaften von Digitalschaltung bezüglich Leistungsaufnahme und Zeitverhalten erarbeitet und Designmethoden für diesen Bereich besprochen. Aufbauend auf bekannten Grundschaltungen werden aktuelle Konzepte zur Implementierung typischer Bausteine von Digitalschaltungen besprochen und deren Implementierungsvarianten diskutiert. Dabei wird auch der Bezug zwischen der Beschreibung dieser Konzepte in einer Hardwarebeschreibungssprache und der Umsetzung in einer integrierten Schaltung besprochen, wobei auch die verschiedenen Schritte des Entwurfsablaufs betrachtet werden.\nNeben der theoretischen Vermittlung der Inhalte in Vorlesungen, wird mit Übungen und Hausaufgaben der Praxisbezug verdeutlicht.",
        "voraussetzungen": "Basiswissen bezüglich der Funktionsweise von Transistoren und Boolescher Algebra auf Bachelorniveau wird vorausgesetzt.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=559109&pOrgNr=1",
        "name": "Deutsch für das Informatikstudium: Wissenschaftliche Texte verstehen und schreiben",
        "kennung": "IN9037",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Erreicht werden soll, dass die ausländischen Studierenden mehr Sicherheit im Umgang mit fachsprachlichen Texten erreichen, dass sie ein Forum vorfinden, wo sie ihre Lesekompetenz und ihren schriftlichen Ausdruck verbessern können und vor allem ihre mündliche Ausdrucksfähigkeit trainieren.\nZiel sollte eine weitgehende Annäherung an ein C2-Niveau sein, d.h. die Fähigkeit, mühelos die Fachtexte in den Studienfächern Wirtschaftsinformatik/ Informatik zu verstehen und die Leistungen in den Klausuren zu verbessern.",
        "inhalt": "Wortschatz\nEinüben von relevantem Fachwortschatz, Fremdwörter-Training, Terminologien/ Ableitungen (Verbalisierungen/Nominalisierungen), Nomen-Verbverbindungen (FVG) Wortbildung im Deutschen, besonders Komposita\n\nStrukturübungen\nSyntax-Übungen, Verbstellung in komplexen Satzstrukturen, Verkürzen und Erweitern von Sätzen\nZusammenfassungen/Überschriften/Stichwörter (Nominalisierungen) bzw. Erklärungen/ Beschreibungen/mündliche Wiedergabe von Informationen mit Hilfe von Verbalisierungen\n\nkonkretes Üben Klausuren und Vorlesungsfolien schnell lesen -- verstehen -- bearbeiten\nLesetechniken vorstellen, vergleichen, evaluieren, testen\nTraining anhand alter Klausuren\n\nThemen nach Bedarf der Studierenden\nTermine, um offene Fragen zu beantworten, Möglichkeit, auf besondere Bedürfnisse der einzelnen Teilnehmer einzugehen.",
        "voraussetzungen": "Die Teilnehmer haben Deutsch nicht als Muttersprache sondern mussten zur Immatrikulation einen Sprachtest nachweisen (DSH 2 oder TestDaF 4).",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3839786&pOrgNr=1",
        "name": "Digital Changemaker Course",
        "kennung": "CIT431012",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the Digital Changemaker courses, students are able to apply innovation methodologies in a project team. Moreover, they are capable of coping with the challenges of working in interdisciplinary project teams. They are able to create and give presentations and gain experience in working on extensive real-world problems.\nSpecific learning outcomes for the course are as follows. Students are able to:\n1. apply trend research methodology.\n2. identify problems that can be solved through digital technologies.\n3. evaluate technical and digital solution approaches from a multidisciplinary\nperspective, including assessing technological feasibility, economic benefits, and\nsocietal sustainability.\n4. develop a digitization concept and assess its ethical implications.\n5. plan, execute, and document expert and user research.\n6. apply the Design Thinking methodology to a digitization challenge.\n7. use story-telling tools to captivate an audience and present an idea.\n8. organize themselves in a team, communicate openly, and address problems in\nteamwork.",
        "inhalt": "The students will join an interdisciplinary team and get matched with a real-world problem to work on. Each team of four to five students will collaborate with an existing company which is primarily an SME or NGO to develop a viable digitization concept for a company's internal process that includes an analysis of the ethical impact of the proposed concept.\nWithin the 12 weeks, the students will receive input about the tools and methodologies they need to develop a digitization strategy as well as the impact assessment.\nThe Digital Changemaker Course has 3 phases:\n● The Problem Immersion Phase fosters a comprehensive understanding of the trends\nthat will significantly impact the industry of the project partner in the coming years. This means that the students grasp the potential opportunities and risks arising from digitization. Building upon this, the objective of the Problem Immersion Phase is to shed light on the specific challenges faced by the project partner and to develop initial approaches for addressing them through digital technologies.\n● The Research Phase forms the foundation of the program. The objective of this phase is for the students to identify the existing technological, economic, and societal trends within the industry of their project partner for the next five years. Through this process, a shared understanding of the opportunities and risks of digitalization will be fostered among all participants. Furthermore, they will be introduced to concepts of project management and team communication.\n● The starting point of the Ideation Phase for the students is a prioritized list of project-partner-specific problems that can be addressed through digital technologies. The goal of this phase is for each team to develop a tailored solution concept for one of the problems, aligned with the project partner. In order to achieve this, different digital technologies should be compared and evaluated in terms of technological feasibility, as well as their economic and societal impacts.",
        "voraussetzungen": "-",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743489&pOrgNr=1",
        "name": "Digital Signal Processing",
        "kennung": "EI70220",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to understand and apply advanced theoretical concepts of digital signal processing. The students also gain a deep understanding on how to apply these concepts to selected media content. Students will learn the differences between one-dimensional and multi-dimensional DSP. Students will learn to move back and forth from spatial to frequency domain. Students will understand what representation of digital signals is most suitable for manipulation and resolution adaptation. Students will learn how to solve problems in DSP both analytically and by using Matlab",
        "inhalt": "Differences and similarities between one-dimensional and multidimensional DSP, two-dimensional signals and systems, sampling of spatio-temporal signals, two- and multi-dimensional filters, linear block transforms, filterbank transforms, lifting implementation, geometric wavelets, inverse problems for multi-dimensional signals, selected applications of DSP in media processing",
        "voraussetzungen": "Linear algebra, signals and systems, stochastic signals\n\nThe following modules should be passed before taking the course:\n- EI00330 Signaltheorie\n- EI00340 Stochastische Signale\nSome programming experience in Matlab is highly recommended. For participants with no or very little Matlab experience, significant additional effort at the beginning of the semester will be required.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=556403&pOrgNr=1",
        "name": "Digitale Schaltungen für Ingenieure (MSE)",
        "kennung": "EI4282",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Veranstaltungen ist der Studierende in der Lage, grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, eine optimierte Realisierung endlicher Automaten anhand des Entwurfsprinzips Pipelining anzuwenden und technische wie wirtschaftliche Implikationen bei der Auswahl von IC Hardware-Plattformen zu bewerten. Ferner erwirbt der Studierende ein Grundverständnis der Funktionsweise von MOS-Transistoren und CMOS Schaltungen.",
        "inhalt": "Zahlensysteme, Binärsystem, Moore'sches Gesetz der Halbleiterintegration, grundlegendes MOSFET Funktionsverhalten, Boole'sche Logik, sequentielle Logik (endliche Automaten, synchrone Schaltungen, Pipelining), Grundlagen der CMOS Verlustleistung und Performanz (Schaltgeschwindigkeit)",
        "voraussetzungen": "",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458029&pOrgNr=1",
        "name": "Digitaltechnik",
        "kennung": "EI00120",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, ihr Zusammenspiel zu analysieren, Funktionalität zu bewerten und einfache Blöcke selbst zu entwickeln. Leistungsoptimierte Realisierungen mehrstufiger kombinatorischer Logikblöcke sowie von endlichen Automaten (FSMs) können anhand der Entwurfsprinzipien Fließband- und Parallelverarbeitung hergeleitet, bewertet und entwickelt werden.Ferner erwerben die Studierenden ein Grundverständnis der Funktionsweise von MOS-Transistoren und deren Anwendung in CMOS Schaltungen.",
        "inhalt": "Grundlagen digitaler Informationsdarstellung, Verarbeitung und Speicherung: Basismodell für funktionales Verhalten von MOSFET Transistoren, Stromgleichungen, Verzögerungszeit und dynamischer Verlustleistung. Schaltungstechnische Realisierung von arithmetischen Rechenoperationen (Addition, Subtraktion, Multiplikation) sowie die Synthese von zwei- und mehrstufigen kombinatorischen Verknüpfungen (Konjunktion, Disjunktion, Negation) und sequentiellen Schaltwerken aus elementaren Basiskomponenten (Logikgatter, Register, MOSFET Transistoren). Logikoptimierung von kombinatorischen Schaltnetzen. Techniken zur Verbesserung des Informationsdurchsatzes getakteter, sequentieller Schaltwerke mittels Fließband- und Parallelverarbeitung. Rolle und Aufbau endlicher Automaten (Finite State Machines) als Steuer- bzw. Kontrolleinheiten vielfältiger praktischer Anwendungen. Grundlagen des methodischen Tests von Schaltungen: Fehlerdiagnose, Herleitung von Fehlerüberdeckungstabellen, Testbestimmung in kombinatorischen Schaltnetzen und sequentiellen Schaltwerken.\n\nNeben diesen funktionalen Aspekten digitaler Schaltungstechnik werden auch die Ursachen und Grenzen der Leistungsfähigkeit, des Zeitverhaltens, des Energiebedarfs sowie der wirtschaftlichen Aspekte digitaler CMOS (Complementary Metal Oxide Semiconductor) Technologien im Kontext von Kommunikations- und Informationstechnologie (IKT) vermittelt.",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=958520&pOrgNr=1",
        "name": "Digitaltechnik für Lehramt",
        "kennung": "EI4232",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, zu analysieren, zu bewerten und auch selbst zu entwickeln. Leistungsoptimierte Realisierungen mehrstufiger kombinatorischer Logikblöcke sowie von endlichen Automaten (FSMs) können anhand der Entwurfsprinzipien Fließband- und Parallelverarbeitung hergeleitet, bewertet und entwickelt werden.Ferner erwerben die Studierenden ein Grundverständnis der Funktionsweise von MOS-Transistoren und deren Anwendung in CMOS Schaltungen.",
        "inhalt": "Grundlagen digitaler Informationsdarstellung, Verarbeitung und Speicherung: Zahlendarstellung und Rechenoperationen im binären Zahlensystem. Basismodell für funktionales Verhalten von MOSFET Transistoren, Stromgleichungen, Verzögerungszeit und dynamischer Verlustleistung. Schaltungstechnische Realisierung von arithmetischen Rechenoperationen (Addition, Subtraktion, Multiplikation) sowie die Synthese von zwei- und mehrstufigen kombinatorischen Verknüpfungen (Konjunktion, Disjunktion, Negation) und sequentiellen Schaltwerken aus elementaren Basiskomponenten (Logikgatter, Register, MOSFET Transistoren). Logikoptimierung von kombinatorischen Schaltnetzen. Techniken zur Verbesserung des Informationsdurchsatzes getakteter, sequentieller Schaltwerke mittels Fließband- und Parallelverarbeitung. Rolle und Aufbau endlicher Automaten (Finite State Machines) als Steuer- bzw. Kontrolleinheiten vielfältiger praktischer Anwendungen. Grundlagen des methodischen Tests von Schaltungen: Fehlerdiagnose, Herleitung von Fehlerüberdeckungstabellen, Testbestimmung in kombinatorischen Schaltnetzen und sequentiellen Schaltwerken.\n\nNeben diesen funktionalen Aspekten digitaler Schaltungstechnik werden auch die Ursachen und Grenzen der Leistungsfähigkeit, des Zeitverhaltens, des Energiebedarfs sowie der wirtschaftlichen Aspekte digitaler CMOS (Complementary Metal Oxide Semiconductor) Technologien im Kontext von Kommunikations- und Informationstechnologie (IKT) vermittelt.",
        "voraussetzungen": "Für Studierende des EDU Studiengangs ist das Eigenstudium von Teilen des Skripts \"Schaltungstechnik 1\" zur Abdeckung der Grundlagen elektrischer Schaltnetze und elementarer Gesetzte der Elektrotechnik dringend empfohlen.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=557070&pOrgNr=1",
        "name": "Eingebettete Vernetzte Systeme",
        "kennung": "IN8014",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage die speziellen Anforderungen von Echtzeitsystemen zu analysieren. Die Studierenden können aus einer Vielzahl von Lösungen für die relevanten Aspekte der Echtzeitsysteme (Modellierungskonzepte, Schedulingalgorithmen, Betriebssysteme, Programmiersprachen, etc.) die passenden Lösungen auszuwählen und umsetzen. Sie verstehen die typischen Probleme der nebenläufigen Programmierung und kennen die verschiedenen Mechanismen zur Problemlösung.",
        "inhalt": "Die Vorlesung behandelt die speziellen Methoden, Lösungen und Probleme aus dem Bereich der Echtzeitsysteme. Der Inhalt umfasst die Motivation und Ausarbeitung der Unterschiede zu Nicht-Echtzeitsystemen, Modellierung von Echtzeitsystemen, Nebenläufigkeit, Scheduling, spezielle Betriebssysteme und Programmiersprachen, Uhren, echtzeitfähige Kommunikation, sowie eine Einführung in fehlertolerante Systeme.",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1463874&pOrgNr=1",
        "name": "Diskrete Mathematik für Ingenieure",
        "kennung": "EI00460",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls mit den Grundlagen diskreter Mathematik und deren Anwendungen in der Elektro- und Informationstechnik vertraut. Sie kennen wesentliche Konzepte, um anspruchsvolle technische Aufgabenstellungen formal zu modellieren und damit einer automatisierten Lösung zugänglich zu machen. Sie verstehen die Grundlagen diskreter Strukturen und sowohl Zusammenhänge als auch Unterschiede verschiedener solcher Strukturen.\nDie erworbenen Kompetenzen bereiten insbesondere auf die Vertiefungsrichtungen „Computer Engineering“ und „Entwurf integrierter Systeme“ vor. Auch für die Vertiefungsrichtungen „Hochfrequenztechnik“ (bei bevorzugtem Interesse an Digitaltechnik / Softwaretechnik / Informationstechnik) sowie „Medizinische Elektronik / Life Science Electronics“ (bei bevorzugtem Interesse an digitalen Themen wie Telemedizin) sind sie gut geeignet. Konkrete Module, welche die Inhalte dieser Vorlesung aufgreifen, sind z.B. EI 0608 „Digitale Schaltungen“, EI 0690 „Entwurf digitaler System mit VHDL u. SystemC“, EI04007/8 „Real-Time and Embedded Systems 1/2“, EI04002 „Grundlagen der IT-Sicherheit“, EI 04003 „Angewandte Kryptologie“. Auch für Module im Master-Studiengang EI ist diese Veranstaltung gut geeignet, z.B. EI 7323 „Electronic Design Automation“, EI 7381 „Synthesis of Digital Systems“, EI7340 „HW/SW-Codesign“, EI 70002 „Modeling and Verification of Embedded Systems“.",
        "inhalt": "Aussagenlogik:\n- Aussageformen, Beschreibungsmöglichkeiten, Erfüllbarkeitsmenge, aussagenlogische Gesetze\n- Resolutionsgesetze, Resolventenmethode\n- aussagenlogisches Schließen\n- binäre Entscheidungsnetze, Operationen auf binären Entscheidungsnetzen\n\nPrädikatenlogik:\nprädikative Aussageformen, prädikatenlogische Gesetze\n\nMengen:\n- Beschreibungsformen, Mengenbeziehungen\n- Boolesche Algebra der Teilmengen, Operationen auf Wortmengen\n- Entsprechungen zwischen Aussagen- und Prädikatenlogik sowie Mengen, zwischen Boolescher- und Mengenalgebra\n\nRelationen und Graphen:\n- Grundlagen; Operationen auf Relationen\n- Eigenschaften von Relationen, Darstellungsformen (u.a. Matrizendarstellung)\n- Hüllen von Relationen, Ordnungsrelationen, Äquivalenzrelationen\n- binäre Graphen (u.a. Erreichbarkeit, Pfade, Bäume)\n- evtl. Graphen auf Algorithmen (z.B. längste Pfade)\n\" Extrema\n\nEndliche Automaten:\n- Beschreibung mit Relationen\n- Optimierung von Endlichen Automaten\n\nAlgebraische Strukturen:\n- Ringe: Grundlagen, Eigenschaften, Substrukturen, Homomorphismus und Isomorphismus; Modulare Arithmetik\n- Gruppen: Grundlagen, Eigenschaften, Homomorphismus und Isomorphismus, Cosets\n\nKomplexitätstheorie:\n\" Nummerierung, Elementare Abzählverfahren\n\" Asymptotik von Kostenfunktionen",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Digitaltechnik\n- Algorithmen und Datenstrukturen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=756837&pOrgNr=1",
        "name": "Distributed Systems",
        "kennung": "IN2259",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students know the properties of common building blocks applicable to the design of distributed systems (e.g., for communication, coordination, fault-tolerance, and replication). They are able to understand the complexities involved in developing a distributed system and can analyze common failure sources. Students understand the basics of distributed filesystems, can evaluate peer-to-peer systems, and apply MapReduce-style processing on large data collections. In general students are able to evaluate common design decisions for building a distributed system and apply these principle characteristics to develop a distributed application. This involves the application and development of communication systems, coordination algorithms and replication mechanisms.",
        "inhalt": "The module covers the principles and basic building blocks of large-scale distributed systems. This includes algorithms and protocols for the core challenges in building distributed systems. The module starts with a review of basic networking mechanisms and an introduction of protocols for synchronous and asynchronous process communication in networked environments. In this context, different communication architectures and paradigms are analyzed. Next, various aspects of time in distributed systems are discussed and concepts, as well as algorithms, for logical time (Lamport timestamps and Vector timestamps), and synchronization of physical clocks are presented. These concepts are important to introduce advanced communication protocols such as totally-ordered multicast or other process coordination mechanisms. The module discusses the challenges in coordination and presents algorithms for mutual exclusion, leader election, and consensus. A major part of the module focuses on the PAXOS algorithm and its variations for distributed consensus. Another important part of the module covers fault-tolerance and service availability in distributed systems. Therefore, several consistency models are analyzed, and techniques and algorithms for replication, such as active replication, primary backup replication, and gossip-based replication, are presented. Besides these rather theoretical and generic challenges, the module also covers more practical aspects such as web caching with consistent hashing, distributed filesystems, and large-scale data processing with Map Reduce. Towards the end of the module, peer-to-peer systems are investigated in detail. First, structured peer-to-peer approaches like distributed hash tables (DHTs) are introduced (e.g., CHORD, CAN, PASTRY); then peer-to-peer applications are presented and discussed. All contents are supported by examples and case studies.",
        "voraussetzungen": "Algorithms and data structures (searching, sorting, hash tables, lists, trees, graphs, basic notions of complexity (O-notation)), basic programing skills and tools (Java, C/C++, concurrency, multithreading, synchronization, code versioning and concurrent development (e.g., CVS or SVN)), and operating systems concepts, computer network basics, and database systems basics.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3037973&pOrgNr=1",
        "name": "Dodo Alive! - Resurrecting the Dodo with Robotics and AI: Hardware & Design",
        "kennung": "EI78076",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completing this module, students will have gained broad knowledge in developing legged robots. They will also acquire problem solving and team-working skills. The students will have obtained practical and methodological skills to gain diverse competencies far beyond basic theory.",
        "inhalt": "Imagine that you are at the natural history museum. You wander around and take a look at different parts of the museum. Suddenly, a robot in the form of a long extinct species – the Dodo – moves towards you, starts talking to you and tells you about itself. This course covers constructing an autonomous, intelligent, walking, Dodo-like robot, which requires a combination of a wide spectrum of fields, including design, control, navigation, locomotion, perception and AI. During this laboratory course, the students will develop the necessary skills to design and construct various components of “Robo-Dodo”, as part of a long-term, iterative project.\nIn the “Hardware & Design” course we aim towards the physical realization of the Robo-Dodo within a group project. HW/SW components that have been developed previously are now integrated into prototypes.\nHere, the focus is less on constructing a “perfect system”. Rather, students should understand the fundamental mechanical principles that enable locomotion. In this context, it is important to comprehend the role of elastic elements that have been used to successfully construct bio-inspired robots (Cotton et al.). By leveraging fast prototyping methods, students use their creativity to explore different mechanical solutions. Another part of the project are the actuation and control of the mechanical system by brushless DC motors.",
        "voraussetzungen": "We expect that the student is familiar with basic electronics and µC programming or some basic CAD.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3037974&pOrgNr=1",
        "name": "Dodo Alive! - Resurrecting the Dodo with Robotics and AI: Simulation & Control",
        "kennung": "EI78077",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of this laboratory, the students have acquired profound knowledge in simulation & control of dynamically walking bipedal robots both methodologically and practically. In addition to their problem-solving and teamworking capabilities, the students expand their management and organization skills.",
        "inhalt": "Imagine that you are at the natural history museum. You wander around and take a look at different parts of the museum. Suddenly, a robot in the form of a long extinct species – the Dodo – moves towards you, starts talking to you and tells you about itself. This course covers constructing an autonomous, intelligent, walking, Dodo-like robot, which requires a combination of a wide spectrum of fields, including design, control, navigation, locomotion, perception and AI. During this laboratory course, the students will develop the necessary skills to design and construct various components of “Robo-Dodo”, as part of a long-term, iterative project.\nThe ”Simulation & Control” course will focus on the fundamentals of modelling, simulation and control of bipedal walking robots. After some introductory classes, a practical phase will follow in which the students work closely together in interdisciplinary groups. The introductory sessions are structured as follows: In the first part, the necessary theory is taught. Then, a live programming session follows in which the theory is applied in practice. The following topics are covered:\nSimulation:\n• Floating-base kinematics and dynamics\n• Contact modeling\no Event-driven\no Time-stepping methods (Stewart & Trinkle)\nControl:\n• Reduced order models (templates)\n• Spring-Loaded Inverted Pendulum (SLIP) and derivations\n• Passive dynamic locomotion\n• Limit Cycles, Poincaré map analysis, stability\n• Optimal control methods\n• Contact-implicit optimal control",
        "voraussetzungen": "We expect that the student is familiar with basic robot modeling (kinematics and dynamics) and programming (Matlab).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743473&pOrgNr=1",
        "name": "Dynamische Systeme",
        "kennung": "EI70120",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage nichtlineare und lineare Dynamiken anhand von Modellbeschreibungen und Phänomenen voneinander abzugrenzen und technische und nicht-technische Systeme durch ein nichtlineares dynamisches System zu modellieren. Der Studierende versteht die Zusammenhänge wichtiger Systemeigenschaften wie z.B. Stabilität oder Passivität und kann ein System auf diese Eigenschaften untersuchen. Die Studierenden lernen die wichtigsten Reglerentwurfsverfahren für nichtlineare Regelsysteme kennnen, und können deren Eignung für unterschiedliche Reglerentwurfsaufgaben an verschiedenen Regelstrecken analysieren und abschliessend die Performanz der Regelung bewerten.",
        "inhalt": "Modellbildung, Analyse und Synthese dynamischer Systeme. - Nichtlineare Modelle und Systemklassen. - Nichtlineare Phänomene. - Stabilität nichtlinearer Systeme. - Eingangs-Ausgangs-Linearisierung. - Passivität. - Backstepping. - Flachheitsbasierte Regelung. - Einführung in die geometrische Regelung. - Einführung in die schaltenden und hybriden Systeme. - Sliding Mode Regelung. - Anwendungsbeispiele.",
        "voraussetzungen": "Grundlagen der Mathematik dynamischer Systeme und der linearen Regelungssysteme, die in den Vorlesungen für höhere Mathematik und Grundlagen der Regelungstechnik vermittelt wird.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261091&pOrgNr=1",
        "name": "Echtzeitsysteme",
        "kennung": "IN2060",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul sind die Studierenden in der Lage die speziellen Anforderungen von Echtzeitsystemen zu analysieren. Die Studierenden können aus einer Vielzahl von Lösungen für die relevanten Aspekte der Echtzeitsysteme (Modellierungskonzepte, Schedulingalgorithmen, Betriebssysteme, Programmiersprachen, etc.) die passenden Lösungen auszuwählen und umsetzen. Sie verstehen die typischen Probleme der nebenläufigen Programmierung und kennen die verschiedenen Mechanismen zur Problemlösung.",
        "inhalt": "Die Vorlesung behandelt die speziellen Methoden, Lösungen und Probleme aus dem Bereich der Echtzeitsysteme. Hierzu werden konkrete Szenarien beschrieben wo Echtzeitsysteme zum Einsatz kommen. Hier wird aufgezeigt, wo die Unterschiede zu Nicht-Echtzeitsystemen bestehen und warum die Implementierung von Steuer- und Regelungssystemen zwingend auf Echtzeitsysteme angewiesen ist. Die Modellierung von Echtzeitsystemen, Nebenläufigkeit, Scheduling, spezielle Betriebssysteme und Programmieransätze, Uhren, echtzeitfähige Kommunikation und typische Hardware für Sensorik und Aktorik werden ausführlich behandelt. Die Veranstaltung schließt mit einer Einführung in fehlertolerante Systeme.",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456531&pOrgNr=1",
        "name": "Einführung in die digitale Signalverarbeitung",
        "kennung": "IN2061",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Modul sind die Studierenden in der Lage die theoretischen Konzepte moderner Signalverarbeitungssysteme zu analysieren und die zugrunde liegenden Algorithmen anzuwenden. Sie sind in der Lage, die erlernten theoretischen Konzepte in die Praxis umzusetzen.",
        "inhalt": "Die Vorlesung beginnt mit einer Einführung in Signale und Systeme im Zeitbereich sowie im Frequenzbereich. Der weitere Inhalt umfasst Diskretisierung von Signalen, Filteroperationen, Frequenztransformationen, Kompressionstechniken und einen Ausblick auf digitale Bildverarbeitung. Die Realisierung der Algorithmen durch bzw. auf einem digitalen Signalprozessor (DSP) wird in der Vorlesung besprochen und im Rahmen der Übung angewendet. Dabei wird es den Studierenden überlassen, sich für eine passende Implementierung zu entscheiden.",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3576360&pOrgNr=1",
        "name": "Einführung in die Quantenkommunikation",
        "kennung": "CIT1330003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind nach dem erfolgreichen Abschluss des Moduls in der Lage, die Grundlagen der Quantenkommunikation zu verstehen und mit den entsprechenden Protokollen anzuwenden. Außerdem können sie praktische Implementierungen, sowie die Erweiterung auf Quantennetzwerke analysieren und beurteilen. Zusätzlich verstehen sie die Herausforderungen und Limitierungen von konventionellen Kommunikationsprotokollen und Verschlüsselungen.",
        "inhalt": "Die Vorlesung bietet eine Einführung in das Gebiet der Kommunikation und Informationsverarbeitung mithilfe von Quantensystemen. Ausgehend von einfachen, aber grundlegenden Gesetzen der Quantenphysik, kann Kommunikation beweisbar sicher gegen Abhörangriffe gemacht werden. Die Vorlesung umfasst die folgenden Themenblöcke: Grundlagen konventioneller Kryptografie; Grundlagen Quanteninformation; Quantenkryptografie; Quantenkommunikation; Quantenrepeater; Quantennetzwerke; technische Implementierungen.",
        "voraussetzungen": "Lineare Algebra",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452812&pOrgNr=1",
        "name": "Einführung in die Rechnerarchitektur",
        "kennung": "IN0004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Teilnahme an diesem Modul sind die Studierenden in der Lage, Rechnersysteme als geschichtete, abstrakte Maschinen zu verstehen. Sie haben einen ersten Einblick in das Fachgebiet der Rechnerarchitektur gewonnen und beherrschen die nachfolgend genannten, einzelnen Fähigkeiten:\nSie haben die wesentlichen Konzepte von maschinennaher Programmierung, Mikroprogrammierung und Schaltungsentwurf erlernt und können diese anwenden. Sie haben den Maschinenbefehlszyklus auf Basis der Vorgänge in der Hardware auf Registertransferebene verstanden und sind in der Lage Rechnerarchitekturen zu klassifizieren. Sie haben die Grundsätze moderner Rechnerarchitekturen erlernt.",
        "inhalt": "- Funktion und Aufbau von Rechnersystemen aus technischer Sicht: Von-Neumann-Rechner, Maschinenbefehlszyklus, Hardware-Software-Schnittstelle\n- Die Instruction Set Architecture (ISA): Funktionsweise und maschinennahes Assembler Programmieren, Aufrufkonventionen\n- Implementierung von Maschinenbefehlen durch Mikroprogrammierung\n- Schaltungen, Schaltwerke, Schaltwerksentwurf mittels einer formalen Sprache am Beispiel von VHDL\n- Einführung in die Rechnerarchitektur: Mikroprozessorarchitekturen und Systemarchitekturen, parallele und verteilte Systeme, Speichersysteme und E/A",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1051636&pOrgNr=1",
        "name": "Einführung in die Roboterregelung",
        "kennung": "EI0685",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Absolvierung des Moduls kennen und verstehen die Studierenden die grundlegenden Konzepte der Robotik und der Roboterregelung. Sie sind in der Lage diese Konzepte auf verschiedenste Arten von Problemstellungen aus der Robotik anzuwenden. Die Vorlesung liefert insbesondere das theoretische Fundament für zahlreiche Spezialvorlesungen und Praktika im Bereich Robotik. Zudem sind die Inhalte auch für die industrielle Anwendung relevant.",
        "inhalt": "- Roboterarme und fahrzeuge\n- Räumliche Objektrepräsentation und Transformationen\n- Programmiersprachliche Formulierung des Aktionsplanes\n- Kinematik-Modelle von Manipulatoren und Roboterfahrzeugen (direkte und inverse Kinematik, differentielle Kinematik, Jakobimatrix, Redundanz und Singularitäten, Prinzip der virtuellen Arbeit)\n- Kinematische Bahnplanung und -erzeugung\n- Dynamik-Modellierung (Euler-Lagrange Modell und rekursive Newton-Euler Formulierung, direkte und inverse Dynamik)\n- Manipulatorregelung (Positions-, Impedanz-, Kraft-, Hybridregelung, Arbeitsraumregelung vs. Gelenkraumregelung, dezentrale vs. zentrale Regelung, Inverse-System-Technik)\n- Rechen- und Entwurfsübungen",
        "voraussetzungen": "Kenntnisse der Regelungstechnik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1130509&pOrgNr=1",
        "name": "Einführung in die Signalverarbeitung für IN",
        "kennung": "EI4693",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende dieses Moduls kennen die Informatikstudenten die Grundlagen der Analyse von zeitdiskreten Systemen, können diese Systeme kategorisieren, können deren Stabilität beurteilen und Stabilität durch Zustandsvariablenrückführung sicherstellen. Sie können zeitdiskrete Filter für realistische Anforderungen entwerfen. Sie können praktische Schätzprobleme basierend auf dem Konzept der suffizienten Statistik mithilfe des Maximum Likelihood oder des Maximum A-Posteriori Kriteriums lösen und können lineare Filter für Schätzaufgaben in linearen Systemen entwickeln. Auch können sie die obigen Konzepte auf das Problem der MIMO Detektion anwenden.",
        "inhalt": "Zeitdiskrete Systeme: Zustandsraum-Darstellung, Zeitanwort, Impulsantwort, z-Transformation, Übertragungsfunktion, FIR- und IIR-Systeme, linearphasige und minimalphasige FIR-Filter, Entwurf von FIR-Filtern mithilfe des Remezalgorithmus.\nStabilität: externe Stabilität, Beobachtbarkeit, Steuerbarkeit, asymptotische Stabilität, Zustandsvariablen-Rückführung, asymptotische Beobachter, kombinierter Beobachter-Regler.\nStatistische Signalverarbeitung: suffiziente Statistik, Maximum Likelihood und Maximum A-Posteriori Schätzung, Best Linear Unbiased Estimator, Minimum Mean Square Error Schätzung, Bias-Variance Trade-off, MIMO Detektion.",
        "voraussetzungen": "Lineare Algebra, Analysis, elementare Wahrscheinlichkeitsrechnung.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1441073&pOrgNr=1",
        "name": "Einführung in die Zero-Error-Informationstheorie",
        "kennung": "EI71024",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Der Student ist nach erfolgreicher Teilnahme mit den grundlegenden Problemen und Methoden der Zero-Error-Informationstheorie vertraut. Dies befähigt ihn zu vertiefter Beschäftigung mit den einzelnen vorgestellten Bereichen. Zudem ist er in der Lage, kombinatorische Methoden in der Informationstheorie bzw. informationstheoretische Methoden in der Kombinatorik erfolgreich einzusetzen.",
        "inhalt": "Das Modul bietet eine Einführung in die Zero-Error-Informationstheorie, welche Informationstheorie und Kombinatorik/Graphentheorie verbindet. In der Zero-Error-Informationstheorie wird gefordert, dass Nachrichten über einen verrauschten Kanal mit Fehlerwahrscheinlichkeit 0 übertragen werden, wobei der Kanal diskret und gedächtnislos ist. Es wird die Zero-Error-Kapazität sowohl mit als auch ohne Feedback studiert. Da keine geschlossene Formel für die Zero-Error-Kapazität ohne Feedback bekannt ist, werden obere Schranken ausführlich behandelt. Für einige Spezialfälle kann sie berechnet werden, für den allgemeinen Fall werden außerdem Eigenschaften wie die Additivität studiert. Die Zero-Error-Kapazität mit Feedback wird vollständig charakterisiert. Die benötigten Hilfsmittel aus der Graphentheorie werden ebenfalls in der Vorlesung eingeführt.",
        "voraussetzungen": "Mathematisches Interesse\nEs wird empfohlen, folgende Fächer zuvor belegt zu haben: Mathematik 1-4, Informationstheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4418299&pOrgNr=1",
        "name": "Einführung in Reinforcement Learning",
        "kennung": "CIT333001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Mit Abschluss des Kurses ist man in der Lage, Reinforcement Learning Algorithmen wie Q-Learning und SARSA in Python zu programmieren und anzuwenden.\nDie Studierenden können nun reale Probleme identifizieren, die mittels Reinforcement Learning gelöst werden können. Sie sind fähig, neue Entscheidungsprobleme in Form von Markov-Entscheidungsprozessen zu formulieren und geeignete Lösungsansätze zu entwickeln.\nDie Studierenden haben ein Verständnis für die praktischen Herausforderungen bei der Implementierung von Reinforcement Learning und können Strategien zur Überwindung dieser Hürden entwerfen. Sie sind in der Lage, die Ergebnisse von RL-Ansätzen klar und präzise zu präsentieren und kritisch zu reflektieren.",
        "inhalt": "Reinforcement Learning (RL) ist ein vielseitiger Ansatz zur Lösung von Problemen der sequenziellen Entscheidungsfindung. Ein Agent interagiert mit seiner Umgebung und nutzt seine Erfahrung, um Entscheidungen zu treffen, welche zur Lösung des Problems beitragen.\nReinforcement Learning hat sich als festes Werkzeug in der Forschung und in verschiedenen Anwendungen etabliert. Dazu gehören lernende Regler in der Robotik, die Entwicklung von Strategien beispielsweise für Brettspiele, das Verwalten von Verkehr in Netzwerken oder Computerintelligenz allgemein. Zu den jüngsten Erfolgen von RL zählen unter anderem die Programme ChatGPT oder AlphaGo.\nDiese Vorlesung vermittelt einen Überblick über die grundlegenden Konzepte, die verschiedenen praktischen Techniken und die Programmierwerkzeuge, welche für die Implementierung von RL-Lösungen notwendig werden.\nDie Veranstaltung konzentriert sich zunächst auf die Einführung von Reinforcement Learning. Anschließend wird die Entwicklung von Algorithmen thematisiert. Danach folgen die Anwendungsaspekte des Themas, wie z.B. die Herausforderungen bei der Realisierung in Computern und eine (ausreichend) performante Implementierung.\nAls Problemstellung für den Kurs dient die Steuerung eines Aufzugs. Diese stellt ein ausreichend kleines Entscheidungsproblem dar, welches im Rahmen der Vorlesung in kurzer Zeit lösbar ist. Dennoch ist solch eine Steuerung bereits an sich interessant und nicht mehr nur ein reines Spielzeugproblem.\nDie Veranstaltung ist so konzipiert, dass sie die Grundlagen für eine spätere theoretische Behandlung des Themas ermöglicht. Für einen tiefen Einstieg in das Themenfeld (mathematische Herleitungen, Konvergenzbeweise und Herleitung von Fehlergrenzen) können interessierte Studentinnen und Studenten die Master-Vorlesung „Approximate Dynamic Programming and Reinforcement Learning“ im Wintersemester besuchen.\nIn dieser Vorlesung werden die folgenden Themen behandelt:\n• Markov-Entscheidungsprozesse als Sprache zur Formulierung von Lösungsansätzen\n• Implementierung des Simulators bzw. des dynamischen Systems\n• Verschiedenste Algorithmen zur Lösung:\n◦ Dynamische Programmierung (Value- und Policy-Iteration)\n◦ Monte-Carlo-Methoden\n◦ Temporal Difference Learning (SARSA und Q-Learning)\n◦ Lineare Funktionsapproximation",
        "voraussetzungen": "Grundlegende Programmierkenntnisse in Python (oder die Motivation, diese zu erlernen).\nGrundlegende Kenntnisse in der Mathematik (Gleichungssysteme, Erwartungswerte, allg. Analysis, …)",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460540&pOrgNr=1",
        "name": "eLearning - Techniken und Infrastrukturen",
        "kennung": "IN2093",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, den Stand der Technik im Bereich des eLearning zu überblicken. Sie können digitale Lehr- und Lernkonzepte einordnen und bewerten, kennen Funktion, Architektur und Implementierung von Lehr/Lernumgebungen und beherrschen die grundsätzliche Organisation der Einbettung solcher Systeme in allgemeine Funktionen von Campus-Management-Systemen. Grundkenntnisse in XML werden erworben und können für die Erstellung von Lehrprogrammen angewendet werden.",
        "inhalt": "- Einführung in eLearning: Allgemeines, Begriffsdefinition(en), verwandte Gebiete, Anwendungsbereiche mit Beispielen, Zielsetzungen, Voraussetzungen\n- Entwicklung an Hochschulen\n- Pädagogische und didaktische Aspekte: Lernprozess/Lerntheorien/Lehrverfahren, Didaktische Elemente, Mediales Design, Didaktische Struktur\n- Technische Konzepte/Systeme für eLearning, Dienste für eLearning\n- Architektur von Lehr-/Lern-Umgebungen: CSCW, Lernportale, Lernplattformen/ Learning Management Systeme, Content Management Systeme\n- Werkzeuge: Autorensysteme\n- Einbindung von eLearning in hochschulweite Informationssysteme: Benutzerverwaltung (LDAP), Campus Management, Integration in Systeme zur Informationsrecherche (Wissensdienste)\n- Erstellung von eLearning Inhalten mittels XML: Content Produktionsprozess, XML Sprachfamilien für eLearning, Transformation von XML-Dokumenten,\n- Standardisierung und Integration: Learning Technology Standards, Metadaten für eLearning-Materialien, Integration in Lehr-/Lernumgebungen, Austausch zwischen unterschiedlichen Lehr-/Lernumgebungen\n- Wissensmanagement Aspekte",
        "voraussetzungen": "IN2038 Verteilte und Web-Informationssysteme, sonst",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1744304&pOrgNr=1",
        "name": "Electronic Design Automation",
        "kennung": "EI70610",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module students are capable of employing algorithms for computer-aided design of (digital) integrated circuits, electronic systems, and other emerging platforms. Students can use and develop software tools for synthesis, optimization and simulation of digital circuits on logic level. They are capable of modeling tasks of electronic design automation as mixed integer linear programming problems.",
        "inhalt": "Logic Synthesis: Boolean functions, synthesis of 2-level combinational circuits, heuristic minimization of 2-level combinational circuits, synthesis of multi-level combinational circuits, ordered binary decision diagrams, synthesis of sequential circuits with finite state machines (FSM);\n\nLogic Simulation: event-driven simulation, modeling and simulation using VHDL;\n\nMixed Integer Linear Programming (MILP) Modeling: properties of modeling method, mathematical modeling techniques (constraint linearization, OR-relation transformation, propositional logic modeling, absolute value modeling), modeling common EDA problems including grid routing, gridless routing, escape routing on printed circuit board (PCB), area routing on PCB, non-overlapping placement, area minimization, network flow, etc.\n\nAdditional Topics: modeling applications in emerging technologies.",
        "voraussetzungen": "Fundamentals of digital logic design; fundamental engineering mathematics;",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=809597&pOrgNr=1",
        "name": "Elektromagnetische Felder in der Biomedizin und in medizinischen Anwendungen der Nanotechnik",
        "kennung": "EI7270",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage, physiologische, elektrische und magnetische Größenordnungen einzuschätzen. Sie sind in der Lage, Gefahren durch magnetische und elektrische Felder zu erkennen und zu bewerten. Sie beherrschen das Design von einfachen Messverstärkern für medizinische Zwecke und die Beschreibung physiologischer und biophysikalischer Systeme anhand elektromagnetischer Ersatzschaltbilder.",
        "inhalt": "Die Veranstaltung behandelt elektromagnetische Effekte und Prinzipien in der Physiologie des Körpers und wie sich wiederum der Elektromagnetismus technisch in der Medizin einsetzen lässt. Ziel ist, von Prinzipien und der Theorie bis zur Übertragung dieser in technischen Anwendungen Verständnis bekannter Systeme zu geben. Am Beispiel derartiger Anwendungen soll das Handwerkszeug zur Entwicklung neuer Anwendungen erarbeitet werden.\nExperimente sollen den Studenten erleichtern, die Zusammenhänge dieses umfassenden Einblickes besser begreifen und insbesondere erinnern zu können.\nAssoziationen, die aus Vorführungen bestimmter Effekte herrühren und Wirkzusammenhänge eindrucksvoller untermauern als eine ausschließliche Formeldiskussion, sollen im späteren Alltag der Studierenden als Ingenieur(in) sowohl eine bessere Abschätzung der physikalischen Effekte und insbesondere deren relative Stärke/Größenordnung hervorrufen als auch Übertragungen auf andere Einsatzbereiche aufgrund der vielen Äquivalenzen in der Welt der Physik ermöglichen.",
        "voraussetzungen": "Keine",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456388&pOrgNr=1",
        "name": "Elektronisches Publizieren / Document Engineering und das World-Wide Web",
        "kennung": "IN2032",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmerinnen und Teilnehmer sind in der Lage, moderne digitale Dokumente in vielfacher Weise semantisch auszuwerten und weiterzuverarbeiten, im Spannungsfeld von Text, Daten und Programmen. Dadurch können sie die modernen Möglichkeiten des elektronischen Publizierens im Web zutreffend beurteilen. Sie haben ein umfassendes Verständnis der Grundlagen des Web Publishing, also von Konzepten, Modellen, Architekturen, Technologien, etablierten Vorgehensweisen und Werkzeugen rund um die Extensible Markup Language (XML). Sie schätzen den Stand der Technik mit seinen Stärken und Defiziten korrekt ein, sie können sich verwandte Technologien selbständig erarbeiten und sie einordnen, und sie machen sich ein realistisches Bild von künftigen Entwicklungen. Sie können Querverbindungen zu anderen Informatik-Disziplinen herstellen, beispielsweise zum Software Engineering über Modellierung und Vorgehensmodelle, zu Formalen Sprachen und Übersetzerbau über Sprachdefinitionen und Werkzeugentwicklung oder zu Datenbanken über Modellierung und Abfragesprachen. Sie erkennen allgemeingültige Paradigmen der Informatik im Kontext des elektronischen Publizierens wieder.",
        "inhalt": "Das Modul behandelt nach einer Einführung in das Thema mit Beschreibung des Hintergrunds und Einordnung die folgenden Themenblöcke\n\n- Modellierung und Kodierung strukturierter Dokumente\nDokumentenmodelle (strukturierte Dokumente, semistrukturierte Daten) mit Umsetzungen XML Information Set und XDM; Kodierung strukturierter Dokumente mit XML, XML Namespaces und JSON; Kodierung von Text mit Unicode.\n\n- Stukturvorgaben und ihre formalen Grundlagen\nSchemasprachen wie XML DTD, XML Schema, Relax NG, Schematron.\n\n- Programmgesteuerte Bearbeitung strukturierter Dokumente\nAdressierung von XML-Fragmenten mit XPath; Transformation von XML-Dokumenten und Aufbereitung für Präsentation mit XSLT, XSL-FO, XHTML; Abfrage von XML-Dokumenten mit XQuery\n\n- Architekturen für Publikationsanwendungen im Web\nDatenerhebung und Benutzungsoberflächen mit XForms, Beschreibung von Abläufen mit SCXML, Architektur XRX",
        "voraussetzungen": "Allgemeine Grundlagen der Informatik wie z.B. IN0001 Einführung in die Informatik, IN0006 Einführung in die Softwaretechnik, IN0008 Grundlagen: Datenbanken und IN0011 Einführung in die Theoretische Informatik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3844196&pOrgNr=1",
        "name": "Entrepreneurial Opportunities in 6G Communication Network Technologies (Lecture Series)",
        "kennung": "CIT433025",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "- To understand the fundamentals and potential of 6G technology.\n- To identify and analyze entrepreneurial opportunities in the 6G era.\n- To develop critical thinking about the challenges and risks in this domain.\n- To foster the ability to create innovative business models leveraging 6G tech.",
        "inhalt": "1. Introduction to 6G Technology: Overview, potential, and advancements.\n2. Entrepreneurial Opportunities in 6G: Identifying market needs and technological gaps.\n3. Case Studies: Successful ventures and startups in the 6G domain.\n4. Challenges and Risks: Addressing technical, regulatory, and market challenges.\n5. Innovative Business Models: Exploring new paradigms and strategies.\n6. Future Trends and Predictions: Expert insights on the evolution of 6G.",
        "voraussetzungen": "- Basic understanding of network technologies and principles.\n- Prior coursework in entrepreneurship or business studies is advantageous.\n- Curiosity and willingness to engage with emerging technologies and interest in entrepreneurship.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1051726&pOrgNr=1",
        "name": "Entwurf digitaler Systeme mit VHDL und System C",
        "kennung": "EI0690",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI0616",
        "lernergebnisse": "Die Studierenden sind nach der Teilnahme in der Lage, elektronische Systeme hierarchisch und ein Teilschritten zu modellieren, zu abstrahieren und zu entwerfen. Sie haben als Werkzeuge hierfür ein Entwurfssystem und die Modellierungssprachen VHDL (WS) und SystemC (SS) verwenden gelernt, die in weiten Teilen der Industrie eingesetzt werden.",
        "inhalt": "Hardware-Beschreibungssprachen VHDL und SystemC, Entwurfsmethodik mit VHDL und SystemC, VHDL-/SystemC-Modellierung, -Simulation und -Synthese, Methoden der Logik-, Register-Transfer- und High-Level-Synthese; praktische Übungen am Rechner zur Modellierung mit VHDL/SystemC und zur automatischen Schaltungssynthese, Übungen zu ausgewählten Synthesemethoden.",
        "voraussetzungen": "Grundlagen der Digitaltechnik und eine Programmiersprache (am besten C oder C++) sind absolut notwendig",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1621718&pOrgNr=1",
        "name": "Entwurf von sicheren medizinischen Geräten und Baugruppen",
        "kennung": "EI71045",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden in der Lage\n• die grundlegenden Normen und Vorschriften der funktionalen Sicherheit und der elektrischen Sicherheit von Medizinprodukten zu kennen\n• systematische und zufällige Fehler in elektronischen Baugruppe zu erkennen\n• fehlervermeidende und fehlerbeherrschende Maßnahmen zu analysieren\n• Schutzmaßnahmen zu entwickeln\n• Einschränkungen und Anwendungsfelder nicht-idealer elektronischer Komponenten zu kennen und im Schaltungsentwurf zu berücksichtigen\n• Konzepte für medizinische, elektronische Baugruppen normgerecht zu entwickeln",
        "inhalt": "Das Modul behandelt die Anwendung von Prinzipien der funktionalen Sicherheit auf dem Gebiet der Medizintechnik und die grundlegenden Normen zur elektrischen Sicherheit in Medizinprodukten. Der Fokus wird dabei auf die Beherrschung von Hardwarefehlern und auf Softwarefehler in Microcontroller/-prozessor Umgebungen gelegt. Verschiedene Test- und Fehlererkennungsverfahren werden an einem praktischen Fallbeispiel gemeinsam erarbeitet. Weiterhin behandelt das Modul die nicht-idealen Eigenschaften von elektronischen Komponenten (passiven Komponenten, aktiven Komponenten, programmierbare Komponenten) sowie deren Einsatzmöglichkeiten und Einschränkungen beim Schaltungsentwurf. Ergänzend stehen aus allen Teilaspekten der Vorlesung Seminarthemen zur Verfügung, anhand derer die Studierenden ihr Fachwissen vertiefen können. Begleitende Übungen dienen zur Konkretisierung des Vorlesungsstoffes.",
        "voraussetzungen": "Grundlagen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1633304&pOrgNr=1",
        "name": "Entwurfsverfahren für Integrierte Schaltungen",
        "kennung": "EI43811",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach em erfolgreichen Abschluss des Moduls sind die Studierenden mit der Anwendung von Verfahren der diskreten Mathematik zur Beschreibung und Optimierung von Schaltungen vertraut. Sie kennen grundlegende mathematische Verfahren und Algorithmen, um digitale Schaltungen auf Gatterebene zu entwerfen, zu optimieren, zu simulieren und Testmuster dafür zu entwerfen. Dies gilt sowohl für kombinatorische als auch für sequentielle Schaltungen. Den Studierenden sind damit Verfahren bekannt, mit denen der Entwurf von Schaltungen industrieller Komplexität erfolgreich automatisiert werden kann. Den Studierenden ist auch die grundlegende Bedeutung der Automatisierung des Entwurfs für die Steigerung der Produktivität eines Ingenieurs und damit den wirtschaftlichen Erfolg bewusst.\n\nIm Detail können Studierende digitale Schaltungen mittels Boolescher Funktionen beschreiben und verschiedene Darstellungsformen Boolescher Funktionen (SOP-Formen, Kubengraph, Reduced Ordered Binary Decision Diagram) interpretieren, erstellen und ineinander überführen;\nStudierende können Logikoptimierung durch verschiedene Verfahren durchführen: Minimierung Boolescher Funktionen nach Quine/McCluskey, mittels Resolventen-Methode, heuristische Ansätze;\nStudierende sind vertraut mit Beschreibung und Zustandsminimierung von endlichen Automaten (Finite State Machines);\nStudierende kennen die Grundlagen der Simulation digitaler Schaltungen auf dem Computer.",
        "inhalt": "Logiksynthese: Grundlagen der Logiksynthese; Binäre Boolesche Funktionen; Synthese von kombinatorischen Schaltungen mit zwei Ebenen; Heuristische Minimierung von kombinatorischen Schaltungen mit zwei Ebenen; Synthese von kombinatorischen Schaltungen mit mehr als zwei Ebenen; Ordered Binary Decision Diagrams; Synthese von sequentiellen Schaltungen mittels endlicher Automaten.\n\nSimulation digitaler Schaltungen: Grundlagen Digitalsimulation; Werterepräsentation; Simulation des Zeitverhaltens.\n\nTestverfahren: Fehlerdiagnose, Fehlerüberdeckungstabelle; Testbestimmung in kombinatorischen Schaltungen; Testbestimmung in sequentiellen Schaltungen.",
        "voraussetzungen": "Vorlesung \"Digitale Schaltungen\".\nKenntnisse diskreter Mathematik sind hilfreich, werden aber nicht vorausgesetzt.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=556405&pOrgNr=1",
        "name": "Entwurfsverfahren für Integrierte Schaltungen (MSE)",
        "kennung": "EI4381",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Lehrveranstaltung ist der Studierende mit der Anwendung von Verfahren der diskreten Mathematik zur Beschreibung und Optimierung von Schaltungen vertraut. Er/sie kennt grundlegende mathematische Verfahren und Algorithmen, um digitale Schaltungen auf Gatterebene zu entwerfen, zu optimieren, zu simulieren und Testmuster dafür zu entwerfen. Dies gilt sowohl für kombinatorische als auch für sequentielle Schaltungen. Dem Studierenden sind damit Verfahren bekannt, mit denen der Entwurf von Schaltungen industrieller Komplexität erfolgreich automatisiert werden kann. Dem Studierenden ist auch die grundlegende Bedeutung der Automatisierung des Entwurfs für die Steigerung der Produktivität eines Ingenieurs und damit den wirtschaftlichen Erfolg bewußt.\n\nIm Deatil können Studierende digitale Schaltungen mittels Boolescher Funktionen beschreiben und verschiedene Darstellungsformen Boolescher Funktionen (SOP-Formen, Kubengraph, Reduced Ordered Binary Decision Diagram) interpretieren, erstellen und ineinander überführen;\nStudierende können Logikoptimierung durch verschiedene Verfahren durchführen: Minimierung Boolescher Funktionen nach Quine/McCluskey, mittels Resolventen-Methode, heuristische Ansätze;\nStudierende sind vertraut mit Beschreibung und Zustandsminimierung von endlichen Automaten (Finite State Machines);\nStudierende kennen die Grundlagen der Simulation digitialer Schaltungen auf dem Computer.",
        "inhalt": "Logiksynthese: Grundlagen der Logiksynthese; Binäre Boolesche Funktionen; Synthese von kombinatorischen Schaltungen mit zwei Ebenen; Heuristische Minimierung von kombinatorischen Schaltungen mit zwei Ebenen; Synthese von kombinatorischen Schaltungen mit mehr als zwei Ebenen; Ordered Binary Decision Diagrams; Synthese von sequentiellen Schaltungen mittels endlicher Automaten.\n\nSimulation digitaler Schaltungen: Grundlagen Digitalsimulation; Werterepräsentation; Simulation des Zeitverhaltens.\n\nTestverfahren: Fehlerdiagnose, Fehlerüberdeckungstabelle; Testbestimmung in kombinatorischen Schaltungen; Testbestimmung in sequentiellen Schaltungen.",
        "voraussetzungen": "Vorlesung \"Digitale Schaltungen\" (kann auch parallel gehört werden);\nKenntnis diskreter Mathematik hilfreich, wird aber nicht vorausgesetzt.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1330274&pOrgNr=1",
        "name": "Ereignisdiskrete Systeme",
        "kennung": "EI0711",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage die Methoden und Technologien für die Modellierung und Analyse ereignisdiskreter Systeme anzuwenden und zu verstehen. Durch anwendungsnahe Übungen, in denen Lösungen zu konkreten Problemen aufgezeigt werden, sind die Studierenden in der Lage die Methoden für automatisierungstechnische Systeme aus der Praxis anzuwenden.",
        "inhalt": "Modellierung automatisierter Prozesse; Automaten: Modellierung, Sprachen, Steuerungsentwurf; Petri-Netze: Modellierung, Erreichbarkeit, Steuerungsentwurf, Zeitbedingungen; Markov-Prozesse für Produktionsanlagen; Warteschlangentheorie: Geburts- und Sterbeprozesse, Markov-Ketten.",
        "voraussetzungen": "Grundlagen der Regelungstechnik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1226089&pOrgNr=1",
        "name": "Essentials of Applied Software Engineering",
        "kennung": "IN1504",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Studierenden verstehen Konzepte und Methoden für die verschiedenen Phasen des Lebenszyklus der Software Entwicklung. Sie verstehen die wichtigsten Begriffe und Konzepte der Softwaretechnik. Sie können konkrete Probleme analysieren, verstehen und bewerten, geeignete Techniken auswählen und diese anwenden um Probleme zu lösen. Sie haben ein Bewusstsein für Fragestellungen entwickelt, auf die im Software Engineering grundsätzlich zu achten ist. Digitale Aufgaben unterstützen die praktische Umsetzung von Videoinhalten, im Bezug auf Design Patterns, Hierarchien im Software Engineering sowie in Grundlagen der Programmierung. Sie erhalten Rückmeldungen zu den von ihnen im Selbststudium entwickelten Lösungsansätzen.",
        "inhalt": "Projektorganisation und Kommunikation, Konfigurationsmanagement, Delivery, UML Modellierung, Agile Methoden, Anforderungsanalyse, System Design, Objektdesign, Implementierung, Muster in der Softwareentwicklung, Testing.",
        "voraussetzungen": "IN0001 Grundlagen der Programmierung",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473910&pOrgNr=1",
        "name": "Existenzgründung",
        "kennung": "IN9017",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme kennen die Studierenden wesentliche Prinzipen der Unternehmensgründung und sind mit den Grundlagen der Businessplanerstellung vertraut. Sie können eine (reale oder fiktive) Geschäftsidee mit Hilfe des Businessplans bis zur Gründungsreife entwickeln. Dabei sind sie in der Lage, die Geschäftsidee und die zentralen Aspekte des Businessplans in kompakter Form einem Publikum verständlich zu erläutern.",
        "inhalt": "1. Rechtsformen\n2. Finanzierung\n3. Geistiges Eigentum\n4. Steuerrecht\n5. Marketing und Vertrieb\n6. Businessplanerstellung",
        "voraussetzungen": "keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3842169&pOrgNr=1",
        "name": "Experimental Audiology",
        "kennung": "CIT433024",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach diesem Kurs sind die Teilnehmer in der Lage / erworbenen Fähigkeiten in Bezug auf:\n- fortgeschrittene Programmierfähigkeiten\n- Erstellung von Reinton- und Sprachaudiogrammen\n- Verständnis des Prozesses der klinischen Entscheidungsfindung bei der Kandidatur für ein Cochlea-Implantat\n- Kenntnis von computergestützten Verfahren für die Operation von Hörimplantaten\n- Fähigkeit, Impedanzmessungen von Cochlea-Implantaten zu analysieren und auszuwerten\n- die Fähigkeit, elektrisch evozierte zusammengesetzte Aktionspotenziale zu analysieren und zu bewerten\n- Verständnis des postoperativen audiologischen Anpassungsprozesses für Cochlea-Implantate",
        "inhalt": "Die Vorlesung (2SWS) wird durch einen praktischen Teil (2SWS) ergänzt, der grundlegende und angewandte Konzepte der experimentellen und klinischen Audiologie abdeckt. Der Kurs beginnt mit einem Überblick über die Hörphysiologie, Pathologien und audiologische Testverfahren, gefolgt von praktischen Übungen zur Audiometrie in der HNO-Abteilung, um die grundlegenden Fähigkeiten zu festigen.\nDarüber hinaus werden die folgenden Themen behandelt:\n- Hörimplantate: klinische Indikation, Chirurgie und audiologische Verfahren\n- Computergestützte Chirurgie für Hörimplantate: präoperative Planung, Navigation und robotergestützte Chirurgie\n- Computergestützte Audiologie mit praktischen Übungen: CT-Analyse (3DSlicer)\n- Auditiv evozierte Potentiale (Hirnstamm)\n- Cochlea-Implantat-Telemetrie: elektrische Impedanzen und eCAP mit praktischen Übungen\n- Postoperative Aktivierung und Anpassung von Cochlea-Implantaten",
        "voraussetzungen": "Grundkenntnisse in Matlab oder Python\nGrundlagen der digitalen Signalverarbeitung",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1865608&pOrgNr=1",
        "name": "Formale Methoden für Cyber-Physical Systems",
        "kennung": "IN2383",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After attending the module, you are able to verify, control, observe, and identify cyber-physical systems in a provably correct way by using formal methods. The material is taught at a level that enables you to apply the methods for real problems or start a research project on formal methods for cyber-physical systems. In particular, you will acquire the following skills:\n\n- You understand the benefits of formal methods compared to conventional methods which do not prove properties.\n- You can apply interval arithmetic and bound evaluations of functions using Taylor models.\n- You can construct set representations for intervals, zonotopes, ellipsoids, polytopes, and non-convex sets.\n- You can convert set-representations exactly or in an over-approximative way.\n- You can compute set-based operations, such as linear maps, Minkowski sum, or convex hull.\n- You can write software to propagate reachable sets of linear, nonlinear, and hybrid systems.\n- You can abstract dynamical systems to simpler descriptions and compute the associated abstraction error.\n- You can create solutions to verify cyber-physical systems during runtime.\n- You can safeguard reinforcement learning techniques using formal methods.\n- You can automatically synthesize formally-correct controllers adhering to input and state constraints.\n- You can integrate reachability analysis in model predictive control to design robust and adaptive controllers.\n- You can estimate the set of possible states using set-based observers.\n- You understand the difference between the set-membership approach and the interval-observer approach for set-based observers.\n- You can check whether a model encloses all real behaviors.\n- You can program solutions to add uncertainty to models so that they include all observed behaviors.",
        "inhalt": "In many modern systems, computing elements are tightly connected with physical entities for which the term \"cyber-physical systems\" has been established in recent years. Examples are automated vehicles, surgical robots, smart grids, and collaborative human-robot manufacturing.\n\nBecause cyber-physical systems are becoming increasingly safety-critical due to the ongoing trend towards deeper autonomy, formal methods that prove the correct behavior of systems are gaining importance. This lecture teaches state-of-the-art formal methods by combining theory and hands-on programming sessions.\n\n- Preliminaries: Set representations and operations, including interval arithmetic and Taylor models\n- Formal verification using reachability analysis; considered system classes: linear systems, nonlinear systems, hybrid systems\n- Online verification in uncertain and dynamic environments\n- Safe reinforcement learning\n- Correct-by-construction controller design\n- Robust model predictive control\n- Set-based observers: set-membership approach and interval-observer approach\n- Conformance checking for system identification: observer-based approaches and reachability-based approaches",
        "voraussetzungen": "Cyber-Physical Systems (IN2305)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2702972&pOrgNr=1",
        "name": "Fortgeschrittene Konzepte der nichtlinearen Regelung",
        "kennung": "EI71080",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Es wird den Studierenden eine Vertiefung im Forschungsgebiet der nichtlinearen Regelungssysteme ermöglicht und der aktuelle Stand der Forschung kennengelernt. Nach Abschluss des Moduls sind Studierende in der Lage aktuelle Publikationen auf ihre Einordnung in den Stand der Technik zu analysieren und deren Beitrag zu bewerten.\nDabei werden Studierende methodisch auf eine wissenschaftliche Arbeitsweise vorbereitet werden und haben bei Abschluss des Moduls gelernt eine eigene Publikation und einen Vortrag zu entwickeln. Es wird ein Flipped Classroom Ansatz verfolgt.",
        "inhalt": "Ausgewählte forschungsnahe Themen der nichtlinearen Regelungstheorie:\nSystem Analysis and Identification: Nonlinear System Identification, Stability Concepts, Nonlinear Model Order Reduction;\nController Design: Lyapunov Methods, Robust Control and Perturbed Systems, Higher-order Sliding Mode Control, Nonlinear Observers, Geometric Control, Constrained Control;\nDemanding System Classes: Control of Switched and Hybrid Systems, Control of Distributed Parameter Systems, Control of Nonholonomic Systems, Control of Port-Hamiltonian Systems\nOptimization and Leaning in Control: Game Theory in Control, Robust and Stochastic Optimal Control, Data-Driven Nonlinear Control;",
        "voraussetzungen": "Dynamische Systeme",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=889358&pOrgNr=1",
        "name": "Fortgeschrittene Konzepte der Wahrnehmung für Robotersysteme",
        "kennung": "EI7623",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Teilnahme an den Modulveranstaltungen kennen die Studenten die wesentlichen Komponenten und Konzepte robotischer Perzeptionssysteme und sind in der Lage Wahrnehmungsaufgaben für autonome (Roboter-) Systeme zu analysieren sowie das passende Perzeptionssystem zu konzipieren.",
        "inhalt": "Einführung: Rolle der Wahrnehmung in autonomen und semiautonomen (Roboter-)Systemen\n\n- Sensortechnologien für robotische Wahrnehmungssysteme\n- Schwächen und Stärken unterschiedlicher Sensoren\n- Umgang mit unsicherer Information\n- Sensordatenfusion und Zustandsschätzung\n- Modellierung von Sensoren\n- Statische und dynamische Umgebungs- und Szenenmodelle\n- Wahrnehmung als kognitiver Prozess",
        "voraussetzungen": "Programmieren in C/C++\nGrundkenntnisse der Robotik\nGrundkenntnisse der Bildverarbeitung\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nGrundlagen intelligenter Roboter\nProjektkurs C++",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4011456&pOrgNr=1",
        "name": "Foundations of Modern Robotics",
        "kennung": "CIT433028",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students will have learned how to efficiently model robotic systems and simulate their motion. Also, they are able to use state-of-the-art and advanced planning and control algorithms to control robots in the environment. also, they will have learned how to use state-of-the-art robotics software for robotics projects",
        "inhalt": "Chapter 1: Introduction\nWhat is robotics?\nHistory of robotics\nDifferent types of robots\nSensors and actuators\n\nChapter 2: Configuration space\nDegrees of freedom\nTopology and representation\nHolonomy and non-holonomy\n\nChapter 3: Rigid-Body motion\nManifold and Lie Algebra\nExponential coordinates and Rotation Matrices\nHomogeneous Transformation Matrices\nTwists and Wrenches\n\nChapter 4: Forward Kinematics\nProduct of Exponentials Formula\nSpace and Body Jacobian\nStatics of Open Chains\nSingularity Analysis\nManipulability\n\nChapter 5: Inverse Kinematics\nAnalytic Inverse Kinematics\nNumerical Inverse Kinematics\nInverse Velocity Kinematics\n\nChapter 6: Dynamics\nLagrangian Formulation\nNewton–Euler Inverse Dynamics\nDynamics in the Task Space\nConstrained Dynamics\nActuation, Gearing, and Friction\n\nChapter 7: Planning\nGraphs and trees\nComplete Path Planners\nSampling Methods\nVirtual Potential Fields\nAdvanced topics: Optimization-based planning\n\nChapter 8: Control\nMotion control\nForce control\nHybrid Force/Torque control\nImpedance control\n\nChapter 9: Advanced topics\nFloating-base systems\nWheeled systems\ncontact-rich locomotion and manipulation",
        "voraussetzungen": "The course is fully self-contained. However, programming in Python is necessary, as several tutorials will be delivered during the semester on using the state-of-the-art libraries for robotics.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3106358&pOrgNr=1",
        "name": "Fundamentals of Artificial Intelligence",
        "kennung": "IN2406",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After attending the module, you are able to create artificial intelligence on a basic level using search techniques, logics, probability theory and decision theory. Your learned abilities will be the foundation for more advanced topics in artificial intelligence. In particular, you will acquire the following skills:\n- You can analyze problems of artificial intelligence and judge how difficult it is to solve them.\n- You can recall the basic concepts of intelligent agents and know possible task environments.\n- You can formalize, apply, and understand search problems.\n- You understand the difference between constraint satisfaction and classical search problems as well as apply and evaluate various constraint satisfaction approaches.\n- You can critically assess the advantages and disadvantages of logics in artificial intelligence.\n- You can formalize problems using propositional and first-order logic.\n- You can apply automatic reasoning techniques in propositional and first-order logic.\n- You understand the advantages and disadvantages of probabilistic and logic-based reasoning.\n- You can apply and critically asses methods for probabilistic reasoning with Bayesian networks and Hidden Markov Models.\n- You understand and know how to compute rational decisions.\n- You have a basic understanding on how a machine learns.\n- You know the basic areas and concepts in robotics.",
        "inhalt": "- Task environments and the structure of intelligent agents.\n- Solving problems by searching: breadth-first search, uniform-cost search, depth-first search, depth-limited search, iterative deepening search, greedy best-first search, A* search.\n- Constraint satisfaction problems: defining constraint satisfaction problems, backtracking search for constraint satisfaction problems, heuristics for backtracking search, interleaving search and inference, the structure of constraint satisfaction problems.\n- Logical agents: propositional logic, propositional theorem proving, syntax and semantics of first-order logic, using first-order logic, knowledge engineering in first-order logic, reducing first-order inference to propositional inference, unification and lifting, forward chaining, backward chaining, resolution.\n- Bayesian networks: acting under uncertainty, basics of probability theory, Bayesian networks, inference in Bayesian networks, approximate inference in Bayesian networks.\n- Hidden Markov models: time and uncertainty, inference in hidden Markov models (filtering, prediction, smoothing, most likely explanation), approximate inference in hidden Markov models.\n- Rational decisions: introduction to utility theory, utility functions, decision networks, the value of information, Markov decision processes, value iteration, policy iteration, partially observable Markov decision processes.\n- Learning: types of learning, supervised learning, learning decision trees, reinforcement learning.\n- Introduction to robotics: robot hardware, robotic perception, path planning, planning uncertain movements, control of movements, application domains.",
        "voraussetzungen": "Previous attendance of\n- IN0007 Fundamentals of Algorithms and Data Structures\n- IN0015 Discrete Structures\n- IN0018 Discrete Probability Theory\nis beneficial. However, all content is taught from ground up and the listed lectures are not essential. Students who have not attended these lectures will have to invest additional time.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4038729&pOrgNr=1",
        "name": "Fundamentals of CMOS Technology for Analog Design and Standard Cells",
        "kennung": "CIT433030",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students know and understand the fundamental principles of CMOS technology. How different technologies (e.g., planer MOSFET, FDSOI, FinFET, nanosheet, etc.) impact the figure of merits of circuits. Students obtain a comprehensive knowledge and solid understanding of how standard cells work from analog and digital perspectives. Students know and understand the impact of variability, temperature, voltage on the reliability and performance of analog circuits and standard cells. In addition, student know in detail the key electrical parameters of transistors and how they impact circuits.",
        "inhalt": "Fundamentals in CMOS technology.\nFundamentals in standard cell design from both analog and digital perspective.\nBasic principles of MOSFET operations along with the key electrical parameters.\nFundamentals in variability and temperature effects on transistor's operation and performance of analog circuits.\nBasics in layout for standard cells.\nBasics of building standard cell libraries",
        "voraussetzungen": "Basic knowledge in circuits\nBasic knowledge in transistors",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3838717&pOrgNr=1",
        "name": "Fundamentals of Foundation Models",
        "kennung": "CIT433021",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module students know the fundaments of foundation models\nsuch as LLMs, CLIP, and image generating models, and how to train, fine-tune, and work with\nsuch models. Students are able to (i) apply advanced and build new foundation models by\nmodifying existing ones (ii) tune and work with optimization algorithms for training such models,\n(iii) be able to leverage existing models through fine-tuning, and (iv) understand\ndata-requirements and dependencies.",
        "inhalt": "Foundation models are machine learning models that are trained on large amounts of data often\nin an un-supervised manner, and are then fine-tuned to perform a given or a wide range of\ntasks. Examples of foundation models are large language models like generative pretrained\ntransformers (GPT), and multi-modal models such as Contrastive Language–Image Pretraining\n(CLIP), as well as image generating models such as dalle-e and stable diffusion.\nIn this course, students will learn technical aspects about foundation models: what foundation\nmodels are, how they work, and how they are trained and fine-tuned. We discuss foundations\nmodels for text (GPT), multi-modal models (CLIP), and image generation models (stable\ndiffusion). Those models are typically trained on large sets of data, we will discuss the\nengineering challenges and how to train such models on multiple nodes. For downstream tasks\nthose models are fine-tuned and aligned. We will discuss such fine-tuning and alignment\nstrategies. Finally, we will discuss tools like scaling laws for working with and thinking about\nfoundation models, as well as data aspects.",
        "voraussetzungen": "An introduction to machine learning, or a course like machine learning and optimization.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1534926&pOrgNr=1",
        "name": "Fundamentals of Human-Centered Robotics",
        "kennung": "EI04014",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls sind die Studierenden in der Lage die verschiedenen Methoden und Technologien der sicheren physikalischen Mensch-Roboter-Interaktion zu verstehen und zu bewerten. Sie wissen die theoretischen Grundlagen der Robotersteuerung für eine sichere Mensch-Roboter-Interaktion anzuwenden. Sie können selbst Programme von Robotern auf den Grundlagen neuester Methoden zur globalen Bewegungsplanung in dynamischen Umgebungen entwickeln. Darüber hinaus haben sie einen Überblick über Bewegungsplanungsalgorithmen zur Kollisionsvermeidung und können diese praktisch in der Robotik umsetzen. Sie könne, von einer spezifischen Problemstellung ausgehend, sichere und menschen-freundliche Programme zur physikalischen Mensch-Roboter-Interaktion entwickeln und praktisch umsetzen und evaluieren.",
        "inhalt": "Die Vorlesung Human-Centered Robotics umfasst eine gründliche Einführung in die Technologie und die intelligente Steuerung von kollaborativen Robotersystemen. Die theoretischen Grundlagen und Anwendungsmöglichkeiten von interagierenden Robotern werden ausführlich diskutiert. Tutorials vertiefen das konzeptionelle Verständnis der interaktiven Robotik und der entsprechenden Softwaretools. Die Studenten lernen die Grundlagen der Robotersicherheit, der menschenfreundlichen, KI-basierten Aufgaben- und Wegplanung in dynamischen Umgebungen. Um praktische Erfahrungen zu sammeln und die Kurskonzepte in modernster Robotertechnik anzuwenden, werden Robothons angeboten, die darauf abzielen, reale Herausforderungen mit hochmotivierten Studierendenteams aus 4-6 Mitgliedern aus verschiedenen Disziplinen zu lösen.\nDie Kursskizze ist unten abgebildet.\n\nI. Einführung\n- Eine kurze Geschichte der Robotik\n- Was ist menschenfreundliche Robotik?\n\nII. Mechanisches Design und dynamische Modellierung für Sicherheit und Leistung\n- Steife Roboter\n- Roboter mit flexiblen Elementen\n- Intrinsisch nachgiebige Roboter\n- Sicherheit für die physische Mensch-Roboter-Interaktion\n\nIII. Roboterregelung für unbekannte Umgebungen und Mensch-Roboter-Interaktion\n- Perzeption und Aktuierung für die interaktive Robotik\n- Bewegungssteuerung\n- Kraft- und Impedanzregelung\n- Kollisionserkennung und -reaktion\n\nIV. Echtzeit-Bewegungsplanung\n- Echtzeit-Trajektorienplanung\n- Umgebungserfassung und -wahrnehmung\n- reaktive Bewegungsplanung in Echtzeit und Kollisionsvermeidung\n- Hierarchische Bewegungssteuerung\n\n\nDie Übungen konzentrieren sich auf folgende Themen:\n- Robotermodellierung - Einführung in die Modellierung von starren und flexiblen Gelenkrobotern\n- Robotersteuerung - Einführung in die angewandte Robotersteuerung in dynamischen Umgebungen mit Fokus auf die Sicherheit des Menschen.\n- Bewegungsplanung - Entwurf und Durchführung einer sicheren dynamischen Trajektorienplanung\n\nWährend des Robothon sammeln die Studenten praktische Erfahrungen bei der Lösung realer Probleme mit Robotersystemen. Die Studierenden arbeiten in interdisziplinären Teams zusammen, in denen jedes Team eine gewünschte Roboteraufgabe zur Umsetzung auswählt, wobei der Schwerpunkt auf der Zusammenarbeit zwischen Mensch und Roboter liegt. Die Studierenden sind verantwortlich für die Leitung des gesamten Projekts, die Erstellung des Projektplans, die Durchführung des Projekts in einem interdisziplinären Team, die termingerechte Fertigstellung des Projekts und die Präsentation der Ergebnisse vor den Kursteilnehmern. Projektbeispiele aus früheren Robothons in Hannover finden Sie unter: https://www.roboterfabrik.uni-hannover.de",
        "voraussetzungen": "Regelungssysteme 1\nRobotik",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1698301&pOrgNr=1",
        "name": "Fundamentals of Human-Centered Robotics",
        "kennung": "IN2371",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls sind die Studierenden in der Lage die verschiedenen Methoden und Technologien der sicheren physikalischen Mensch-Roboter-Interaktion zu verstehen und zu bewerten. Sie wissen die theoretischen Grundlagen der Robotersteuerung für eine sichere Mensch-Roboter-Interaktion anzuwenden. Sie können selbst Programme von Robotern auf den Grundlagen neuester Methoden zur globalen Bewegungsplanung in dynamischen Umgebungen entwickeln. Darüber hinaus haben sie einen Überblick über Bewegungsplanungsalgorithmen zur Kollisionsvermeidung und können diese praktisch in der Robotik umsetzen. Sie könne, von einer spezifischen Problemstellung ausgehend, sichere und menschen-freundliche Programme zur physikalischen Mensch-Roboter-Interaktion entwickeln und praktisch umsetzen und evaluieren.",
        "inhalt": "Die Vorlesung Human-Centered Robotics umfasst eine gründliche Einführung in die Technologie und die intelligente Steuerung von kollaborativen Robotersystemen. Die theoretischen Grundlagen und Anwendungsmöglichkeiten von interagierenden Robotern werden ausführlich diskutiert. Tutorials vertiefen das konzeptionelle Verständnis der interaktiven Robotik und der entsprechenden Softwaretools. Die Studenten lernen die Grundlagen der Robotersicherheit, der menschenfreundlichen, KI-basierten Aufgaben- und Wegplanung in dynamischen Umgebungen. Um praktische Erfahrungen zu sammeln und die Kurskonzepte in modernster Robotertechnik anzuwenden, werden Robothons angeboten, die darauf abzielen, reale Herausforderungen mit hochmotivierten Studierendenteams aus 4-6 Mitgliedern aus verschiedenen Disziplinen zu lösen.\nDie Kursskizze ist unten abgebildet.\n\nI. Einführung\n- Eine kurze Geschichte der Robotik\n- Was ist menschenfreundliche Robotik?\n\nII. Mechanisches Design und dynamische Modellierung für Sicherheit und Leistung\n- Steife Roboter\n- Roboter mit flexiblen Elementen\n- Intrinsisch nachgiebige Roboter\n- Sicherheit für die physische Mensch-Roboter-Interaktion\n\nIII. Roboterregelung für unbekannte Umgebungen und Mensch-Roboter-Interaktion\n- Perzeption und Aktuierung für die interaktive Robotik\n- Bewegungssteuerung\n- Kraft- und Impedanzregelung\n- Kollisionserkennung und -reaktion\n\nIV. Echtzeit-Bewegungsplanung\n- Echtzeit-Trajektorienplanung\n- Umgebungserfassung und -wahrnehmung\n- reaktive Bewegungsplanung in Echtzeit und Kollisionsvermeidung\n- Hierarchische Bewegungssteuerung\n\n\nDie Übungen konzentrieren sich auf folgende Themen:\n- Robotermodellierung - Einführung in die Modellierung von starren und flexiblen Gelenkrobotern\n- Robotersteuerung - Einführung in die angewandte Robotersteuerung in dynamischen Umgebungen mit Fokus auf die Sicherheit des Menschen.\n- Bewegungsplanung - Entwurf und Durchführung einer sicheren dynamischen Trajektorienplanung\n\nWährend des Robothon sammeln die Studenten praktische Erfahrungen bei der Lösung realer Probleme mit Robotersystemen. Die Studierenden arbeiten in interdisziplinären Teams zusammen, in denen jedes Team eine gewünschte Roboteraufgabe zur Umsetzung auswählt, wobei der Schwerpunkt auf der Zusammenarbeit zwischen Mensch und Roboter liegt. Die Studierenden sind verantwortlich für die Leitung des gesamten Projekts, die Erstellung des Projektplans, die Durchführung des Projekts in einem interdisziplinären Team, die termingerechte Fertigstellung des Projekts und die Präsentation der Ergebnisse vor den Kursteilnehmern. Projektbeispiele aus früheren Robothons in Hannover finden Sie unter: https://www.roboterfabrik.uni-hannover.de",
        "voraussetzungen": "Regelungssysteme 1\nRobotik",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1351817&pOrgNr=1",
        "name": "Gassensorik für biomedizinische Anwendungen",
        "kennung": "EI7605",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI7578 FR07/13",
        "lernergebnisse": "Nach der Teilnahme am Modul sind die Studierenden in der Lage,\n1. die Anatomie und Physiologie der äußeren und inneren Atmung mit ihren biomechanischen und biochemischen Prozessen korrekt zu beschreiben,\n2. pathologische und gesunde Zustände der Atmung und der Atmungsorgane zu unterscheiden,\n3. die Sensorik für Parameter des Gasflusses und des Atemgases zu charakterisieren,\n4. die Implementierung dieser Sensorik in medizinisch-diagnostische Anwendungen zu beurteilen.",
        "inhalt": "Das Modul vermittelt das Wissen über Verfahren zur Bestimmung von medizinisch relevanten Parametern im Atemgas. Folgende Kapitel werden behandelt:\nKapitel 1 – Physik und Chemie der Atmosphäre\nKapitel 2 – Anatomie und Physiologie der Atemwege\nKapitel 3 – Gasaustausch in Lunge und Körpergeweben\nKapitel 4 – Infektionen von Lungen und Atemwegsorganen\nKapitel 5 – Metabolische Abbauprodukte im Atemgas\nKapitel 6 – Die Messungen von Gasmassenfluss\nKapitel 7 – Amperometrische Messverfahren am Atemgas (Elektrochemie)\nKapitel 8 – Resistive Messverfahren (Elektrochemie)\nKapitel 9 – Kapazitive Messverfahren (Elektrochemie)\nKapitel 10 – Impedanz- bzw. Kapazitätsspektroskopie\nKapitel 11 – Massenspektroskopie und optische Verfahren",
        "voraussetzungen": "Grundlagen der Experimentalphysik, Mathematik von Differentialgleichungen",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1441072&pOrgNr=1",
        "name": "Grundlagen der digitalen, analogen und Quanten Computer",
        "kennung": "EI71025",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studenten mit den Grundlagen der digitalen, analogen und Quanten Computer vertraut. Sie kennen u.a. die Grenzen digitaler Computer und können für die behandelten Problemklassen entscheiden, welche Systeme nur auf einem analogen Computer implementiert werden können. Sie sind mit der neuen Theorie des Analog- und Quantencomputers vertraut und können für Basisprobleme entsprechende Implementierungen auf diesen neuen Rechnerplattformen entwicklen.",
        "inhalt": "In der Vorlesung werden die Grundlagen des Turing Computers als Basis aller digitalen Computer entwickelt. Es werden Turing berechenbare Funktionen vollständig charakterisiert. Darauf aufbauend wird die berechenbare Analysis als Basis für alle Problemstellungen, die mit Hilfe eines Turing Computers gelöst werden können, entwickelt. Für zentrale Systeme der Informationstechnik wie zum Beispiel Fourier Transformation, Hilbert Transformation und Differentialgleichungen wird unter Benutzung mathematischer Techniken gezeigt, dass diese im Allgemeinen nicht auf Turing Computer berechnet werden können. Im Anschluß werden die physikalischen und mathematischen Gundlagen von universellen analog Computern entwickelt. Für die Fourier Transformation, Hilbert Transformation und Differentialgleichungen werden Implementierungen auf einem universellen analog Computer entwickelt. Es wird weiterhin gezeigt, dass jeder Turing Computer auf einem analog Computer implementiert werden kann. Damit ist der universelle analog Computer sehr viel leistungsfähiger als der Turing Computer. Im Anschluß werden die physikalischen und mathematischen Grundlagen des Quanten Computers als Weiterentwicklung klassischer analog Computer entwickelt.",
        "voraussetzungen": "Analysis 1-3, Signaldarstellung\ngrundlegende Kenntnisse in Signal- und Systemtheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1633309&pOrgNr=1",
        "name": "Grundlagen der Elektrotechnik 1",
        "kennung": "EI10014",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, eine optimierte Realisierung endlicher Automaten zu entwerfen, und technische wie wirtschaftliche Implikationen beim Entwurf digitaler Schaltungen zu bewerten. Ferner erwerben die Studierenden ein Grundverständnis der Funktionsweise von MOS-Transistoren, von CMOS Schaltungen und von Mikroprozessoren.",
        "inhalt": "Das Modul vermittelt ein grundlegendes Verständnis der Bedeutung digitaler Schaltungen, dem Moore'schen Gesetz und der Architektur von Mikroprozessoren.\n\nFolgende Themengruppen werden behandelt:\n* Rechnen im Binärsystem, Konversion von Zahlensystemen, Wertebereich, Festkomma, Fließkomma,\n* Boole'sche Algebra, kombinatorische und sequentielle Logik, arithmetische Operatoren, endliche Automaten, Daten- und Kontrollpfad, synchrone Schaltungen, Zeitanalyse, Pipelining und Parallelisierung,\n* MOSFET Transistoren, CMOS Logikschaltungen, Zeitverhalten, Verlustleistung,\n* RISC Prozessor Grundlagen, Rechenwerk, Speicherhierarchie, Datenpfadpipeline, Performanz, Datenabhängigkeiten, Branch Prediction, spekulative Ausführung.",
        "voraussetzungen": "Abiturwissen in Physik und Mathematik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1235412&pOrgNr=1",
        "name": "Grundlagen der IT-Sicherheit",
        "kennung": "EI04002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Studierende können nach der erfolgreichen Teilnahme an diesem Modul grundlegende Begriffe und Bereiche der IT Sicherheit erklären. Sie können Angriffsmöglichkeiten auf IT Systeme und entsprechende Gegenmaßnahmen charakterisieren. Sie verstehen kryptographische Methoden, ihre Implementierungskomplexitäten und ihre Bedeutung für die IT-Sicherheit. Sie sind imstande Authentifizierungsmechanismen zu erklären und zu klassifizieren. Sie sind in der Lage die Prinzipien der Kommunikations-, Netzwerk- und Internetsicherheit anzuwenden und können Sicherheitsmodelle und Zugriffs- und Informationsflusskontrollen erklären. Weiterhin verstehen sie die Organisation von IT Sicherheitsmaßnahmen im Unternehmen (z.B. durch Risiko Analysen). Studierende können die Möglichkeiten und Grenzen von IT Sicherheitsmaßnahmen einschätzen und grundlegende Sicherheitsaspekte von IT Systemen analysieren.",
        "inhalt": "Um einen Überblick der IT Sicherheit zu vermitteln werden folgende Themen behandelt:\n\nMotivation für IT-Sicherheit\nGrundbegriffe der IT-Sicherheit\nComputer Malware\nKryptographische Grundlagen\nAuthentisierung\nBiometrie\nZugriffskontrolle\nNetzwerk- und Internetsicherheit\nPhysikalische Sicherheit / Physikalische Angriffe\nSicherheitsevaluierung und Zertifizierung\nEinführung in den Datenschutz",
        "voraussetzungen": "Grundverständnis für Mathematik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=454185&pOrgNr=1",
        "name": "Grundlagen der Programmierung",
        "kennung": "IN1501",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer kennen die grundlegenden Konzepte zur systematischen Entwicklung von Programmen.\nSie können überschaubare Probleme in UML modellieren und in ein Java-Programm umsetzen. Sie beherrschen die wichtigsten Sprachkonstrukte von Java und können andere imperative, objektorientierte oder funktionale Programmiersprachen eigenständig erlernen.",
        "inhalt": "- Information und ihre Repräsentation\n- Klassen, Schnittstellen und Algebren\n- grundlegende Konzepte\n++ funktionaler Programmierung, einschl. Rekursion und Induktion\n++ objektbasierter und imperativer Programmierung\n++ objektorientierter Programmierung\n- Datenstrukturen und Algorithmen:\n++ Reihungen und Listen\n++ Darstellung von Mengen und ihren Operationen\n- optional: endliche Automaten\nDie verwendete Programmiersprache ist Java.",
        "voraussetzungen": "Keine",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1707622&pOrgNr=1",
        "name": "Grundlagen der Wavelet- und Zeit-Frequenz Analyse",
        "kennung": "EI04019",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls haben die Studierenden fundierte theoretische Kenntnisse in der Wavelet- und Zeit-Frequenz-Analyse. Sie kenne Vor- und Nachteile der unterschiedlichen Signaldarstellungen und Transformationen, wissen wie sie mit den erlernten Transformationen Signale analysieren und synthetisieren können. Die Studierenden beherrschen Methoden zur Konstruktionen geeigneter Wavelets und Gabor frames, kennen grundlegende Anwendungen, in denen die Transformationen eingesetzt werden und sie können einfache Anwendungen in MATLAB realisieren.",
        "inhalt": "In der klassischen Fourier-Analyse werden Signale als Überlagerung trigonometrischer Funktionen dargestellt. Diese Methoden sind besonders vorteilhaft für die Beschreibung stationärer Eigenschaften von Signalen. Für veränderliche Signale sind hingegen Methoden der Wavelet- oder zeit-frequenz-Analyse meist deutlich besser geeignet. Diese Methoden stellen die Signale als Überlagerungen von Signalbausteinen dar, die im Zeit- und Frequenzbereich gut begrenzt sind und die mittels Skalierung, Verschiebung, und Modulation aus einer Grundfunktion gewonnen werden. Daher sind diese Methoden deutlich flexibler und lassen sich besser an spezielle Anwendungen anpassen. Andererseits ist die Konstruktion von „guten“ Grundfunktionen im Allgemeinen eine herausfordernde und nicht-triviale Aufgabe.\nDiese Vorlesung gibt eine theoretische Einführung in die Prinzipien und Methoden sowohl der kontinuierlichen als auch der diskreten Wavelet- und Zeit-Frequenzanalyse. Insbesondere werden die folgen Themen ausführlich besprochen: Haar-Systeme, Haar-Basen, Haar-Transformation; Multiskalenanalyse; Diskrete Wavelettransformation; Konstruktion von Wavelet Basen; Spline Basen; Zeit-Frequenzdarstellungen; short-time Fourier Transformation; Gabor Frames. Aus praktischer Sicht werden Anwendungen aus den Bereichen der Bildverarbeitung, Kanalschätzung, sowie Radar diskutiert und als Übungen in MATLAB realisiert.",
        "voraussetzungen": "Kenntnisse in linearer Algebra, Analysis und MATLAB.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein: Analysis 1-3, Lineare Algebra, Signaldarstellung",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458318&pOrgNr=1",
        "name": "Grundlagen: Rechnernetze und Verteilte Systeme",
        "kennung": "IN0010",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem Modul \"Grundlagen: Rechnernetze und Verteilte Systeme\" sind die Studierenden in der Lage, die Technologien und Methoden von Rechnernetzen und Verteilten Systemen zu verstehen, und anhand wesentlicher Protokolle der geschichteten Netzarchitektur zu erläutern, welche Protokollmechanismen in den einzelnen Schichten eingesetzt werden, und wie diese funktionieren. Zudem verstehen sie, wie verteilte Anwendungen wie z.B. das World Wide Web mit Hilfe der Internetprotokolle realisiert sind, und wie Rechnernetze aufgebaut sind. Darüber hinaus sind die Studierenden in der Lage, die Leistungsfähigkeit ausgewählter Netze und verteilter Anwendungen zu bestimmen, sowie einzelne Protokollmechanismen zu implementieren.",
        "inhalt": "- Rechnernetze\n++ Überblick: Computernetze und das Internet\n+++ Komponenten (Router, Switches, Clients, Server)\n+++ Aufbau (Topologien, Routing, Pakete gegenüber virtuelle Verbindungen)\n+++ Schichtenmodell (OSI und Internet)\n+++ Geschichtlicher Hintergrund\n++ Schichtenübergreifende Konzepte (innerhalb der Schichten behandelt):\n+++ Adressierung\n+++ Fehlererkennung\n+++ Codierung und Modulation\n+++ Medienzugriffsverfahren\n+++ Flusskontrolle\n+++ Verbindungsmanagement\n+++ Paketvermittlung gegenüber virtuelle Verbindungen\n++ Schichten:\n+++ Anwendungsprotokolle und Anwendungen (application layer)\n++++ Aufgaben und Interface\n++++ Beispiele: HTTP, DNS, SMTP (Mail), Peer-to-Peer-Protokolle\n+++ Transportschicht\n++++ Aufgabe und Interface\n++++ Beispiele: TCP und UDP\n+++ Vermittlungsschicht\n++++ Aufgaben und Interface\n++++ Routing: Link State gegenüber Distance Vector Protokolle\n++++ Adressierung: IP Adressen\n++++ Beispiele: IP, Routing im Internet\n+++ Sicherungsschicht\n++++ Aufgaben und Interface\n++++ Beispiele: Ethernet, Wireless LAN\n+++ Bitübertragungsschicht\n++++ Aufgaben und Interface\n++++ Beispiele\n- Verteilte Systeme:\n++ Middleware, z.B. RPC\n++ Web Services\n- Übergreifende Aufgaben:\n++ Netzmanagement\n++ IT-Sicherheit\n+++ Kryptographische Mechanismen und Dienste\n+++ Authentifizierung, Vertraulichkeit, Integrität\n+++ Protokolle mit Sicherheitsmechanismen, z.B.: IPsec, PGP, Kerberos, SSL, SSH, ...\n+++ Firewalls, Intrusion Detection\n\nInhalt der Übung:\nDie Übung behandelt Rechenaufgaben zur Bestimmung der Leistungsfähigkeit von Protokollen und Mechanismen einzelner Schichten (Physical Layer, Data Link Layer, Network Layer, Transport Layer).\nIn Programmierübungen wird die Implementierung einzelner Protokollmechanismen geübt.",
        "voraussetzungen": "IN0001 Einführung in die Informatik 1, IN0003 Einführung in die Informatik 2 bzw. ab WiSe 2018/19 Funktionale Programmierung und Verifikation, IN0002 Praktikum: Grundlagen der Programmierung",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473871&pOrgNr=1",
        "name": "Grundlagen von Computer Vision",
        "kennung": "IN2133",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "The main goal of the lecture is to develop an image processing system for measurement and control tasks on a robot system, in which real-time capability and accuracy estimation play an essential role. After completing the module, the participants will master the process of image creation and processing, starting with radiometric surface properties, modeling cameras and lens systems, and ending with the image processing algorithms that are used for filtering and abstracting image information. They also master the basics required for 3D reconstruction from binocular arrangements (stereo).",
        "inhalt": "The \"Principles of Computer Vision\" lecture follows the image formation process starting with radiometric surface properties (Lambertian Surfaces, specular surfaces), considering the modeling of cameras and lens systems to image processing algorithms that are used for filtering and abstracting image information. It covers the basics required for 3D reconstruction from binocular systems (stereo), shape from shading and structure-from-motion. Lecture content:\n- Reflective properties of surfaces\n- Camera parameters/camera calibration\n- Filtering. edge detection algorithms,\n- Segmentation algorithms and calculation of camera movement from image projections\n- Matching procedure\n- 3D reconstruction for robot systems",
        "voraussetzungen": "Not specified",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2916139&pOrgNr=1",
        "name": "Grundlagenpraktikum: Rechnerarchitektur",
        "kennung": "IN0005",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, im Kontext moderner Rechensysteme (moderne x86-64 Prozessoren, GPUs) die Performanzcharakteristiken von Programmen zu analysieren, mithilfe dieser Ergebnisse zielgerichtete Optimierungen zu entwickeln und damit auch komplexe Hardware sowohl zeit- als auch energieeffizient zu programmieren und eigene Implementierungen zu bewerten.",
        "inhalt": "- Techniken zur Performanzanalyse\n- Benchmarkingtechniken\n- Profiling-Tools, u.a. perf, gprof, Callgrind\n- Nutzung von Hardware Performance Countern\n- Grundlagen C-Programmierung\n- Datenstrukturen, Funktionen, Strings, Pointer-Arithmetik, I/O\n- Makefiles, Debugging-Techniken, GDB, Assertions\n- Grundlagen Compiler-Optimierungen\n- Rahmenbedingungen: Application Binary Interface, definiertes\nVerhalten\n- Einfluss von Programmannotationen (Pointer-Aliasing, Alignment,\netc.) auf Performanz\n- Grundlegende Modelle zur parallelen Programmierung, Flynn'sche\nKlassifikation\n- Optimierung von Instruktionsparallelismus\n- Spezialisierung im Rahmen der Projektarbeit in einer der folgenden\nBereiche:\n- Ausnutzung von Vektoreinheiten moderner Prozessoren\n- SIMD-Instruktionen in Maschinencode\n- SIMD-Intrinsics in höheren Programmiersprachen\n- Multi-Threading mit Pthreads oder OpenMP\n- Synchronisierung, atomare Operationen\n- Cache-Optimierungen\n- Programmiermodelle für heterogene Systeme (u.a. GPUs, FPGAs)",
        "voraussetzungen": "IN0004: Einführung in die Rechnerarchitektur",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3106362&pOrgNr=1",
        "name": "Hardwaresicherheit",
        "kennung": "IN2407",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmenden die grundlegenden Konzepte, Methoden und Architekturen zum Schutz von eingebetteten Systemen vor Manipulation und physikalischen Angriffen auf einem grundlegenden, praxisorientierten, wissenschaftlichen Niveau. Sie verstehen die Ursachen von Schwachstellen aktueller eingebetteter Systeme, sowie logische und physikalische Methoden zur Ausnutzung dieser Schwachstellen. Weiter können sie die Zusammenhänge zwischen Schutzmechanismen und den damit adressierten Problemen wiedergeben und auf Fallbeispiele anwenden.",
        "inhalt": "Grundlagen der Hardware Security\nArchitektur sicherer eingebetteter Systeme\nSicherheitskonzepte für Mikrocontroller und Prozessoren\nPhysikalische Angriffe auf eingebettete Systeme und Gegenmaßnahmen\nKomponenten für sichere eingebettete Systeme (z.B. PUF, TRNG)\nVorstellung und Diskussion praktischer Beispiele in der Übung",
        "voraussetzungen": "Einführung in die Rechnerarchitektur (IN0004)\nRechensysteme in Einzeldarstellungen: Mikroprozessoren (IN2075)\nIT Sicherheit (IN2209)",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=616730&pOrgNr=1",
        "name": "Humanoid Sensors and Actuators",
        "kennung": "EI7231",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme am Modul sind die Studierenden in der Lage:\n\nA) grundlegende und fortgeschrittene Prinzipien/Funktionsweisen von humanoider Sensorik und Aktorik nach aktuellem Stand der Wissenschaft zu bewerten.\n\nB) humanoide Sensorik und Aktorik in der Nutzung, Integration und Implementierung praktisch anzuwenden.\n\nC) die erworbenen theoretischen und praktischen Erkenntnisse in einem selbständigen Projekt anzuwenden und neue sensorische/aktuatorische Systeme zu entwickeln.",
        "inhalt": "Introduction to sensors and actuators on a humanoid robot:\n\n- Humanoide Sensorik\n- Sensor Prinzipien\n- Signal Aufbereitung\n- Signal Verarbeitung\n\n- Humanoide Aktuatorik\n- Aktuator Typen\n- Aktuator Implementierung\n\n- Humanoide Regelung\n- Regler Typen\n- Regler Auslegung",
        "voraussetzungen": "C/C++ Kenntnisse.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743552&pOrgNr=1",
        "name": "HW/SW Codesign",
        "kennung": "EI70630",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, die Spezifikation und Modellierung von gemischten Hardware- / Softwarelösungen, die optimierte Aufteilung der Teilaufgaben in Hardware- oder Softwarepartitionen und deren Bindung an bestimmte Verarbeitungseinheiten sowie die zeitliche Planung dieser Aufgaben als die Hauptprobleme beim Entwurf von kombinierten HW / SW-Systemen zu verstehen. Sie sind in der Lage, die Standardmethode eines Top-Down-Entwurfsflusses anzuwenden, der aus Spezifikation, Exploration und Verfeinerung besteht.\n\nDarüber hinaus können die Studierenden verschiedene Algorithmen wie hierarchisches Clustering, Gruppenmigration, Simulated Annealing oder Tabu Search für die Partitionierung und verschiedene Algorithmen für statisches und dynamisches Scheduling anwenden, um diese Probleme zu lösen. Darüber hinaus können sie die Designqualität bewerten, die durch die Anwendung dieser Ansätze erreicht wird, und sie auf spezifische Probleme bei der Erstellung eigener SoC-Architekturen zuschneiden.",
        "inhalt": "Das Modul deckt den Entwurfsablauf von einer Systemspezifikation in Form von Funktionsgraphen bis hin zu FPGA-Netzlisten und ausführbarem Objektcode für Mikroprozessoren ab und konzentriert sich insbesondere auf die Aufteilung von Unterfunktionen in einen Software- und einen Hardwareteil eines System-on-Chip ( SoC). Die Hauptthemen sind: Modellierung und Spezifikation von gemischten Hardware- / Softwarelösungen für eingebettete Systeme, Graphpartitionierung und Bindung an Ausführungseinheiten, Ablaufplanung von Aufgaben, Einschätzung der Entwurfsqualität.",
        "voraussetzungen": "Keine speziellen Voraussetzungen.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=965236&pOrgNr=1",
        "name": "Image and Video Compression",
        "kennung": "EI7341",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to apply selected concepts from information theory to video coding. The participants are able to derive the main fundamental bounds of both lossless and lossy compression. The students also gain a deep understanding of modern still image and video compression standards and are able to judge why particular techniques and algorithms are used in theses standards. They are able to evaluate the performace of a proposed image and video compression schemes and predict its complexity.",
        "inhalt": "Theory and practice of digital still image and video compression. Detailed treatment of fundamental concepts and explanation of the relationship to specific algorithms employed in existing and emerging compression standards. Content: Motivation for image and video compression, review of important concepts from Information Theory, scalar and vector quantization, human visual perception, transform coding, resolution pyramids and subband coding, still image compression standards (JPEG, JPEG 2000), interframe coding, differential PCM, motion compensated prediction, video compression standards (H.26x, MPEG x).",
        "voraussetzungen": "Linear Algebra, Digital Signal Processing, Information Theory, Analog and Digital Video Signals\n\nThe following modules should be passed before taking the course:\n- Information Theory and Source Coding\n\nIt is recommended to take the following modules additionally:\n- Image and Video Compression Lab",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1369740&pOrgNr=1",
        "name": "Image and Video Compression Lab",
        "kennung": "EI50291",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to implement a fully functional still image and video compression scheme. They will be able to optimize image and video codecs towards coding efficiency, computational complexity and memory requirements. Additionally, students will be able to judge the performance of video codecs and to understand and evaluate the involved trade-offs.",
        "inhalt": "In the past decade there have been a variety of interesting developments in multimedia representation and communications. It has become very clear that all aspects of media have and will become more and more digital. As a key development with input from many different disciplines, video coding lies at the core of multimedia signal processing. The laboratory provides the participants with a detailed overview of the theoretical background and the implementation of a video coding system. From the ninth week of the course on, each group of students (two people) can choose from divers components to develop one unique video coding/decoding system. In the end of the course all codecs will be presented by the participants and compared with respect to compression ratio, image quality, execution speed, memory consumption and program size.",
        "voraussetzungen": "Fundamentals of Image and Video Compression\nImage and Video Compression",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1629494&pOrgNr=1",
        "name": "Industrielle Bildverarbeitung",
        "kennung": "IN2369",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer der Vorlesung verstehen die wesentlichen Hardware-Komponenten eines industriellen Bildverarbeitungssystems, sowie die Theorie, Datenstrukturen und Implementierung der wichtigsten Algorithmen der industriellen Bildverarbeitung. Sie sind in der Lage, Bildverarbeitungsaufgaben zu analysieren und zu bewerten und können diese Kenntnisse und Fähigkeiten nutzen, um industrielle Bildverarbeitungsanwendungen zu entwickeln.",
        "inhalt": "Die Vorlesung gibt eine detaillierte Beschreibung der praxisrelevanten Methoden und Algorithmen, die zur Lösung von Anwendungen in der industriellen Bildverarbeitung verwendet werden. Die Auswahl der Verfahren orientiert sich an den häufigsten Einsatzgebieten der Bildverarbeitung in der Industrie: Lageerkennung, Form- und Maßprüfung, Beschriftungserkennung und Objekterkennung. Der Schwerpunkt der Vorlesung ist die Beschreibung der Verfahren und ihrer Grundlagen. Beispiele aus der Praxis zeigen die typischen Anwendungen, in denen die vorgestellten Verfahren eingesetzt werden. Im einzelnen werden folgende Themenbereiche behandelt:\n\n- Bildaufnahme\n- Bildverbesserung\n- Segmentation und Merkmalsextraktion\n- Morphologie\n- Kantenextraktion\n- Segmentation und Anpassung von geometrischen Primitiven\n- Kamerakalibrierung\n- Template Matching\n- Stereo-Rekonstruktion\n- Klassifikation\n- Beschriftungserkennung (OCR)\n- Farbbildverarbeitung\n- Hand-Auge-Kalibrierung\n- Objekterkennung",
        "voraussetzungen": "Die Vorlesung setzt ein abgeschlossenes Bachelorstudium in einer Ingenieur- oder Naturwissenschaft voraus. Insbesondere setzt die Vorlesung Kenntnisse der folgenden Gebiete voraus:\n- Lineare Algebra (lineare Transformationen zwischen Vektorräumen in Matrixalgebra)\n- Analysis (Reihen, Differentiation und Integration ein- und zweidimensionaler Funktionen\n- Wahrscheinlichkeitstheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458520&pOrgNr=1",
        "name": "Informatik",
        "kennung": "IN8003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an Vorlesung und Übung sind die Studierenden in der Lage, wichtige Grundbegriffe, Konzepte und Denkweisen der Informatik, speziell objektorientiertes Programmieren, Datenbanken & SQL und grundlegende Algorithmen und Datenstrukturen zu verstehen, zu überblicken und zur Entwicklung eigener Programme mit Datenbankanbindung grundlegend anwenden zu können.",
        "inhalt": "In dem Modul werden beispielhaft folgende Inhalte behandelt:\n- Datenbankmanagementsysteme, ER-Modellierung, relationale Algebra und SQL\n- Java als Programmiersprache:\n++ Grundsätzliche Konstrukte imperativer Programmierung (if, while, for, Arrays etc.)\n++ Objektorientiertes Programmieren (Vererbung, Interfaces, Polymorphie etc.)\n++ Grundlagen von Exception Handling und Generics\n++ Code-Conventions\n++ Java Klassenbibliothek\n- Grundlagen von Visual Basic for Applications\n- Grundlegende Algorithmen und Datenstrukturen:\n++ Algorithmusbegriff, Komplexität\n++ Datenstrukturen für Sequenzen (verkettete Listen, Arrays, Stacks & Queues)\n++ Rekursion\n++ Hashing (Chaining, Probing)\n++ Suchen (Binäre Suche, balancierte Suchbäume)\n++ Sortieren (Insertion-Sort, Selection-Sort, Merge-Sort)",
        "voraussetzungen": "Empfohlene Voraussetzungen sind die Mathematikmodule des ersten Studienjahrs der beteiligten Studiengänge.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=556992&pOrgNr=1",
        "name": "Informatik I für Ingenieurwissenschaften",
        "kennung": "IN8011",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Informatik mit Blick auf die Programmierung auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau. Sie sind dann in der Lage, in C oder einer objektorientierten Sprache wie C++ überschaubare algorithmische Probleme zu lösen und einfache Anwendungen zu programmieren.",
        "inhalt": "Die Vorlesung soll Grundkonzepte objektorientierter Programmiersprachen vermitteln und in grundlegende Techniken der Programmierung einführen. Am Beispiel einer modernen objektorientierten Programmiersprache wie C++ sollen Kontrollstrukturen wie Iteration und Rekursion sowie einfache Ansätze zur Strukturierung von Programmen durch Klassen und Vererbung behandelt werden. Es werden einfache Datenstrukturen wie Felder, Listen, Bäume und Hash Maps eingeführt und Algorithmen zum Lösen elementarer Probleme wie Sortieren oder Suchen behandelt. Zu Beginn wird in kompakter Form in das Arbeiten mit Werkzeugen des Wissenschaftlichen Rechnens wie Maple oder Matlab eingeführt.",
        "voraussetzungen": "keine spezifischen Voraussetzungen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743547&pOrgNr=1",
        "name": "Information Theory",
        "kennung": "EI70350",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module the student is able to\n• Explain the basic quantities of information theory, i.e., entropy, mutual information, informational divergence,\n• Explain important properties of these quantities, e.g., chain rule, bounds, convexity\n• Apply information theory to measure the quality of the processing blocks (e.g., data compression, channel coding) of a digital transmitter and receiver, and the quality of the channel (capacity)\n• Understand scientific documents in information theory.",
        "inhalt": "Review of probability theory. Uncertainty, mutual information, informational divergence, Fano's inequality, convexity.\nSource coding: Discrete Memoryless Sources, Prefix-Free codes, Shannon-Fano codes, Huffman codes, Tunstall codes, Discrete Stationary Sources, Elias-Willems universal souce coding. Typical sequences and sets. Channel coding: Discrete Memoryless Channnels, Capacity. Relative entropy and additive white Gaussian noise channels.",
        "voraussetzungen": "Basic principles of probability theory and statistics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1329457&pOrgNr=1",
        "name": "Informationstheoretische Grundlagen der Informationsforensik und biometrischen Sicherheit",
        "kennung": "EI73441",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende der Vorlesung kennen die Studenten die wichtigsten Modelle und Analysemethoden zur Informationsforensik und biometrischen Sicherheit. Sie haben wichtige Basisprotokolle für diese Anwendungen kennengelernt. Sie kennen die Beweise zur Charakterisierung der erreichbaren Sicherheitsrate. Sie haben Techniken zum Schutz der biometrischen Identität kennen gelernt und können entsprechende Beweise hierfür entwickeln.",
        "inhalt": "Die Vorlesung gibt eine Einführung in die informationstheoretischen Methoden der Informationsforensik und der biometrischen Sicherheit. Es werden grundlegend informationstheoretische Quellenmodelle eingeführt. Diese Modelle erlauben es Konzepte zur Messung der Sicherheit und zum Schutz der biometrischen Identität einzuführen. Es werden weiterhin unterschiedliche Attacken auf biometrische Sicherheitssysteme eingeführt und Schutzmechanismen diskutiert.",
        "voraussetzungen": "Voraussetzungen:\n- Grundlagen der Nachrichtentechnik und Informationstheorie\n- Grundlagen der Wahrscheinlichkeitstheorie\n- Mathematisches Interesse\n\nEs wird empfohlen folgende Fächer zuvor abgelegt zu haben:\n- Nachrichtentechnik\n- Information Theorie\n- Mathematik 1-4",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1366633&pOrgNr=1",
        "name": "Informationstheoretische Sicherheit",
        "kennung": "EI73451",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls kennen die Studierenden die wichtigsten Modelle und Konzepte der informationstheoretischen Sicherheit, und sie können die Grenzen und Möglichkeiten der wichstigsten kryptografischen Verfahren beurteilen und abschätzen.\nDie Studierenden haben ein Verständnis für kooperative Techniken in drahtlosen Mehrnutzersystemen entwickelt, sie sind in der Lage einen aktuellen wissenschaftlichen Beitrag zu verstehen und zu analysieren, und sie können dazu einen wissenschaftlichen Vortrag halten.",
        "inhalt": "Die Vorlesung gibt eine Einführung in das Gebiet der informationstheoretischen Sicherheit. Dazu werden neue Konzepte zur Modellierung von Sicherheit entwickelt, es werden die Grenzen von kryptografischen Verfahren diskutiert, es werden Kanalmodelle für eine sichere Kommunikation in Netzen entwickelt, es werden Modelle über mögliche Attacken von Abhörern eingeführt, und es werden Übertragungsverfahren, die beweisbar die Sicherheit garantieren, entwickelt. Für einfache Kommunikationssysteme werden Ansätze dargestellt, wie sichere Kommunikation in einen Netzwerk eingebettet werden kann.",
        "voraussetzungen": "Voraussetzungen:\n- Grundlagen der Nachrichtentechnik und Informationstheorie\n- Grundlagen der Wahrscheinlichkeitstheorie\n- Mathematisches Interesse",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3567008&pOrgNr=1",
        "name": "Innovative Computing for AI",
        "kennung": "CIT4330016",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students know and understand the fundamental limitations in technology scaling and which novel concepts are needed to overcome those limitations. Students obtain a comprehensive knowledge and solid understanding of the novel methods for computing that go beyond traditional von-Neumann computer architecture principles. Students know and understand the need for novel and emerging technologies for both logic and memories. Student will understand the novel methods for performing advanced reliability management when emerging nanotechnologies are in use. In addition, student know in detail the concepts of innovative computing methods such novel in-memory computing, near-memory computing, neuromorphic computing, brain-inspired hyperdimensional computing.",
        "inhalt": "Fundamental limits in technology scaling and why innovative computing methods are highly required.\nEmerging beyond-CMOS technologies and their impact on the performance and energy of modern computing systems.\nEmerging non-volatile memories and challenges in such new nano-scaled devices with respect to reliability, endurance, energy, etc.\nNovel architectures beyond traditional von-Neumann principles.\nIn-Memory Computing and Neuromorphic Computing.\nNovel algorithms for brain-inspired computing like Hyperdimensional Computing.\nCombining novel algorithms with novel architecture for ultra-efficient computing systems.\nReliability challenges in the existing technologies and emerging technologies and architectures.\nNovel cooling solutions for advanced thermal managements.",
        "voraussetzungen": "Basic knowledge of computer architecture\nBasic knowledge of digital circuits",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4387334&pOrgNr=1",
        "name": "Integrated Systems for Cellular Communications",
        "kennung": "CIT433035",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successfully completing the lecture, students will be able to:\n\n* Knowledge: Describe the key components, architecture, and functionality of cellular modems and their integration within smartphones, focusing on a systems engineering perspective.\n* Comprehension: Explain the interactions of subsystems in cellular communication systems and their contribution to overall system performance.\n* Application: Incorporate real-life aspects and key performance indicators into cellular systems, and transfer the system thinking approach learned in the lecture to other highly integrated technical systems.\n* Analysis: Analyze the interactions between mobile devices and networks to identify key dependencies and performance impacts.\n* Evaluation: Critically assess current and future cellular communication technologies, evaluating their system-wide design trade-offs and performance implications.\n* Synthesis: Develop original approaches to advancing mobile communication systems by integrating the concepts and technologies covered in the lecture.\n\nAcquired Competencies:\n\n* Subject-specific: Comprehensive understanding of modern mobile communication systems, including in-depth knowledge of technologies and procedures in cellular communication.\n* Methodological: Proficiency in applying system thinking, as well as analysing and evaluating complex technical systems.\n* Transversal: Ability to integrate technical and economic perspectives, and to transfer knowledge to emerging technologies and applications.",
        "inhalt": "- introduction: cellular terminals as example for highly integrated systems\n- basics: OSI model, network architecture\n- protocol architecture: QoS, control plane and user plane\n- physical layer: radio channel, WCDMA for UMS and HSPA, OFDMA for LTE and NR, channel coding\n- procedures: random access, paging, measurements\n- further aspects: spectrum, antennas, key performance indicators\n- economic aspects, market environment\n- outlook on possible future developments in mobile communications (6G)",
        "voraussetzungen": "College level mathematics, basics of communications theory and networks.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2862768&pOrgNr=1",
        "name": "Intelligent Machine Design – Advanced Mechatronics Components",
        "kennung": "EI71090",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Moduls sind die Studierenden in der Lage komplexe mechatronische Systeme auf Basis fortgeschrittener Komponenten und Entwicklungsmethoden selbstständig zu entwickeln, aufzubauen und zu testen. Hierbei können die Studierenden die Charakteristika und Wechselwirkungen der verschiedenen mechatronischen Komponenten und Software-Aspekte voraussagen sowie für die Entwicklung und Integration der geforderten Systeme entsprechend adaptieren.",
        "inhalt": "Das IMDL – Intelligent Machine Design Lab Modul 2.1 ist Teil einer dreisemestrigen Modulreihe, welche zum Ziel hat Studenten in die Lage zu versetzen komplexe und sehr leistungsfähige mechatronische Systeme mit hoher gesellschaftlicher/ökonomischer Relevanz zu entwickeln und aufzubauen. Studenten lernen selbständig Produktideen zu entwickeln und schrittweise in seriennahe Produktprototypen zu überführen. Nach Abschluss der Modulreihe sind die Studenten entsprechend in der Lage mechatronische Systeme und Projekte mit beliebiger Komplexität anzugehen sowie eigene Projektideen, welche z.B. gesellschaftliche, wirtschaftliche oder ökologische Probleme lösen, zu entwickeln und erfolgreich zu realisieren. Hierbei wird insbesondere Fokus auf die Erarbeitung multi-disziplinärer Design- und Integrationsfähigkeiten sowie deren Nutzung in einem interdisziplinären Team gelegt.\n\nDie Module innerhalb eines Semesters sowie zwischen den verschiedenen Semestern bauen inhaltlich aufeinander auf. Daher wird die erfolgreiche Absolvierung der vorherigen Module dringend empfohlen (Inhalt von Modul 1.1 wird für Modul 1.2 benötigt, Modul 1.1+1.2 wird für Modul 2.1 benötigt usw.).\n\nSchwerpunkt des Moduls 2.1 dieser Reihe ist die selbstständige Entwicklung, Integration, Aufbau und Evaluierung komplexer mechatronischer Systeme auf Basis fortgeschrittener Komponenten und Methoden wie BLDC-Motoren, Kraftsensoren, Signalverarbeitung, Feldbussysteme (CAN, …), PCB-Design, Auslegung mechanischer Komponenten, Simulation und Regelung von mechatronischen Systemen sowie weiterführende Programmierung von Microcontrollern (interrupts, advanced state-machines, …).",
        "voraussetzungen": "- IMD - Mechatronics Fundamentals (IMDL-Veranstaltung Semester 1)\n- IMDL - Basic System Design (IMDL-Veranstaltung Semester 1)\n- Programmierung (C )\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2695591&pOrgNr=1",
        "name": "Intelligent Machine Design - Basic System Design",
        "kennung": "EI78062",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls haben die Studierenden vertiefte praktische Kenntnisse und Fähigkeiten in der Entwicklung mechatronischer Systeme. Die Studenten sind in der Lage eine autonome radbasierte mobile Plattform, welche eine definierte Aufgabe erfüllen soll, zu entwickeln und in Betrieb zu nehmen. Darüber hinaus haben sie ihre Fähigkeiten in den Bereichen Problemlösung und Teamarbeit im Kontext einer interdisziplinären Problemstellung weiter ausgebaut.",
        "inhalt": "Das Modul Intelligent Machine Design Lab: Basic System Design (Modul 1.2) ist Teil einer dreisemestrigen Modulreihe, welche zum Ziel hat Studenten in die Lage zu versetzen komplexe und sehr leistungsfähige mechatronische Systeme mit hoher gesellschaftlicher/ökonomischer Relevanz zu entwickeln und aufzubauen. Studenten lernen selbständig Produktideen zu entwickeln und schrittweise in seriennahe Produktprototypen zu überführen. Nach Abschluss der Modulreihe sind die Studenten entsprechend in der Lage mechatronische Systeme und Projekte mit beliebiger Komplexität anzugehen sowie eigene Projektideen, welche z.B. gesellschaftliche, wirtschaftliche oder ökologische Probleme lösen, zu entwickeln und erfolgreich zu realisieren. Hierbei wird insbesondere Fokus auf die Erarbeitung multi-disziplinärer Design- und Integrationsfähigkeiten sowie deren Nutzung in einem interdisziplinären Team gelegt.\n\nDie Module innerhalb eines Semesters sowie zwischen den verschiedenen Semestern bauen aufeinander auf. Daher wird die erfolgreiche Absolvierung der vorherigen Module dringend empfohlen (Inhalt von Modul 1.1 wird für Modul 1.2 benötigt, Modul 1.1+1.2 wird für Modul 2.1 benötigt usw.).\n\nSchwerpunkt des Modus 1.2 dieser Reihe ist die weiterführende Entwicklung und Vertiefung sowohl praktischer als auch theoretischer Fähigkeiten in den Bereichen System-Entwicklung, Auslegung und Planung sowie des praktischen Aufbaus und Inbetriebnahme mechatronischer Systeme. Insbesondere die Team- und Problemlösungsfähigkeiten im Kontext einer interdisziplinären Problemstellung stehen hier im Fokus. Die Komplexität der angestrebten Mechatronik Systeme orientiert sich hierbei auf mobile/rad-basierte Roboter-Plattformen, die ein definiertes Aufgabenspektrum erfüllen. Die Studenten müssen auf Basis dieser Anforderungen ein vollständig funktionsfähiges System selbstständig entwickeln (Design, Komponentenauswahl, …), aufbauen (Produktion, Zusammenbau, Lötarbeiten, …), programmieren (Microcontroller, …) in Betrieb nehmen (Evaluierung des Systemverhaltens, Fehleranalyse ....) und schlussendlich präsentieren.",
        "voraussetzungen": "- Absolvierung von IMDL Modul 1.1 (Dringend empfohlen)\n- Programmierung (C)\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2695592&pOrgNr=1",
        "name": "Intelligent Machine Design - Mechatronics Fundamentals",
        "kennung": "EI71083",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Moduls sind die Studierenden in der Lage mechatronische Systeme selbstständig zu entwickeln, aufzubauen und zu testen. Hierbei können die Studierenden die Charakteristika und Wechselwirkungen der verschiedenen mechatronischen Komponenten und Software-Aspekte voraussagen sowie für die Entwicklung und Integration der geforderten Systeme entsprechend adaptieren.",
        "inhalt": "Das IMDL – Intelligent Machine Design Lab Modul 1.1 ist Teil einer dreisemestrigen Modulreihe, welche zum Ziel hat Studenten in die Lage zu versetzen komplexe und sehr leistungsfähige mechatronische Systeme mit hoher gesellschaftlicher/ökonomischer Relevanz zu entwickeln und aufzubauen. Studenten lernen selbständig Produktideen zu entwickeln und schrittweise in seriennahe Produktprototypen zu überführen. Nach Abschluss der Modulreihe sind die Studenten entsprechend in der Lage mechatronische Systeme und Projekte mit beliebiger Komplexität anzugehen sowie eigene Projektideen, welche z.B. gesellschaftliche, wirtschaftliche oder ökologische Probleme lösen, zu entwickeln und erfolgreich zu realisieren. Hierbei wird insbesondere Fokus auf die Erarbeitung multi-disziplinärer Design- und Integrationsfähigkeiten sowie deren Nutzung in einem interdisziplinären Team gelegt.\n\nDie Module innerhalb eines Semesters sowie zwischen den verschiedenen Semestern bauen inhaltlich aufeinander auf. Daher wird die erfolgreiche Absolvierung der vorherigen Module dringend empfohlen (Inhalt von Modul 1.1 wird für Modul 1.2 benötigt, Modul 1.1+1.2 wird für Modul 2.1 benötigt usw.).\n\nSchwerpunkt des Moduls 1.1 dieser Reihe ist die selbstständige Entwicklung, Integration, Aufbau und Evaluierung mechatronischer Systeme auf Basis analoger Schaltungen (Verstärker, Filter, Mosfets, …), Microcontroller-Programmierung (State Machines, Timers, Interrupts, …), Digital Communication (SPI, I2C, …), Aktoren (Servos, Schrittmotoren, DC-Motoren, …), Sensoren (Infrarot, Encoder, …) und Maschinenelemente (Lager, Federn, Dämpfer, Kupplungen, Transmission, …) sowie „Fast-Prototyping-Techniques“ (3D-Printing, Laser-Cutter, …).",
        "voraussetzungen": "Empfohlen:\n- Programmierung (C )\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2862769&pOrgNr=1",
        "name": "Intelligent Machine Design Lab – Advanced System Design",
        "kennung": "EI78067",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieses Moduls haben die Studierenden vertiefte praktische Kenntnisse und Fähigkeiten in der Entwicklung komplexer mechatronischer Systeme. Die Studenten sind in der Lage ein fortgeschrittenes mechatronisches System - beispielsweise einen Roboterarm/Manipulator - mit definiertem Aufgabenspektrum, zu entwickeln und in Betrieb zu nehmen. Darüber hinaus haben sie ihre Fähigkeiten in den Bereichen Problemlösung und Teamarbeit im Kontext komplexer interdisziplinärer Problemstellungen weiter ausgebaut.",
        "inhalt": "The IMDL - Intelligent Machine Design Lab Module 2.2 is part of a three-semester module series, which aims to enable students to develop and build complex and powerful mechatronic systems with high social/economic relevance. Students learn to develop product ideas independently and to transfer them step by step into near-series product prototypes. After completing the module series, students are able to start mechatronic systems and projects of any complexity and to develop and successfully realize their own project ideas, which solve e.g. social, economic, or ecological problems. Particular focus is placed on the development of multi-disciplinary design and integration skills and their use in an interdisciplinary team.\n\nThe modules within a semester as well as between the different semesters build on each other in terms of content. Therefore, successful completion of the previous modules is strongly recommended (the content of module 1.1 is required for module 1.2, module 1.1+1.2 is required for module 2.1, etc.).\n\nThe focus of Module 2.2 of this series is the further development and deepening of both practical and theoretical skills in the areas of system development, design, and planning as well as practical construction and commissioning of advanced mechatronic systems. In particular, teamwork and problem-solving skills in the context of a complex interdisciplinary problem are the focus here. The complexity of the targeted mechatronic systems is oriented towards robot arms or manipulators that fulfill a defined range of tasks. Based on these requirements, the students must independently develop, build, program, commission, and finally present a fully functional system.\nPlease note that this module is not only a change from mobile robot to robot arms. More specifically, in the previous1.2 module, students design their own mechatronic systems using intermediate design methods and components while they are closely supervised by the TAs and receive much help. In contrast, the students in the 2.2 module will use more advanced designing approaches, learn to be experts in choosing high-quality components, and they will also be provided less help; hence, be more independent. ( However, assistance and support will be provided if we feel a particular student is not really able to be independent.) In other words, the robot arm is just a project example to get an idea of the system complexity - it does not necessarily need to be a robot arm. Also, I would like again to mention that these modules are part of a multi-semester-multi-interdisciplinary course series focusing on mechatronics design -enabling the students to build product-like high-quality systems and improving their start-condition for their own startups significantly.\nHere, the components and methods introduced in IMD-Advanced Mechatronics Components are applied in a targeted manner.",
        "voraussetzungen": "- IMD - Advanced Mechatronics Components (IMDL-Veranstaltung Semester 2)\n- IMD - Mechatronics Fundamentals (IMDL-Veranstaltung Semester 1)\n- IMDL - Basic System Design (IMDL-Veranstaltung Semester 1)\n- Programmierung (C )\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3037225&pOrgNr=1",
        "name": "Intelligent Machine Design Lab- Product Prototype Development",
        "kennung": "EI78073",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students have gained in-depth practical knowledge and Skills about systems design and are able to develop complex mechatronic systems and product prototypes. In addition, students have developed and advanced skills in problem-solving, team-work and time management. Hence, they are capable of designing market-ready products.",
        "inhalt": "The IMDL - Intelligent Machine Design Lab Module 2.2 is part of a three-semester module series, which aims to enable students to develop and build complex and powerful mechatronic systems with high social/economic relevance. Students learn to develop product ideas independently and to transfer them step by step into near-series product prototypes. After completing the module series, students are able to start mechatronic systems and projects of any complexity and to develop and successfully realize their own project ideas, which solve e.g. social, economic, or ecological problems. Particular focus is placed on the development of multi-disciplinary design and integration skills and their use in an interdisciplinary team. The modules within a semester as well as between the different semesters build on each other in terms of content. Therefore, successful completion of the previous modules is strongly recommended.\nThe focus of Module 3 of this series is the further development of mechatronics product prototype development skills and knowledge – with focus on business case scenarios, advanced product requirements and production. The students must specify a product idea and develop a product prototype fulfilling defined/advanced requirements. The project advances the mechatronics system development skills of IMDL-1 and IMDL-2 to product-like complexity, integration-level and requirement-scope.",
        "voraussetzungen": "- IMD - Advanced System Design (IMDL-Veranstaltung Semester 2)\n- IMD - Advanced Mechatronics Components (IMDL-Veranstaltung Semester 2)\n- IMD - Mechatronics Fundamentals (IMDL-Veranstaltung Semester 1)\n- IMDL - Basic System Design (IMDL-Veranstaltung Semester 1)\n- Programmierung (C )\n- Basics of electrical engineering (analog circuits, ...)\n- Basics of electronics (microcontroller, bus systems, ...)\n- Basics of machine hardware\n- Actuator and sensor systems",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3037226&pOrgNr=1",
        "name": "Intelligent Machine Programming Lab",
        "kennung": "EI78074",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students have understood the working principles of several state-of-art Robotics systems. They are ready to interact safely and professionally with different types of robots. Moreover, students are able to program, write code, and design controllers for robotics systems in order to perform complex tasks.",
        "inhalt": "In this course, we offer the student clear intensive guidance to robot programming and low to high-level control design. The focus at beginning of this course is to familiarize students and make them user-ready to different types of robotics systems, e.g. Universal Robots Ue10 or Ue5. In particular, students at the beginning of the course will be taught rules about working with robots (safety aspect, best positioning for shutdown mode, etc), Introduction to ROS, and then a quick overview about available robots. Later in the course, and for each of the Robotics systems used in this course, an overview of its components (controller, hardware , and control panel), connection/setup, interface medium will be explained to the students. The rest of the course will be focusing on writing codes and programming the robot to perform a certain number of tasks that are ranging from simple to complex.",
        "voraussetzungen": "- Fundamentals of control theory\n- Fundamentals of robotics\n- C,C++\n- Python",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4388214&pOrgNr=1",
        "name": "Intelligent Robots with a Sense of Smell",
        "kennung": "CIT433039",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students will have learned where gas-sensitive robots are required (applications) and what challenges in terms of sensing, physics, estimation and sensor planning for mobile robots need to be addressed.\nStudents will learn in this course about a variety of gas sensors based on different sensing principles. They will also learn how to estimate gas distributions and to identify gas source locations based on sets of measurements.\nAfter successful completion of the course, students will be able to read out gas sensor measurements and other information required for olfaction from a mobile robot, and to compute estimates of gas distributions and gas source locations.",
        "inhalt": "U1: Mobile Systems for Air Pollution Monitoring\nU2: Introduction to Mobile Robot Olfaction\nU3: Classical Machine Olfaction\nU4: Chemical Sensing in Nature\nU5: Gas Distribution Modelling\nU6: Gas Source Localization",
        "voraussetzungen": "The course is fully self-contained.\nHowever, knowledge of robotics, linear algebra and/or signal processing, machine learning, are useful to follow the concepts explained in the course.\nThe practical exercises will require programming in Python.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3054466&pOrgNr=1",
        "name": "Intelligente Verfahren in der Elektromobilität",
        "kennung": "EI71107",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage:\n- Komponenten des elektrischen Antriebsstrangs mit Modellen zu beschreiben\n- abhängig von der konkreten Anwendung geeignete Methoden auszuwählen und einzusetzen, um die Zustände und Parameter im Elektrofahrzeug und dessen Komponenten im Betrieb zu bestimmen\n- die Resultate der verwendeten Methode zu analysieren und zu bewerten\n\nNach der Teilnahme an dem Modul kennen die Studierenden:\n- Die Besonderheiten der vorgestellten Verfahren im Zeit- und Frequenzbereich\n- Die Vor- und Nachteile von modellbasierten Verfahren gegenüber datengetriebenen Ansätzen\n- Die Herausforderungen der speziellen praktischen Anwendung der erlernten Methoden",
        "inhalt": "Anwendung von intelligenten Verfahren im Elektrofahrzeug auf Gesamtfahrzeugebene und in den Komponenten des elektrischen Antriebsstrangs\n- Überblick Elektromobilität; Grundlagen des Elektrofahrzeugs und des elektrischen Antriebsstrangs; Grundlagen zu intelligenten Verfahren; Einführung in intelligente, rekonfigurierbare Batteriesysteme\n- Anwendung von modellbasierten Zustands- und Parameterschätzverfahren in rekonfigurierbaren Batteriesystemen, für die Fahrzeugzustandsschätzung und die elektrische Antriebsmaschine\n- Diagnose im Frequenzbereich für den Anwendungsfall Energiespeicher\n- Thermische Modellbildung zur Bestimmung der Kerntemperatur von Batteriezellen mit künstlichen neuronalen Netzen\n- Datengetriebene Fehlerdiagnose in verteilten Systemen\n- Ausblick auf neuartige Konzepte des elektrischen Antriebsstrangs",
        "voraussetzungen": "mathematische Grundkenntnisse",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2642745&pOrgNr=1",
        "name": "Interference and Noise in Electromagnetics",
        "kennung": "EI71078",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Kurses haben die Studenten die folgenden Fähigkeiten erworben:\n- Die Studierenden verstehen die Ursachen von leitungsgeführten und gestrahlten elektromagnetischen Störungen in elektronischen Komponenten, Schaltungen und Systemen.\n- Die Studierenden sind in der Lage analytische und numerische Methoden zur Berechnung der Ausbreitung von rauschenden elektromagnetischen Feldern und deren Einfluss auf Schaltungen anzuwenden.\n- Die Studierenden verstehen und können Messtechniken zur Charakterisierung der von elektronischen Komponenten, Schaltungen und Systemen abgestrahlten EMV, sowie analytische und numerische Methoden zur Berechnung der Ausbreitung der abgestrahlten EMV in die Schaltungs- und Systemumgebung anwenden.\n- Die Studierenden sind in der Lage, die Methoden für ein EMV-gerechtes Design von Geräten, Schaltungen und Systemen anzuwenden.",
        "inhalt": "Ziel dieses Kurses ist es, eine umfassende und prägnante Einführung in die Phänomene der elektromagnetischen Interferenz (EMI) und des Rauschens von elektromagnetischen Feldern einschließlich thermischem Rauschen, elektromagnetischer Interferenz und Umgebungsrauschen zu geben. Die in diesem Kurs vermittelten Methoden bilden eine Grundlage für den EMV-orientierten Entwurf von elektronischen Komponenten, Schaltungen und Systemen. Der Kurs umfasst die Beschreibung von Rauschsignalen und stochastischen elektromagnetischen Feldern, analytische und numerische Methoden zur Modellierung von elektromagnetischem Rauschen, die Beschreibung von Rauschen in elektromagnetischen Strukturen durch äquivalente Netzwerkmodelle. Verfahren zur Messung von Rauschen und elektromagnetischen Störungen im Frequenz- und Zeitbereich werden behandelt. Der Kurs beinhaltet auch Anwendungen auf elektronische Schaltungen, Antennen und drahtlose Kommunikation.\nDer Kurs richtet sich an Studierende der Elektrotechnik und anderer Fachrichtungen, die sich mit den Grundlagen des elektromagnetischen Rauschens in Informations- und Kommunikationssystemen vertraut machen wollen. Die Vorlesung ist methodenorientiert. Der Kurs zielt darauf ab, eine einfache Aneignung der Grundlagen stochastischer elektromagnetischer Felder zu ermöglichen und vermittelt die Fähigkeiten für die praktische Anwendung der grundlegenden Konzepte und Werkzeuge. Neben der Entwicklung und Diskussion der grundlegenden Konzepte und der zu ihrer Quantifizierung und Analyse verwendeten mathematischen Modelle und Methoden, wird deren Anwendung durch Beispiele aus der modernen Kommunikations- und Computertechnik und der Sensorik erläutert.\nNach einer Diskussion der Bedeutung von Information werden lineare Systeme und die Signaldarstellung in linearen Systemen diskutiert. Die Signaldarstellung im Zeit- und Frequenzbereich und die Darstellung statistischer Signale werden behandelt. Eine Einführung in die grundlegenden Konzepte des Elektromagnetismus wird gegeben.\nDas Rauschen in Schaltungen und Systemen wird auf der Grundlage von Korrelationsfunktionen und Korrelationsspektren behandelt. Diese Überlegungen werden auf die Behandlung stochastischer elektromagnetischer Felder ausgedehnt. Für elektromagnetische Felder im Zeit- und Frequenzbereich werden Korrelationsfunktionen und Korrelationsspektren eingeführt. Rauschquellen und ihre Eigenschaften (thermisches Rauschen, elektromagnetische Störungen) werden diskutiert. Es werden stationäre, zyklostationäre und nicht stationäre sowie Gaußsches und nicht Gaußsches Rauschen diskutiert. Die Beschreibung der Ausbreitung stochastischer elektromagnetischer Felder Green‘sche Funktionen und die Nah-Fernfeldtransformation stochastischer elektromagnetischer Felder werden behandelt.\nNetzwerkmethoden werden zur Analyse elektromagnetischer Strukturen und deren Darstellung durch Ersatzschaltungen eingeführt. Zeit- und Raumdiskretisierung und Algebraisierung dieser Methoden liefern ein effizientes Gerüst für numerische Algorithmen. Insbesondere Netzwerkmethoden und zeitdiskrete Methoden sind effiziente Werkzeuge für die Analyse rauschender elektromagnetischer Strukturen.",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4434603&pOrgNr=1",
        "name": "Internationales Wissenschaftliches Seminar Signalverarbeitung",
        "kennung": "CIT432008",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, the students are able to understand, analyze, and evaluate scientific publications. They can summarize scientific results in own words and can prepare and give an own presentation about the topic. They are able to participate and bring in their own understanding in a discussion. Additionally, the students learn about the research in Munich and at the foreign universities.",
        "inhalt": "Based on examples for scientific literature (journal and conference papers, books), the students gain knowledge of a current research topic in the area of Signal Processing. They prepare an extended abstract and a presentation about the topic.\nThe seminar takes place in Munich and institutes at foreign universities (at the moment: Technische Universität Wien und Eidgenössische Technische Hochschule Zürich), where the students of the hosting university give their seminar presentations. The travelling costs are covered. Additionally, an introductory lecture on presentation techniques is offered.",
        "voraussetzungen": "Linear algebra, optimization, stochastics, and communications.\n\nRecommended additional modules:\n- Adaptive and Array Signal Processing\n- Advanced Signal Processing in Signal Processing\n- Circuit Theory and Communications\n- MIMO Systems\n- Numerical Linear Algebra for Signal Processing\n- Optimization in Communications Engineering\n- Statistical Signal Processing",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1329353&pOrgNr=1",
        "name": "Internetkommunikation",
        "kennung": "EI05551",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an der Modulveranstaltung ist die Studierende/der Studierende in der Lage, Grundkonzepte der Internetkommunikation mit Protokollen zu verstehen und anzuwenden sowie Internetprotokolle und Mechanismen zu analysieren.",
        "inhalt": "Inhalt\n* Grundlegende Konzepte von Kommunikationsnetzen\n* Protokollschichten und Dienstmodelle\n* Grundlegende Analysemethoden für IP-basierte Kommunikationsnetze (analytische Leistungsbewertung, Simulation, Prototyping)\n* Anwendungsschicht im Internet (HTTP, FTP, P2P, Socket)\n* Transportschicht (TCP, UDP)\n* Netzschicht (Routing, IP)\n* Sicherungsschicht und Medienzugriffsverfahren (LAN, WLAN, MAC)\n* QoS-Mechanismen im Internet (IntServ, DiffServ)",
        "voraussetzungen": "Grundlegende Programmierkenntnisse. In den Programmieraufgaben wird die Programmiersprache Python verwendet.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=863798&pOrgNr=1",
        "name": "Internetpraktikum für EI",
        "kennung": "IN8016",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students have a thorough understanding of\ncomputer networks and protocols. Furthermore, students learn to work\nwith Linux and get familiar with the Cisco IOS.",
        "inhalt": "The course consists of 9 assignments (\"labs\"):\n1) The Basics (ISO/OSI model, Ethernet, IP, ARP, ICMP, TCP, UDP,\nLinux tools and sniffers)\n2) Static Routing (IP addressing, IP forwarding, Cisco IOS)\n3) Dynamic Routing (RIP and OSPF on both Linux and Cisco IOS)\n4) TCP/UDP (fragmentation, connection establishment and teardown,\nmeasuring the TCP curves)\n5) DNS (Setting up a multi-level DNS hierarchy, DNS caching,\nDNSSec, IPv6 records)\n6) NAT/DHCP/IPv6 (NAT setup, NAT and FTP, DHCP setup, IPv6\nintro, 6to4-tunnels, IPv6 fragmentation handling)\n7) Security 1 (Apache setup, NMAP, firewalls)\n8) Security 2 (IPSec, VPN)\n9) Wireless LAN (encryption, breaking WEP, WPA, WPA-EPA, MAC\nfilters)",
        "voraussetzungen": "The following requirements should be fulfilled:\n- Basic unterstanding of computer networks\n- Basic knowledge of Linux (command line)",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1328499&pOrgNr=1",
        "name": "Introduction Lab Humanoid RoboCup",
        "kennung": "EI78009",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Kurses habe die Studenten folgende Fähigkeiten erworben:\n- Grundlegende Methoden aus verschiedenen Bereichen zu entwickeln, wie z.B. Vision, Planung und Lernen im Bereich Roboterfußball.\n- Evaluation der Grund- und Basisalgorithmen bei Robotern.\n\nNicht technische Fähigkeit werden ebenso erlernt: Die Studenten sind in der Lage:\n- ein großes technisches Projekt zu organisieren und zu leiten.\n- in kleinen Gruppen zu arbeiten und die Fortschritte, die in der Gruppe erreicht werden, zu kommunizieren.",
        "inhalt": "Die Studenten werden in drei Gruppen aufgeteilt. Jede Gruppe implementiert den Basisalgorithmus Robot Vision, Robot Learning, Path Planning, Laufen in NAO Roboter, um jedem NAO grundlegende Fähigkeiten, wie z.B. Ball Erkennung und Verfolgung, Lokalisierung und Schießen.\n\nDer Kurs is in verschieden Phasen eingeteilt:\n- Kick-off meeting: Die Studenten treffen die Vortragenden um den Stundenpan und die Gruppen festzulegen.Die Aufteilung in Gruppen wird von den Vorkenntnissen der Studentenbestimmt.\n- Initialisierungsphase: Die Studenten bereiten ihre Ausrüstung vor( PCs, Roboter, Software).\n- Entwicklungs- und Testphase: Die Studenten entwickeln und implementieren exisitierende Basisalgorythmen. Diese Entwicklung geht einher mit der Auswertung/Testphase.\n- Abschließende Phase: Die abschließende Demonstration findet auf einem Original Robocup fußballfeld statt. Jede Gruppe stellt NAOs in 4 verschiedenen Funktionen vor: Torhüter, Stürmer, Abwehrspieler und Unterstützer.",
        "voraussetzungen": "Basiswissen in entweder control, vision, planning, oder machine learning.\nGrundkenntnisse in Python or C++.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3287082&pOrgNr=1",
        "name": "Introduction to Emerging Computing Technologies",
        "kennung": "CIT3330001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students will know the basic concepts of emerging technologies and their realizations from a design perspective. They will understand the potential of these technologies in principle and for what applications they can be used. In addition to that, students will get a rough overview how corresponding applications can be realized, how corresponding design steps differ from the design of conventional systems, and what methods are available for their design. Through the programming tasks/mini-projects, students will get hands-on experiences on those issues. Correspondingly considered emerging technologies include reversible computing, quantum computing, microfluidics, and field-coupled nanotechnologies.",
        "inhalt": "Computer technologies will change in the near future. The exponential growth of conventional technologies (according to Moore’s Law) will come to a halt, since physical boundaries will be reached soon. At the same time, further system concepts beyond pure electronics emerge. As a consequence, researchers and engineers are currently considering alternative (emerging) computer technologies which work differently to established (conventional) computation paradigms. Examples include quantum computing, reversible circuits, microfludic devices (also known as Labs-on-a-Chip), or field-coupled nanotechnologies. This module provides an overview of these technologies and the corresponding paradigms. This covers an introduction into the respective concepts as well as possible applications. Afterwards, questions of how to efficiently design applications/solutions for these technologies are discussed.",
        "voraussetzungen": "* Basic knowledge in programming (e.g., in Python, C++, etc.)",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3037972&pOrgNr=1",
        "name": "Introduction to Human and Robotic Hand Grasping Control and Manipulation",
        "kennung": "EI71099",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students have learned how to write the kinematic and the dynamic equations that describe a grasp. Also, they are able to control the fingers of a robotic hand, or a team of robots, to grasp, manipulate, and move objects. In addition, students are capable of designing new controllers for robotic hands.",
        "inhalt": "• Chapter 1: Introduction & Basic concepts\no Introduction to the course\no Power and precision grasp\no The friction cone\no The Grasp Matrix\no Manipulation is more than pick-and-place\no Open-world manipulation\no Model-based design and analysis\no Organization of these notes\n• Chapter 2: robot hands\no Dexterous hands\no Simple grippers\no Soft/underactuated hands\no Other end effectors\no Sensors\no Putting it all together\n• Chapter 3: Grasp modeling\no Object Kinematics\no Hand Kinematics\no Contact models\no Quasi-static model of the grasp\no Grasp properties\n• Chapter 4: Grasp control\no A simple model(Direct) force control\no Force Control\no Hand Control\no Control of the object\no Limitations of the rigid-body assumption\no Indeterminate grasps\no Graspability",
        "voraussetzungen": "Passion for human and robotic hands grasping, as well as some familiarity with mathematical foundations regarding linear algebra, differential equations, and control theory.\nAdditionally, participation in the following courses is recommended:\n• Robotics I\n• Motion Planning for manipulation\n• Control Systems I\nThe interim exercises and final project will require solid knowledge of MATLAB and ROS.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1642148&pOrgNr=1",
        "name": "Introduction to Machine Learning",
        "kennung": "EI04016",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module students know the standard machine learning algorithms, how and when to apply those algorithms, their comparative strengths and weaknesses, and how to critically evaluate their performance. Students are able to (i) apply basic machine learning methods to build predictive models or perform exploratory analysis, (ii) properly tune, select and validate machine learning models, (iii) interpret their results, and (iv) understand their limits.",
        "inhalt": "he course provides an introduction to concepts, methods, best practices, and theoretical foundations of standard machine learning algorithms. Topics covered include regression, classification, model selection and validation, kernels, nearest neighbor algorithms, clustering, decision trees, ensemble learning, empirical risk minimization and regularization.",
        "voraussetzungen": "Analysis 1-3, Einführung in die Statistik oder Wahrscheinlichkeitsrechnung",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3308453&pOrgNr=1",
        "name": "Introduction to Mobile Robotics",
        "kennung": "CIT3330000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successfully finishing this module, students will be able to design and develop mobile robots that can autonomously navigate in their environment. The key concepts taught in this course include basics of probability theory, recursive Bayes filtering, probabilistic sensor and motion models, probabilistic approaches to robot localization and mapping, techniques for simultaneous localization and mapping (SLAM), basic approaches to collision avoidance, path planning and exploration. In particular, students will acquire the following skills:\n\n- They can analyze sensors (ultrasound, LiDAR, Cameras) used for robot navigation and design probabilistic models for them.\n- They can design probabilistic motion models.\n- They can realize a probabilistic localization approach using either a particle filter, a discrete filter, or variants of the Kalman filter.\n- They are able to develop and realize an approach to learn occupancy grid maps from sensor data given the poses of the robot are known.\n- They have a fundamental understanding of recursive Bayes filtering, are able to derive its equation and can critically assess the advantages and disadvantages of different representations of distributions for the recursive Bayes filter.\n- They have a fundamental understanding of the problem of simultaneous localization and mapping (SLAM).\n- They have a basic understanding of motion-planning and collision avoidance methods.\n- They have the capability to develop a navigation system for wheeled mobile robots.",
        "inhalt": "- Wheeled locomotion\n- Proximity sensors\n- Probabilistic Robotics\n- Probabilistic Motion Models\n- Probabilistic Sensor Models\n- Bayes Filter – Discrete Filters\n- Bayes Filter – Kalman Filters\n- Bayes Filter – Particle Filter\n- Occupancy grid maps and reflection maps\n- SLAM – Simultaneous Localization and Mapping\n- SLAM – Landmark-based SLAM\n- SLAM – Grid-based SLAM\n- SLAM – Graph-based SLAM\n- Iterative Closest Point Algorithm\n- Path planning and Collision Avoidance\n- Exploration",
        "voraussetzungen": "IN0007 Fundamentals of Algorithms and Data Structures\nIN0015 Discrete Structures\nIN0018 Discrete Probability Theory",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1810441&pOrgNr=1",
        "name": "Introduction to Quantum Networks",
        "kennung": "EI71064",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende der Veranstaltung kennen die Teilnehmenden die Grundlagen (mathematische Darstellung von Qubits, Postulate) der Quantenmechanik, die bekannten grundlegenden Effekte der Quanteninformationstheorie (superdense coding, teleportation) sowie Protokolle wie BB84, graph states, entanglement routing und verschränkungsassistierte Reduktion von Interferenz.\nDie Teilnehmenden verstehen die Zusammenhänge dieser Effekte mit der Struktur aktueller TCP/IP Netzwerke. Sie haben gelernt den Netzwerksimulator QuNetSim nutzen und können so das erlernte Wissen kreativ einzusetzen um TCP/IP Netzwerke durch die Nutzung von Quantenkommunikation zu optimieren. Idealerweise sind sie befähigt, Kommunikationssysteme auf einen potentiell nutzbringenden Einsatz von Quantenkommunikationstechnik hin zu analysieren.\nSie können das erlernte Wissen nutzen um zielgerichtet weiterführende Veranstaltungen in der Quanteninformationstheorie, der Netzwerktechnik oder der Entwicklung und Simulation von grundlegender Hardware für Quantenkommunikation zu besuchen.",
        "inhalt": "Ziel der Vorlesung ist es, die Teilnehmer an das Thema der \"Quantenkommunikation\" innerhalb eines für sie täglich erfahrbaren Rahmens heranzuführen. Die Verarbeitung von Informationen mit Hilfe von Quantentechnologie ist ein aktives Forschungsgebiet, auf welchem innerhalb der letzten 20 Jahre mit zunehmender Tendenz Industrieforschung betrieben wird. Die Industrieforschung fokussiert sich jedoch stark auf die Entwicklung von Quantencomputern. Quantenkommunikation wird bisher entweder als neue Möglichkeit für sichere Kommunikation oder als reine Grundlage für die Vernetzung von Quantencomputern wahrgenommen.\nIn 2019 erzielte Ergebnisse welche auf Resultaten aus der Quanten-Spieltheorie und der klassischen Informationstheorie aufbauen zeigen jedoch auf, dass verschränkte Teilchenpaare auch als Ressource zur Koordination interferierender Kommunikationskanäle genutzt werden können.\nDie Arbeitsgruppe TQSD hat daher einen auf Python basierenden Netzwerksimulator entwickelt, welcher als erster Netzwerksimulator weltweit dazu gedacht ist, Quanteneffekte auf den Netzwerkschichten 2, 3 und 4 zu simulieren.\nDie Grundlagen der Nutzung von Verschränkung als Ressource für die Koordination in Kommunikationsnetzwerken sollen den Studierenden anhand theoretischer Modelle und konkreter Aufgaben in der Datenübertragung über den Netzwerksimulator vermittelt werden.",
        "voraussetzungen": "Lineare Algebra (notwendig), Interesse an mathematischer Modellierung und Programmierung mit Python.\nBroadband Communication Networks und\nGrundlagen Rechnernetze und Verteilte Systeme",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3839732&pOrgNr=1",
        "name": "Introduction to Quantum Optics and Applications",
        "kennung": "CIT433022",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende der Veranstaltung ist der Student mit den Grundlagen der Quantenkommunikation vertraut. Er kann elementare Quantenkommunikationstechniken auf der physikalischen Schicht beschreiben und so an der Schnittstelle zwischen Theorie und experimenteller Umsetzung neue Konzepte definieren.",
        "inhalt": "Ziel der Vorlesung ist es, die Teilnehmer an die besonderen Eigenschaften der Quantenkommunikation auf der physikalischen Schicht heranzuführen. Quantenkommunikation ist ein Forschungsgebiet, welches sich in den letzten Jahren rasant entwickelt und etabliert hat. Eine Grundlage der Quantenkommunikation ist das Konzept des „Joint Detection Receivers“, welcher Messungen auf einer Vielzahl von Signalen gleichzeitig durchführt ohne diese vorher vom optischen in den elektronischen Bereich zu konvertieren. Dieser Detektionsmechanismus ermöglicht es effizientere Empfänger für die Nachrichtenübertragung zu bauen. Weitere Eigenschaften der physikalischen Schicht eines Quantensystems sind die dort verfügbaren elementaren Gatter, welche für die spezifischen auf Verschränkung basierenden Services eines Quantennetzwerkes notwendig sind. Zusätzlich kann auf der physikalischen Schicht eines Quantensystems mit gequetschtem Licht gearbeitet werden, was Vorteile bei bestimmten Übertragungsmedien bietet. Nach einer kurzen Einführung des „Fock-Space“ auf welchem Signale von Quantenkommunikationssystemen modelliert werden die Gatter und Nachrichtenübertragungssysteme dargestellt und in Bezug zur klassischen Theorie gesetzt. Die Studenten lernen die Vorteile von Quantenkommunikationssystemen gegenüber dem Stand der Technik, sowie die Grundbausteine für weiterführende Services der physikalischen Schicht von Quantenkommunikationsnetzen.",
        "voraussetzungen": "Lineare Algebra, Introduction to Quantum Networks, Mathematisches Interesse.\nFolgende Module sollten bereits erfolgreich absolviert worden sein: Introduction to Quantum Networks",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3210672&pOrgNr=1",
        "name": "Introduction to Soft Robotics",
        "kennung": "CIT4330000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Vorlesungen erhalten die Studierenden ein umfassendes Verständnis im Bereich der Soft-Robotics, dessen Errungenschaften und Herausforderungen. Durch die Tutorien werden sie in der Lage sein, die neuesten Soft Roboter Designs zu reproduzieren und sogar eigene Lösungen vorzuschlagen, um Herausforderungen zu bewältigen. Mittels bekannter Methoden zur Modellierung Soft Roboter, werden sie in der Lage sein, Soft Roboter selbstständig zu modellieren und zu steuern.\n\nSie werden in der Lage sein, Soft Roboter zu modulieren und zu steuern, indem sie bekannte Methoden zur Modellierung von Soft Robotern aus der Literatur verwenden.",
        "inhalt": "Soft Robotic ist ein wachsender Bereich auf dem Gebiet der Robotik. Im Gegensatz zu herkömmlichen Studien der Robotik, die von starren Strukturen ausgeht, welche über eine endliche Anzahl von Gelenken miteinander verbunden sind, nimmt die Soft Robotic weiche und deformierbare Strukturen an. Diese korrespondieren zu einer unendlichen Anzahl von herkömmlichen Gelenken. Diese Eigenschaft macht weiche Roboter flexibel, robust und prinzipiell sicher.\nWeiche Roboter können eine Vielzahl von Aufgaben ausführen, denen Robotern mit starrer Struktur schwer fallen würden, wie z. B. das Greifen von unregelmäßig geformten Objekten und der Umgang mit Kollisionen während Interaktionen in komplexen Umgebungen.\nIm Vergleich zu Robotern mit starrer Struktur sind für die Steuerung und Modellierung soft Roboter neue Strategien erforderlich, von denen einige in diesem Kurs untersucht werden.\nIn diesem Kurs werden die neuesten Errungenschaften in der Herstellung, Modellierung und Steuerung von weichen Robotern vorgestellt. Der Kurs umfasst die folgenden Inhalte:\n\n1- Einführung und Motivation: Welche Vorteile bietet die Übertragung von Konzepten aus der Natur auf Roboter? Warum werden weiche Körper in der Robotik verwendet? Können wir einen Roboter haben, der vollständig aus weichen Materialien besteht? Was sind die Vor- und Nachteile des Einsatzes weicher Körper in der Robotik?\n\n2 - Weiche Aktuatoren: Es werden verschiedene Arten von weichen Aktuatoren vorgestellt, wie z. B. weiche aufblasbare Strukturen, kabelgetriebene Strukturen, verdrillte Fadenstrukturen und elektroselbstklebende Kupplungen. Es wird untersucht, wie die Leistung von weichen Aktuatoren mit Hilfe der Analyse der blockierten Kraft bewertet werden kann und es wird eine Studie über die Hysterese von weichen Aktuatoren bei wiederholten Be- und Entlastungsszenarien durchgeführt. Außerdem wird das signifikante Leistungs-/Gewichtsverhältnis untersucht.\n\n3- Weiche Sensoren: Es wird eine Studie über die Herstellung verschiedener Arten von weichen Sensoren, wie Dehnungsmessstreifen-Soft-Sensoren, Kraft-Soft-Sensoren und multimodale Soft-Sensoren, durchgeführt. Der Dehnungsfaktor und die Hysterese von weichen Sensoren werden vorgestellt.\n\n4- Manipulation weicher Roboter: Es wird eine Studie über die mehrteilige Anordnung von weichen Aktoren und -Sensoren für den Bau von weichen Manipulatoren und eines sphärischen weichen Roboterarms durchgeführt.\n\n5- Fortbewegung mit weichen Robotern: Es wird eine Studie zu mobilen weichen Robotern gegeben, welche die zugrundeliegenden Prinzipien der Soft-Robotic-Lokomotion vorstellt, und es werden Anwendungen und weitere Entwicklungen für die mobile Soft-Robotic demonstriert.\n\n6- Vorwärtskinematik von weichen Robotern: Es werden Methoden zur Untersuchung der Kinematik von weichen Robotern vorgestellt, wie z. B. die Methode der stückweisen konstanten Krümmung, einschließlich aktorspezifischer und aktorunabhängiger Abbildung.\n\n7- Inverse Kinematik weicher Roboter: Es wird eine Studie über geschlossene Lösungen der Kinematik von weichen Robotern vorgestellt.\n\n8- Steuerung von weichen Robotern: Die Definition der erforderlichen Steuerungsvariablen von weichen Robotern und wie diese Variablen im Laufe der Zeit verändert werden müssen, um die gewünschte Bewegung zu erzeugen. Modellbasierte Steuerungsmethoden werden eingehend untersucht.\n\n9- Dynamik von weicher Robotern: Es wird eine Einführung in verschiedene dynamische Modelle von weichen Robotern gegeben, wie z.B. die dynamische Modellierung erster Ordnung, die im Detail untersucht wird.",
        "voraussetzungen": "C/C++ programming skills. Matrix transformation",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1808220&pOrgNr=1",
        "name": "IoT Remote Lab",
        "kennung": "EI78049",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, the participants are able to explain, apply IoT standards and protocols. The participants can also apply these standards and protocols in different system architectures found in IoT systems. Additionally, they are able to separate application and protocol logic in the implementation of the IoT devices as well as the application logic of the systems.",
        "inhalt": "Introduction of JSON and JSON Schema standards; Introduction of Thing Description standard; Introduction to the node.js programming language; Introduction to HTTP, CoAP and MQTT protocols; Programming application logic using multiple protocols and data structures; Programming of an IoT device based on a Raspberry Pi or ESP32.",
        "voraussetzungen": "Recommendations: Basic principles of computer systems and IP-level protocols. Must: good programming knowledge.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3395263&pOrgNr=1",
        "name": "IoT Security",
        "kennung": "CIT4330009",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, students are able to:\n- Explain the basic concepts of IoT (computer) security and the most common threats that threaten the modern IoT systems.\n- Plan and execute pen testing for IoT systems.\n- Choose, design and implement some protection techniques to secure IoT systems.",
        "inhalt": "This course focuses on the security aspects within the IoT protocol stack (i.e., data, application, and network). The course starts by looking at the IoT stack and discussing the most common IoT applications and some recent attacks against those applications. The course discusses some of the famous crypto algorithms applied to secure the (exchanged) data. Students shall implement some of these algorithms and try some techniques to break them (if possible). The course also introduces some of the authentication protocols that shall be adopted to solve some security issues in modern IoT applications. Students must implement these protocols and, later, try to break them. Attacks such as DoS and MITM are discussed in detail during the course. The students need to perform such attacks using existing tools (e.g., using Kali Linux tools) or writing their own tools. The course investigates the SSL protocol as an excellent example of securing IoT communication. Students need to integrate this protocol to ensure secure communication between smart devices. Finally, the course discusses some of the IoT software vulnerabilities and attacks which exploit these security weaknesses and how to harden the system.",
        "voraussetzungen": "Must: good programming skills.\nPreferable: basic knowledge of computer networking.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2911725&pOrgNr=1",
        "name": "IT-Sicherheit",
        "kennung": "IN0042",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die grundlegenden Konzepte, Methoden und Protokolle zum Schutz von Daten und Systemen vor Manipulation und Missbrauch auf einem grundlegenden, praxisorientierten, wissenschaftlichen Niveau. Sie verstehen die Ursachen von Sicherheits-Problemen heutiger Systeme, können die Zusammenhänge zwischen Schutzmechanismen und den damit adressierten Problemen wiedergeben und auf Fallbeispiele anwenden. Sie beherrschen zudem grundlegende Methoden des betrieblichen IT-Sicherheitsmanagements.",
        "inhalt": "- Grundlegende Begriffe der IT-Sicherheit,\n- Ausgewählte Sicherheitsprobleme heutiger Systeme und ausgewählte Angriffe,\n- Grundlagen und praxisrelevante Verfahren der angewandten Kryptographie\n- Grundlegende Konzepte und Protokolle zur Identifizierung/Authentisierung, zur Zugriffskontrolle und zur Systemsicherheit\n- Grundlagen der Netzwerksicherheit: Firewallkonzepte und praxisrelevante Protokolle zur Netzwerksicherheit\n- Methoden des betrieblichen IT-Risiko- und Sicherheitsmanagements (ISM)",
        "voraussetzungen": "IN0001 Einführung in die Informatik und IN0004 Einführung in die Rechnerarchitektur werden empfohlen",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3470518&pOrgNr=1",
        "name": "IT-Sicherheit 2",
        "kennung": "CIT3330002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, komplexe Sicherheitslösungen zu bewerten und Anwendungen in Bezug auf ihr Sicherheitsniveau zu analysieren. Sie sind in der Lage, die grundlegende und auch fortgeschrittene Konzepte zur Erhöhung der Sicherheit korrekt zu Lösungen von Sicherheitsproblemen einzusetzen. Sie verstehen die Ursachen von Sicherheits-Problemen von klassisch vernetzten, aber auch von mobilen und eingebetteten Systemen. Sie beherrschen die wichtigsten Konzepte zu deren Absicherung und können auch fortgeschrittene Ansätze anwenden. Sie sind in der Lage, eigenständig mögliche Sicherheitsschwachstellen in Designs oder Protokollen zu identifizieren und auf der Grundlage der erlernten Methoden und Konzepte Lösungen zu entwickeln.",
        "inhalt": "In dem Modul werden vertiefende sowie spezielle Themen der IT-Sicherheit behandelt. Aktuelle Konzepte und Lösungen im Bereich der Digitalen Identität, wie Smartcards, Physically Unclonable Functions (PUF), SSI und Token-basierte Authentisierung in verteilten Systemen werden vertiefend behandelt. Im Bereich der Anwendungssicherheit werden ausgewählte Fragestellungen, wie die Sicherheit von Instant Messenger-Diensten diskutiert. Im Bereich der Systemsicherheit widmet sich das Modul fortgeschrittenen Konzepten wie dem Trusted Computing, den Trusted Execution Environments und dem Confidential Computing und den dafür vorhandenen Hardware-seitigen Sicherheitskonzepten. Das Modul behandelt den aktuellen und in Entwicklung befindlichen Stand der Sicherheit drahtloser und mobiler Kommunikationsarchitekturen (u.a. 5G) und mit Konzepten zur ad-hoc Sicherheit bei vernetzten IoT Geräten (z.B. BluetoothLE). Das Modul wird zudem einen Einblick in die methodische Entwicklung und Bewertung von sicheren Systemen (Security Engineering) geben.",
        "voraussetzungen": "IN0042 IT-Sicherheit, IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, IN0009 Grundlagen: Betriebssysteme und Systemsoftware",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=672354&pOrgNr=1",
        "name": "Kombinatorische Optimierung in Computer Vision",
        "kennung": "IN2245",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Bei erfolgreicher Modulabsolvierung haben sich die Studenten mit der MRF-Modellierung und der Pseudoboolschen Optimierung vertraut gemacht und sie auf verschiedene Probleme der Computer Vision angewandt.",
        "inhalt": "Viele Probleme der Computer Vision lassen sich als kombinatorisches Optimierungsproblem darstellen.\nÜblicherweise entstehen solche Probleme bei Markov Random Field (MRF)-Modellen, die es uns in eleganter Weise ermöglichen, verschiedene Multilabel-Problemen des Bildverstehens zu modellieren. Hierzu gehören unter Anderem die Bildsegmentierung, menschliche Posenschätzung, die Berechnung des Optischen Flusses sowie das Shape Matching.\nEinige „gutartigen“ Probleme können in polynomieller Zeit gelöst werden, während andere wiederum NP-schwer sind. Wir werden uns auf der einen Seite mit effizienten Verfahren beschäftigen,\ndie diese gutartigen Probleme global optimal lösen. Auf der anderen Seite werden wir die NP-schweren Probleme approximativ lösen.\nTheoretisch beschäftigen wir uns mit:\n- MAP inference für MRFs und kombinatorische Optimierungsproblemen\n- Polynomzeitalgorithmen für quadratische submodulare Probleme\n- Approximationsansätze wie alpha-expansion, belief propagation sowie die\n- die submodular-supermodulare Prozedur und fast trust region-Ansätze.\nPraktische Ansätze beinhalten:\n- Binäre Bildsegmentierung (auch inkl. Vorwissen)\n- Multiobjekt-Segmentierung\n- Stereo-Matching\n- Berechnung des optischen Flusses",
        "voraussetzungen": "Als Voraussetzungen wird Grundwissen der Mathematik (insbesondere multivariate Analysis und lineare Algebra) sowie Grundwissen der Informatik (insbesondere dynamische Programmierung und einfache Datenstrukturen) empfohlen.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=937100&pOrgNr=1",
        "name": "Kommunikationsnetze",
        "kennung": "EI0625",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls ist die Studierende/der Studierende in der Lage, grundlegende Konzepte von Kommunikationsnetzen und deren Funktionsblöcke zu verstehen, grundlegende graphen- und verkehrstheoretische Analysemethoden zur Netzbewertung, grundlegende Methoden des Protokollentwurfs, der Netzplanung und Optimierung sowie Routingverfahren anzuwenden.",
        "inhalt": "* Übertragungsverfahren, Multiplextechniken, Durchschalte- und Paketvermittlung, Signalisierung, Adressierung, Nachrichtenaustausch\n* Leistungsbewertung, Einführung in die Verkehrstheorie (Berechnung von Verlust- und Wartesystemen)\n* Grundlegende Kommunikationsprotokolle (ARQ, Fensterprotokolle)\n* Netzstrukturen, Netzgraphen, Algorithmen, Routing\n* Einführung in die Netzplanung und Optimierung\n* Fehlertoleranz und Verfügbarkeit\n* Mobilitätsmanagement\n* Beispiele heutiger Netze (Internet, Telefonnetz, Mobilfunknetz), Dienste, Anwendungen, Architekturkonzepte",
        "voraussetzungen": "keine Voraussetzungen.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=983157&pOrgNr=1",
        "name": "Kommunikationstechnik für Lehramt",
        "kennung": "EI0572",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an der Modulveranstaltung ist der Studierende in der Lage, Technologien und Architekturen von Kommunikationsnetzen sowie die Leistungsfähigkeit von Redundanzschaltungen bei Kommunikationsnetzen zu verstehen und dieses Wissen sowohl auf Lokale Netze wie auch auf Weitverkehrsnetze (ATM, Optische Netze) anzuwenden.\nDie Studierenden erhalten vertiefte Kenntnisse über die Architektur und die Protokolle des Internet, über grundlegende Konzepte zur Kopplung heterogener und mehrschichtiger Netze einschließlich der zugehörigen Beschreibungsmethoden. Nach der Teilnahme an den Modulveranstaltungen hat der Studierende grundlegende praktische Erfahrungen in der Nutzung und Bedienung von Messgeräten und Simulatoren auf ausgewählten Gebieten der Netze (vgl. Beschreibung der Themenblöcke) erworben.",
        "inhalt": "V Broadband Communication Networks: Arten von Breitbandnetzen; Local Area Networks LAN: Netzstrukturen, dezentral gesteuerte Vielfach Zugriffsprotokolle (Ethernet, Token Passing), Hybridnetze (DQDB), Performance-Analyse, Standardisierung; ATM-Netze: Zellenvermittlung, Signalisierungsprotokolle, Verkehrsmodellierung, Statistisches Multiplexen, Traffic Engineering, Virtuelle Netze; Optische Netze: Komponenten, Vermittlungsverfahren, Netze mit Wellenlängenmultiplextechnik WDM).\nV. Internetkommunikation: Grundlegende Konzepte von Kommunikationsnetzen, Protokollschichten und Dienstmodelle, Grundlegende Analysemethoden für IP-basierte Kommunikationsnetze (analytische Leistungsbewertung, Simulation, Prototyping), Anwendungsschicht im Internet (HTTP, FTP, P2P, Socket), Transportschicht (TCP, UDP), Netzschicht (Routing, IP), Sicherungsschicht und Medienzugriffsverfahren (LAN, WLAN, MAC), QoS-Mechanismen im Internet (IntServ, DiffServ), Mobilitätsmanagement im IP-basierten Netzen\nP Kommunikationsnetze: Von der Studierenden/dem Studierenden eigenständig unter Anleitung durchgeführte Versuch an praktischen Systemen der Kommunikationsnetze: Routingverfahren und Netzkopplungen im Internet, ARQ Fensterprotokolle (TCP), Voice over IP mit SIP, Wireless LAN, Mobilkommunikation mit GSM, Verkehrsmodellierung und -analyse, Werkzeuggestützter Protokollentwurf",
        "voraussetzungen": "Die Inhalte von Kommunikationsnetze sollten vertraut sein",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1242444&pOrgNr=1",
        "name": "Komputer & Creativität",
        "kennung": "EI04001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Kurses haben die Studierenden ein grundlegendes Verständnis für die unterschiedlichen Konzepte, die dem Phänomen der Kreativität zugrunde liegen erfasst und verstanden. Sie haben praktische Fähigkeiten bzgl. der Umsetzung und der S/W-Implementierung von System mit algorithmischer Kreativität erworben. Sie sind in der Lage entsprechende Lösungen und Implementierungen zu verstehen und zu bewerten .",
        "inhalt": "Computational Creativity is ein Teilgebiet der künstlichen Intelligenz und des Maschinellen Lernens, das sich mit der Erzeugung von Maschinen beschäftigt, die kreative Fähigkeiten besitzen.\n\nDer Kurs konzentriert sich darauf das Konzept der Kreativität in Mensch und Maschine zu erfassen und praktische Kenntnisse für die S/W-Implementierung exemplarischen Systemen mit kreativen Fähigkeiten zu erwerben. Studierende werden in die Lage versetzt Konzepte von algorithmischer Kreativität zu untersuchen, entsprechende Systeme und Anwendungen zu konzipieren und zu entwicklen. Die Studierenden erlernen dazu die erforderlichen Programmierkenntnisse in der Programmiersprachen Python.\n\nWir werden verschiedene Methoden diskutieren und verwenden, um\n• die Natur und die Characteristika von menschlicher Kreativität zu verstehen, sowohl für das Individuum als auch in der Grupppe\n• Anwendungen und Herausforderungen für algorithmische Kreativität zu erkennen und zu spezifizieren\n• Lösungsansätze für kreative Systeme systematisch zu erarbeiten\n• eine team-orientierte Arbeitsweise mit agilen Methoden zu erleben",
        "voraussetzungen": "Die Vorlesung basiert auf folgenden Vorkenntnissen, die in den Lehrveranstaltungen erworben wurden:\n- Computertechnik\n- Algorithmen & Datenstrukturen\n- Programmierkenntnisse in Matlab C",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1199527&pOrgNr=1",
        "name": "Konvexe Optimierung für Computer Vision",
        "kennung": "IN2330",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an diesem Modul beherrschen die Studierenden die für die Praxis wichtigen grundlegenden Werkzeuge der konvexen Analysis. Sie sind in der Lage verschiedene Verfahren erster Ordnung zur Lösung konvexer Optimierungsprobleme mit Nebenbedingungen und nicht-differenzierbaren Funktionen zu verstehen und anzuwenden. Studierende werden in der Lage sein Energieminimierungsprobleme in Sattelpunktform zu analysieren und die duale Energie herzuleiten. Sie verstehen die Konvergenzanalyse des Proximal Point Algorithmus und können dieses Resultat auf andere Algorithmen anwenden, indem sie diese in Proximal Point Form schreiben. Studierende werden in der Lage sein konvexe Optimierungsprobleme für typische Computer Vision Probleme durch Anwenden der numerischen Methoden selbstständig zu lösen.",
        "inhalt": "Folgende Themen werden in diesem Modul behandelt:\nKonvexe Analysis\n- Konvexität\n- Existenz und Eindeutigkeit von Minimieren\n- Subdifferential\n- Konjugierte Funktion\n- Dualität\n\nNumerische Methoden:\n- Gradientenbasierte Verfahren, Majorization-Minimization Algorithmus, Line-search Strategie\n- Proximal Point Algorithmus, Alternating Direction Method of Multipliers, Primal-Dual Hybrid Gradient\n- Konvergenzanalyse\n- Vorkonditionierung\n\nBilevel Optimierung:\n- Verallgemeinerter Satz von der impliziten Funktion\n- Numerische Lösung mittels adjungierten Methoden\n\nBeispielanwendungen in der Bildverarbeitung und Computer Vision\n- Bildrekonstruktion basierend auf totaler Variation\n- Bildsegmentierung\n- Matrixfaktorisierung mit Nebenbedingungen auf Rang und Sparsity\n- Implementierung der obigen numerischen Verfahren in Matlab",
        "voraussetzungen": "Ein Interesse an Mathematik sowie ein solides Hintergrundwissen der grundlegenden mathematischen Fächer wie lineare Algebra und Analysis. Des Weiteren sollte eine Programmiersprache – vorzugsweise Matlab – beherrscht werden.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3494362&pOrgNr=1",
        "name": "Kryptografie",
        "kennung": "CIT3330003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage,\n- die grundlegenden Primitive der symmetrischen und asymmetrischen Kryptografie zu erkennen,\n- die theoretischen Grundlagen dieser Primitive zu verstehen,\n- darauf basierende kryptographische Verfahren zu analysieren,\n- die wichtigsten Sicherheitsdefinitionen zu verstehen.",
        "inhalt": "- Theoretische Grundlagen:\n++ Sicherheitsdefinitionen: perfect secrecy, computational security (IND-CPA,IND-CCA,IND-CCA2), semantic security\n++ Kryptographische Primitive und Pseudozufall: Pseudozufallszahlengenerator (PRG), -funktionen (PRF) und -permutationen (PRP), Einwegfunktionen (OWF) und -permutationen (OWP) (mit Falltür (TDP)), kryptographische Hashfunktionen, tweakable blockcipher (TBC)\n++ Grundlagen der Gruppen- und Zahlentheorie, elliptische Kurven\n- Symmetrischen Kryptografie:\n++ Blockchiffren: AES, DES und Stromchiffre: ChaCha\n++ Konstruktion von Verschlüsselungsverfahren basierend auf Blockchiffren.\n++ Konstruktion von Message-Authentication-Code: CBC-MAC, NMAC, HMAC\n- Asymmetrische Kryptografie:\n++ Das RSA-Problem und davon abgeleitete Verschlüsselungs- und Signaturverfahren: RSA-OAEP, RSA-FDH, RSA-PSS\n++ Der diskrete Logarithmus und davon abgeleitete Verfahren: Diffie-Hellman-Protokoll, El Gamal, DH-KEM, DSA",
        "voraussetzungen": "IN0011 Einführung in die Theoretische Informatik, IN0015 Diskrete Strukturen, IN0018 Diskrete Wahrscheinlichkeitstheorie, IN0042 IT-Sicherheit",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1642273&pOrgNr=1",
        "name": "Large-Scale Modeling and Large-Scale Data Analysis",
        "kennung": "EI60005",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful participation, students are able to describe, understand and apply techniques for simulation and analysis of large- scale neural models. They understand differences between mechanistic and phenomenological models, and are able to select and use computational tools for different tasks in engineering and science. Additionally, students can describe, understand and apply statistical and mathematical tools for analyzing high-dimensional measurements or simulations of neural activity and/or connectivity (in particular multi-neuron neural activity measurements) and to evaluate which tools are appropriate for which measurement.",
        "inhalt": "The first starts by introducing the principles of large-scale neural modelling, and why and when simulations and analytical approaches are needed to model empirical observations of neural activity or behavior, or to implement specific computational goals. A focus will be on models of perceptual decision making, i.e. the question of how neural systems can make decisions based on incomplete or noisy sensory inputs. We will cover goal-driven optimization of neural computations in recurrent networks, as well as statistical and computational approaches for optimizing and constraining simulations of neural networks.\nThe second part of the course covers principles of large-scale neural analysis, in particular Methods and tools for analysis of large-scale neural recordings and simulations, e.g. cross-correlations or clustering approaches. A particular focus is on methods and tools for dimensionality reduction and visualization of large-scale neural dynamics, including state-space models and time-series applications. Finally, it includes practical example applications and visualizations using large-scale data-sets, e.g. obtained using electrophysiological and optical multi-cell recording techniques.",
        "voraussetzungen": "(1a) Neuro-Recording Methods (NRM)\n(1b) Neuro Anatomy and Neuro Physiology (NAP)\n(1c) Computational Neuroscience (CNS)\n(1d) Basic knowledge in linear algebra, calculus, probability theory, dynamical systems and programming, e.g. as acquired in 'Fundamentals in Mathematics for Neuroengineering' and 'Fundamentals in Computer Science for Neuroengineering'",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1849336&pOrgNr=1",
        "name": "Lernen von Daten und Lineare Algebra",
        "kennung": "EI19000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Das Modul „Lernen von Daten und Lineare Algebra“ vermittelt wichtige mathematische Grundlagen und Werkzeuge aus dem Bereich der Linearen Algebra und vertieft diese durch den Erwerb von praktischen Programmierkenntnissen (Python) im Anwendungsfeld „Maschinelles Lernen“.\nDas Modul richtet sich an Studierende nicht-technischer Studienfächer, wie z.B. Studierende der Politikwissenschaften oder im Bereich des MCTS.\nEin wichtiges Ziel ist es dabei, für die teilnehmenden Studierenden eine verbesserte Anschlussfähigkeit an technische Fächer zu schaffen, d.h. dass die Studierenden in die Lage versetzt werden, auch weitergehende technische Module erfolgreich zu besuchen.",
        "inhalt": "Studierenden nicht-technischer Fächer soll der Anschluss an technisch-wissenschaftliche Fächer vereinfacht werden. In diesem Modul sollen sie grundlegende Kenntnisse und praktische Erfahrungen im Umgang mit der Linearen Algebra und deren Anwendung in technischen Fächern erwerben. Das Modul fokussiert auf praktische Berechnungsverfahren und numerische Algorithmen wie sie derzeit in vielen datenzentrierten Fachdisziplinen verwendet werden (z.B. maschinelles Lernen, Simulation). Die Teilnehmenden sollen praktische Kompetenzen im Themenfeld durch Vermittlung von grundlegenden Programmierkenntnissen in Sprachen wie Matlab oder Python erwerben. Die praktischen Programmieraufgaben entstammen vorwiegend aus dem Themenfeld „Maschinelles Lernen“.\nDie Teilnehmer sind bei erfolgreichem Abschluss des Moduls in der Lage, typische Berechnungsprobleme des maschinellen Lernens auf Standardfragestellungen der Linearen Algebra abzubilden, entsprechende Algorithmen fachgerecht auszuwählen und in Form von lauffähigen Matlab/Python-Programmen zu implementieren. Im Anschluss sind die Teilnehmer in der Lage ein breites Spektrum von technischen Lehrveranstaltungen der TUM zu besuchen und den Inhalten dort folgen zu können oder an anwendungsnahen Hackathons teilzunehmen und technisch beizutragen. Die nicht-technischen Studierenden sollen eine „Maker“-Haltung kennenlernen und sich zu eigener Implementierungsarbeit zu motivieren.",
        "voraussetzungen": "Die Studierenden benötigen zu Anfang lediglich Mathematik-Kenntnisse auf Abitur-Niveau und keine speziellen Programmierkenntnisse.\n• Studierende sollten über einen eigenen internetfähigen Laptop verfügen, auf dem kostenfrei Matlab/Python installiert werden kann.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1273354&pOrgNr=1",
        "name": "Literature Seminar 1, Scientific Debating, Colloquium",
        "kennung": "EI60008",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "see english version",
        "inhalt": "see english version",
        "voraussetzungen": "see english version",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1273236&pOrgNr=1",
        "name": "Literature Seminar 2, Scientific Debating, Colloquium",
        "kennung": "EI60012",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "see english version",
        "inhalt": "see english version",
        "voraussetzungen": "see english version",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4040199&pOrgNr=1",
        "name": "Logic Synthesis and Physical Design",
        "kennung": "CIT433032",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students will have\n- a detailed insights into how synthesis, optimization, and physical design algorithms work,\n- an understanding of different data structures and core methods for software tools,\n- the ability to properly apply synthesis, optimization, and physical design tasks,\n- the capability to extend software tools with novel or existing algorithms, and\n- be able to use tools considered in the lecture (e.g., ABC, Yosys, OpenROAD, or iEDA).",
        "inhalt": "Modern computer chips consist of billions of transistors, making them some of the most complex systems ever created by humans. How does one design such intricate architectures? The answer is algorithms developed and fine-tuned over decades. In this course, students will learn about the techniques that automatically obtain computer chip designs from specifications. To this end, we will explore logic synthesis and optimization as well as partitioning, floorplanning, placement, and routing. Many of these algorithms are meta-heuristics that can be applied in completely different fields, too, like resource allocation, city planning, logistics, compilers, etc. Additionally, students will gather hands-on experience with state-of-the-art tools in logic synthesis and physical design, with the opportunity to participate in an international contest.\n\nThe students will get to know data structures and algorithms, and will be able to implement them, e.g.,\n- AIGs, MIGs, XAGs, kLUT networks,\n- logic optimization and technology mapping,\n- combinational equivalence checking,\n- floor planning,\n- global and detailed placement,\n- global and detailed routing,\n- legalization.\nAdditionally, the students will learn to operate open-source industrial-strength tools in the field, like ABC, Yosys, OpenROAD, or iEDA.",
        "voraussetzungen": "Programming skills",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3272052&pOrgNr=1",
        "name": "Machine Learning and IT-Security",
        "kennung": "CIT4330001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, participants will have an overview of three areas in the intersection of IT security and machine learning:\n\n1. Machine learning for IT security, i.e., the application of ML for enhancing security in information systems. This includes anomaly detection algorithms for detecting e.g. network attacks, but also basic approaches for spam and malware detection. Classical methods for detecting attacks, spam or malware (e.g. signature-based algorithms) are not covered.\n\n2. IT Security for ML: Students will know basic and advanced attacks on ML systems under different threat models and will be able to describe and classify their advantages and disadvantages. They can describe defenses and their limitations and evaluate their effectiveness.\n\n3. Deepfake / Audio Spoofing: Participants will know the basic concepts in audio deepfake / audio spoofing. This includes both the creation and detection of audio deepfakes using ML. Students will be familiar with the most basic signal processing techniques as they pertain to feature extraction.",
        "inhalt": "Content:\n- Overview of the application areas 'ML for IT security' and 'IT security for ML'.\n- Fundamentals and advanced concepts for anomaly detection, including both semi- and unsupervised algorithms\n- Basics of dimension reduction for data visualization and preprocessing\n- Fundamentals of Natural Language Processing (NLP) for IT Security: Spam and Malware Detection using Learning Algorithms\n- Basic and advanced concepts of adversarial machine learning: attackability of systems using white/grey/black box attacks and corresponding defenses\n- Possibilities and limitations of transferability of such attacks from the lab to the real world\n- Basic concepts of both creation and detection of audio deepfakes (spoofing) incl. extraction of corresponding features (such as MFCC)",
        "voraussetzungen": "IN0001 and one of the following is recommended:\n- IN2332 Statistical Modeling and Machine Learning\n- IN2346 Introduction to Deep Learning",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743545&pOrgNr=1",
        "name": "Machine Learning and Optimization",
        "kennung": "EI70360",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module students know the theoretical foundations of (advanced) machine learning algorithms and common optimization methods for machine learning, and how to develop and analyze such algorithms. Students are able to (i) apply advanced and build new machine learning methods by modifying existing ones (for example deep neural networks), (ii) develop and tune optimization algorithms for training such models, (iii) rigorously analyze their performance both with computational experiments as well as by proving generalization bounds and analyzing the convergence/computational complexity of training algorithms. Also, upon successful completion, students are familiar with concepts beyond the traditional supervised learning setup, in particular active learning and aspects such as fairness.",
        "inhalt": "The course introduces the theory and practice of advanced machine learning concepts and methods (such as deep neural networks). In particular we will discuss (statistical) learning theory, (deep) neural networks, first order optimization methods such as stochastic gradient descent and their analysis, the interplay of learning and optimization, empirical risk minimization and regularization, and modern views of machine learning in the overparameterized regime with deep neural networks. We also discuss automatic hyperparameter optimization, active learning, and aspects beyond performance such as fairness. We will start the lecture with a very brief review of the foundations of machine learning such as simple regression and classification methods, so that all students are on the same page.",
        "voraussetzungen": "Analysis 1-3, Einführung in die Statistik oder Wahrscheinlichkeitsrechnung, Introduction to Machine Learning",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3501654&pOrgNr=1",
        "name": "Machine Learning and Robotics Seminar Course",
        "kennung": "CIT4320001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students will learn to conduct a thorough literature review, contrast different ideas and concepts, identify their impact and limitations, and communicate their findings in written and oral form. Furthermore, students will be able to structure their findings by identifying the main research threads in a particular field, and engage in group discussions and collaborative writing.",
        "inhalt": "Students will gain knowledge in robot learning by critically reviewing existing literature in this field. Topics will vary each term. Example topics include machine learning models for robotics, human-centered robot learning, learning of interactive tasks, learning from demonstration, safe robot learning, and multi-robot learning.",
        "voraussetzungen": "Fundamentals of robotics, machine learning, control theory, and computer vision.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1446338&pOrgNr=1",
        "name": "Machine Learning for Computer Vision",
        "kennung": "IN2357",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul beherrschen die Studierenden die Grundlagen der wichtigsten maschinellen Lernmethoden, wie sie im Bereich Computersehen angewendet werden. Sie sind dann in der Lage, die zugrundeliegende mathematische Formulierung von Verfahren wie z.B. Boosting, Bagging, HMMs, Gaußprozessen oder MCMC anzugeben, sowie diese Methoden einem Anwendugskontext in Bereich Computersehen zuzuordnen. Außerdem können sie einfache Implementierungen dieser Methoden entwickeln und auf konkrete Datensätze anwenden.",
        "inhalt": "Maschinelle Lernmethoden sind ein wesentlicher Bestandteil zur Lösung wichtiger Probleme aus dem Bereich Computersehen, wie z.B. Objektklassifikation und -lageschätzung, Objektverfolgung, Bildsegmentierung, Entrauschen von Bildern, oder Kamerakalibrierung. In dieser Vorlesung werden daher die wichtigsten Methoden des maschinellen Lernens vorgestellt und mathematisch hergeleitet. Diese umfassen vor allem:\n- Kernel Methoden, insbes. Gaußprozesse\n- Lernen von Metriken\n- Clusteringmethoden wie GMM oder Spektrales Clustern\n- Boosting und Bagging\n- Hidden Markov Modelle\n- Neuronal Netze und Deep Learning*\n- Sampling Methoden, insbes MCMC\n\nDer Fokus liegt hierbei in einem breiten Verständnis dieser Methoden und nicht in der Vertiefung einzelner Ansätze. Praktische Erfahrung wird anhand von Programmieraufgaben gesammelt.\n\n*Das Thema Deep Learning wird nur am Rande behandelt. Für eine ausführliche Behandlung des Themas wird auf andere Veranstaltungen verwiesen, z.B. IN2346",
        "voraussetzungen": "Grundlagen der linearen Algebra, Analysis und Wahrscheinlichkeitsrechnung.\nStatistical modeling and machine learning (IN2332)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4040185&pOrgNr=1",
        "name": "Machine Learning for Electronic Design Automation and Manufacturing",
        "kennung": "CIT433031",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "By the end of the module, students will\n* gain detailed insights into how machine learning can aid in the development, design, testing, and manufacturing of chips,\n* understand which problems in chip design/manufacturing can be approached by data-driven methodologies and how to do so, and\n* have learnt the essential requirements and best practices for introducing machine learning in a chip design/manufacturing industrial setting.\nThe course will also cover different data structures and core methods that may form the basis for AI-based software methodologies. Through hands-on experience, students will implement and adapt machine learning algorithms for design automation and manufacturing tasks.",
        "inhalt": "The complexity of modern chips significantly impacts the cost and capabilities of design and manufacturing for traditional Design Automation Toolkits. This issue is exacerbated by the increased relevance of software and applications running on modern SoCs and their co-design. Current Design Automation methodologies often struggle to fully capture and optimize complicated designs or reduce them to the initial specification. However, advancements in data-driven algorithms, particularly in Machine Learning, can address these shortcomings. This course teaches how to apply Machine Learning to enhance and improve the chip design process.\n\nThis module provides an in-depth exploration of machine learning for design automation, including:\n* Theory and application of machine learning algorithms\n* In-depth exploration of recent machine learning methods suitable for design automation tasks\n* Overview of topics, areas, and current industrial pain points in the semiconductor chain where a great availability of data exists\n* Detailed coverage of data structures and state-of-the-art tools for tackling design automation\n* Hands-on experiences of machine learning algorithms applied to design automation tasks",
        "voraussetzungen": "Basic machine learning knowledge, basic programming knowledge, basic circuit design knowledge",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1808840&pOrgNr=1",
        "name": "Manifold Optimization for Representation Learning",
        "kennung": "EI71065",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Kurses sind die Studierenden in der Lage:\n- grundlegende Modelle des Representation Learning zu beschreiben;\n- die jeweiligen Randbedingungen der Mannigfaltigkeiten in den verschiedenen Representation Leanring Paradigmen zu erklären;\n- technische Konzepte in der Optimierung auf Mannigfaltigkeiten zu verstehen;\n- einfache Algorithmen der Optimierung auf Mannigfaltigkeiten zur Lösung klassischer Probleme des Representation Lerning abzuleiten;\n- klassische Optimierungsalgorithmen auf Mannigfaltigkeiten für verschiedene Representation Leanring Ansätze zu implementieren.",
        "inhalt": "Das Erlernen von geeigneten Darstellungen aus Daten ist ein Schlüssel für den Erfolg moderner Algorithmen des maschinellen Lernens.\nDie meisten Modelle des Representation Learning erfordern die Lösung eines Optimierungsproblems, das auf eine Matrix-Mannigfaltigkeit beschränkt ist.\nIn diesem Kurs untersuchen wir die Techniken des Lernens von Datenrepräsentationen aus der Perspektive der Optimierung auf Mannigfaltigkeiten.\n\nWir werden die folgenden Paradigmen des Representation Learning behandeln:\n- Descriptive representation, z.B. Independent Component Analysis, Matrix Factorization, Dictionary Learning;\n- Discriminative representation, z.B. Trace Quotient Analysis;\n- Deep Representation, z.B. Multi-Layer Perceptron (MLP), Autoencoder.\n\nAußderdem werden die folgenden Konzepte der Optimierung auf Mannigfaltigkeiten behandelt (nicht ausschließlich):\n- Coordinate-free derivatives in finite dimensional Hilbert spaces;\n- Geometry of unit sphere, Stiefel manifold, Grassmann manifold, etc.\n- Gradient descent algorithms on Matrix Manifolds;\n- Conjugate Gradient on Matrix Manifolds.",
        "voraussetzungen": "Grundkenntnisse in linearer Algebra, Statistik, Optimierung und maschinellem Lernen, sowie Grundkenntnisse in Matlab oder Python (bzw. die Motivation, diese zu lernen).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=559107&pOrgNr=1",
        "name": "Master Your Thesis!",
        "kennung": "IN9036",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of this module, students will be able to\n- Draft a viable thesis proposal in English.\n- Develop an outline for their envisioned thesis.\n- Detail the outline of a thesis section.\n- Formulate a (working) title of their thesis.\n- Analyse sources to identify compelling arguments.\n- Establish logical flow at both the paragraph and document levels.\n- Articulate a scientific argument using various rhetorical strategies.",
        "inhalt": "This module will focus on the following:\n- Meeting the formal requirements of the Master´s Thesis\n- Structuring a document through outlining\n- Creating effective thesis titles\n- Establishing logical text flow\n- Debugging one´s own text, self-reflection\n- Incorporate feedback\n- Ethically correct use of AI tools for writing.",
        "voraussetzungen": "To participate actively, students will need solid skills in English language.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1051800&pOrgNr=1",
        "name": "Mathematische Methoden der Signalverarbeitung",
        "kennung": "EI0692",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI0630",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, die Bedeutung der Funktionalanalysis für moderne Signalverarbeitungskonzepte zu verstehen, sowie die vorgestellten mathematischen Konzepte und Verfahren zu beschreiben und anzuwenden.",
        "inhalt": "Mathematische Methoden der Signalverarbeitung werden eingeführt und anhand praktischer Anwendungsbeispiele in Systemen der Informationstechnik und Kommunikationstechnik demonstriert.\n\nElemente der Funktionalanalysis\nOrthogonale Reihenentwicklung\nVerallgemeinerte Basissysteme\nLineare Funktionale und Operatoren\nSpektrale Zerlegungen und Matrixzerlegungen\nInverse Probleme\nApproximationen von Signalen",
        "voraussetzungen": "Elemente der linearen Algebra, der Analysis, der Fourierreihen und der Fouriertransformation.\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Analysis 2\n- Analysis 3\n- Lineare Algebra\n- Signaldarstellung\n- Stochastische Signale",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3287444&pOrgNr=1",
        "name": "Measurement and Filtering of Bioelectrical Signals",
        "kennung": "CIT4310002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After participating in this module, students are able to:\n• write programs for signal generation and signal acquisition (programming skills)\n• understand and apply the principles of the discrete Fourier transformation and windowing\n• acquire, analyze and evaluate signals, averaging\n• measure analyze and evaluate frequency responses, noise floor\n• design, characterize and evaluate a measurement system\n• identify, analyze, and evaluate signal properties of biosignals and know their consequences for the data acquisition\n• recognize and evaluate the different artifacts which might occur during the measurement of biosignals\n• explain the origin of the ECG\n• describe the technical realization of bioamplifiers\n• prepare useful test signal data sets for the evaluation of filters\n• differentiate and analyze the artifacts in measured signals\n• compare different types of filters and classify them according to the usefulness for ECG filtering\n• consider different filters and select the appropriate one to remove different artifacts\n• generate publication-ready graphs\n• write legible measurement reports",
        "inhalt": "Biosignals refer to signals recorded from the human body. They can be either electrical (e.g. clectrocardiogram (ECG), electroencephalogram (EEG), electromyogram (EMG), etc.) or non-electrical (e.g. breathing, movements, etc.). The acquisition and processing of such signals play an important role in clinical routines. They are usually considered as major indicators which provide clinicians and physicians with useful information during diagnostic and monitoring processes. Thus, when dealing with biosignals, special attention must be paid to their acquisition, their analysis and their processing capabilities which constitute the final stage preceding the clinical diagnosis. Naturally, the diagnosis is based on the information provided by the processing system. In such cases, vast responsibility is placed on this system. Therefore, specific attention should be paid to the way these signals have to be processed. As you are aware, clinicians dealing with processed signals care little about the algorithm that has been implemented in their system to extract the required information. For them, the final results are all that counts. Generally speaking, signal processing, in particular digital signal processing, has today become a huge universe, incorporating a wide range of techniques and approaches. To get a comprehensive overview of the whole corpus of published techniques is far from straightforward. In fact, many fields deal with digital signal processing including mathematics, electrical engineering, computer engineering, and so on.\n\nIn this module, you will\n• conduct several simple experiments to understand the principles of the discrete Fourier transform, the acquisition and evaluation of signals and thus, learn the basics of metrology. The assignments ranges from Fourier transformation over transfer functions to noise and the characteristics of the measurement system.\n• learn how to generate publication-ready graphs\n• search for literature, implementations, toolbox, etc. on specific dedicated topics of digital signal processing with focus on ECG as a model system\n• search for, read, and understand current research papers on ECG signal processing\n• investigate common artifacts like power line interference, baseline wander, respiration and motion artefacts\n• measure disturbed and undisturbed, healthy and pathological ECG signals with an ECG simulation system\n• implement various digital filters to remove different artifacts or to extract different features of an ECG\n• present and discuss your results to your peers in several workshops\n• write a final report on your results",
        "voraussetzungen": "The requirements for this module are as follows:\n• students must be familiar with at least one programming language or eager to learn an appropriate programming language. Support on basic programming skills cannot be provided. The students can use a programming language of their choice for this module. The assignments of the first measuring @ home part is based on Matlab but you are free to use something else, but then, our support is limited\n• students must have a basic knowledge on digital filtering and digital signal processing.\n• students must be able to work in teams (self-organized).\n• students must have basic knowledge on literature research, scientific writing, and on LATEX, or at least be eager to learn it.\n• students need a computer or a laptop – we mainly support Windows 10 and Windows 11 OS. There is only basic support for MacOS, in case Linux is used, there might be problems with the support of the required audio interface. We will not support other operating systems although you are welcome to use them.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=939998&pOrgNr=1",
        "name": "Medientechnik",
        "kennung": "EI0631",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage ausgewählte Ansätze und Methoden aus dem Bereich der Medientechnik zu analysieren und zu bewerten. Die Studierenden können die Grundprinzipien der schnellen Text- und Mediensuche charakterisieren und die Leistungsfähigkeit verschiedener Ansätze bewerten. Sie sind in der Lage, ein einfaches System für die Mediensuche zu entwickeln und zu beurteilen.\n\nWeiterhin sind die Studierenden in der Lage den Bildentstehungsprozess mathematisch zu beschreiben und die Abbildung von Weltkoordinaten in Pixelkoordinaten für reguläre Kamerasysteme und Stereokamerasysteme unter Verwendung von Kameramodellen zu berechnen. Die Teilnehmer können die verschiedenen Schritte zur Kalibrierung eines Kamerasystems durchführen und den Kalibrierungsfehler analysieren. Sie sind in der Lage Grundprinzipien der Bildsynthese (Rastern von geometrischen Primitiven, Geometrische Szenenmodellierung unter Verwendung von Polygonnetzen bzw. Parametrischen Oberflächen, Beleuchtungsrechnung, Schattierung von Oberflächen, Texture Mapping) darzustellen. Sie können die wichtigsten Schritte der Rendering-Pipeline skizzieren und für einfache Szenen mit Punktlichtquellen beurteilen.\n\nDarüber hinaus sind die Studierenden in der Lage die Eigenschaften und Unterschiede von analogen und digitalen Videosignalen zu erklären. Sie können den Einfluss von Phasenfehlern für die Farbfernsehsysteme NTSC, SECAM und PAL berechnen. Für digitale Videosequenzen können die Studierenden die Umrechnung zwischen verschiedenen Formaten durchführen.",
        "inhalt": "Grundlagen multimedialer Informationsverarbeitung, Bildentstehung, Kameramodelle und Kamerakoordinaten, Zusammenhang zwischen Welt- und Pixelkoordinaten, Kamerakalibrierung, Stereokamerasysteme, Bildwiedergabe, Bildsynthese, Rastern von Linien, Geometrische Szenenmodellierung, Polygonnetze, Parametrische Kurven und Flächen, B-Splines, Rendering von Polygonnetzen, Rendering von parametrischen Oberflächen, lokale Beleuchtungsmodelle, Rendering-Pipeline, Bildbasierte Szenen-Modellierung, Information Retrieval, schnelle Textsuche und Bildersuche, analoges Video, Farbfernsehsignale, Farbfernsehnormen, digitales Video.",
        "voraussetzungen": "Höhere Mathematik, Lineare Algebra, Signalverarbeitung\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Signale\n- Grundlagen der Signalverarbeitung\n- Systeme",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=479801&pOrgNr=1",
        "name": "Methoden der Unternehmensführung",
        "kennung": "EI0481",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, grundlegende Methoden der Unternehmensführung zu verstehen und anzuwenden. Er kennt die Grundzüge des Innovationsmanagements, der Technologieplanung und der Patent- sowie Standardisierungsarbeit. Darüber hinaus hat er betriebswirtschaftliche, marktwirtschaftliche und organisatorische Entscheidungsstrategien erlernt.",
        "inhalt": "Marktentwicklung in der Elektroindustrie, Globalisierung,\nFirmenorganisation, Wissensmanagement, Personalführung,\nInnovationsmanagement, Technologieplanung, Technologietrends, Marketing und Wettbewerb, Betriebswirtschaftliche Unternehmensführung, Patentstrategie, Standardisierungsstrategien, Projektmanagement.",
        "voraussetzungen": "Keine Voraussetzungen\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n-\n\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n-",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4109392&pOrgNr=1",
        "name": "Microcredential Workshop on Digital Design and Fabrication",
        "kennung": "CIT331001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Workshop sind die Studierenden in der Lage, eigenständig digitale Modelle zu entwerfen und diese mithilfe verschiedener Techniken, wie beispielsweise 3D-Druck, herzustellen. Darüber hinaus erwerben sie praktische Erfahrungen mit aktuellen Werkzeugen und lernen, wie man diese effektiv in technischen Projekten einsetzt.",
        "inhalt": "Der 2-5 tägige Workshop findet als Blockkurs während des Semesters statt und wird von Experten aus Industrie oder Wissenschaft gehalten. Er bietet den Studierenden die Gelegenheit, die Methoden und Werkzeuge des digitalen Designs und der Fertigung praxisnah zu erfahren. Im Workshop werden die Anwendung dieser Werkzeuge sowie deren Leistungsfähigkeiten behandelt, und es wird eine praktische Einführung in die Design- und Herstellungsprozesse geboten. Der Fokus liegt auf den aktuellsten Tools aus der Industrie sowie auf den neuesten Entwicklungen und Trends im digitalen Design und der Fertigung.",
        "voraussetzungen": "GOP Module des Bachelorstudium",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4109395&pOrgNr=1",
        "name": "Microcredential Workshop on Electronics",
        "kennung": "CIT331002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Workshop sind die Studierenden in der Lage, eigenständig elektronische Schaltungen zu entwerfen und zu simulieren, PCB-Design mithilfe von Softwaretools durchzuführen und verschiedene Messinstrumente effektiv zu nutzen. Sie erwerben praktische Erfahrungen mit diesen Techniken und Werkzeugen und lernen, wie sie diese in praktischen Elektronikprojekten anwenden können.",
        "inhalt": "Der 2-5 tägige Workshop findet als Blockveranstaltung während des Semesters statt und wird von Experten aus Industrie oder Wissenschaft gehalten. Er bietet den Studierenden die Möglichkeit, die Hauptkonzepte der Elektronik zu erkunden. Das Entwerfen und Simulieren von Schaltungen sowie das PCB-Design mithilfe von Softwaretools werden im Workshop behandelt. Darüber hinaus lernen die Studierenden den Einsatz von Messinstrumenten zur Prüfung und Fehlersuche in Schaltungen kennen. Der Fokus liegt auf den aktuellsten Tools aus der Industrie sowie auf bewährten Methoden und Techniken, die in der Praxis verwendet werden.",
        "voraussetzungen": "Bachelor GOP Module",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4109399&pOrgNr=1",
        "name": "Microcredential Workshop on Hardware-Related Programming",
        "kennung": "CIT331003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an dem Workshop sind die Studierenden in der Lage, Mikrocontroller eigenständig zu programmieren und effektiv für verschiedene Anwendungen zu nutzen. Sie erwerben praktische Erfahrungen mit Mikrocontrollern, verstehen deren Funktionsweise und lernen, wie man sie in praktischen hardwarebezogenen Projekten anwendet.",
        "inhalt": "Der 2-5 tägige Workshop findet als Blockkurs während des Semesters statt und wird von Experten aus Industrie oder Wissenschaft gehalten. Er bietet den Studierenden die Gelegenheit, Hauptkonzepte der hardwarenahen Programmierung zu erkunden. Im Rahmen des Workshops werden das Programmieren und der Umgang mit Mikrocontrollern behandelt sowie deren Funktionsweise erklärt. Die Studierenden lernen, wie man diese Mikrocontroller für verschiedene Anwendungen einsetzt. Der Fokus liegt auf den aktuellsten Tools aus der Industrie sowie auf bewährten Verfahren und realen Anwendungsbeispielen, die in der modernen Industrie verwendet werden.",
        "voraussetzungen": "Bachelor GOP Module",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456670&pOrgNr=1",
        "name": "Microprocessors",
        "kennung": "IN2075",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of the module, students are able to understand and analyse:\n- the architecture of a microprocessor in general\n- features that have been added over processor generations since the first microprocessor was introduced\n- the state of the art in modern microprocessor architectures\n- possible trends with regard to future processor architectures\n- techniques to program and optimise different architectures at assembly language level.\n\nAlso students are able to understand the role of a microprocessor in high performance computing systems.",
        "inhalt": "Topology and structure of computing systems\nTechnical development of Microprocessors: From 4004 to contemporary\nprocessor architectures\nRISC vs. CISC- Architektur und\nInstruction Set Architecture and addressing modes\nPipelining\nPipelining conflicts\nExamples: x86, ARM\nCache structures, cache coherency, MESI and directory based protocols\nSuperscalar vs. VLIW architectures\nSSE- and AVX Vector Intrinsics\nBranch prediction\nSpeculatice execution\nOutlook",
        "voraussetzungen": "IN0004 Einführung in die Rechnerarchitektur, IN0005 Rechnerarchitektur-Praktikum, Keine Vorkenntnisse erforderlich, von Vorteil wären jedoch Grundkenntnisse in Rechnerarchitektur",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1052108&pOrgNr=1",
        "name": "MIMO Systems",
        "kennung": "EI7436",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI5074",
        "lernergebnisse": "At the end of the module, students are able to formulate and analyze single-user and multi-user multiple-input multiple-output (MIMO) systems. They can apply the waterfilling principle to reach capacity and can use the minimum mean square error to bound the mutual information. The students are able to design single-user MIMO systems under full and partial CSI at the transmitter. They are capable of analyzing and designing vector and MIMO multiple access and broadcast channels together with the corresponding capacity regions by applying the principles of successive interference cancellation (combined with time sharing and rate splitting) and dirty paper coding. The students can formulate and apply the duality between the MIMO multiple access and broadcast channels to design a MIMO broadcast channel system.",
        "inhalt": "Linear and non-linear algorithms for baseband signal processing in multiple input multiple output (MIMO) communication systems (point-to-point, multiple access, and broadcast setup).\nFor point-to-point channels: capacity for error-free knowledge about the channel state at the transmitter, waterfilling, diagonalization of the MIMO channel, capacity for fast fading channels, capacity for statistical channel knowledge of the transmitter, rate bounds for erroneous channel state knowledge at the receiver.\nFor multiple access channels (MAC): general MAC, successive decoding; scalar Gaussian MAC, rate splitting and time sharing; vector Gaussian MAC, weighted sum capacity; MIMO Gaussian MAC, capacity region, iterative waterfilling.\nFor broadcast channels (BC): general BC, degraded BC, scalar Gaussian BC, coding with known interference, dirty paper coding; Marton's achievable region, Sato's bound; vector Gaussian BC, duality of vector Gaussian BC and vector Gaussian MAC, sum capacity.",
        "voraussetzungen": "Linear algebra, analysis, constrained optimization, signal processing, communications, information theory.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1707677&pOrgNr=1",
        "name": "Mixed Integer Programming and Graph Algorithms for Engineering Problems",
        "kennung": "EI71059",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After accomplishing this module, students are able to construct abstract models (e.g. graphs) for commonly-seen engineering problems, and apply algorithms or mathematical modeling methods to solve the problems systematically.\nIn particular, students are able to analyze the problem space and solution space for a given engineering problem and understand that a small variance of the problem formulation can cause a significant change to the methodology. In addition, with a given method, students are able to evaluate its time complexity and measure its solution quality.",
        "inhalt": "Content covered in this course:\n- Physical modeling, mixed integer linear programming (MILP), time complexity\n- Graph: vertex, edge, directed, degree, cyclic, planarity\n- Tree: binary search tree, MILP sort, quick sort, heaps\n- Distance-oriented graph: MILP shortest path, Dijkstra, A*, MILP spanning tree, Kruskal, MILP steiner tree, MILP planar routing\n- Conflict-oriented graph: vertex coloring, edge coloring, maximum independent set\n- Graph partition: max-flow min-cut, clustering\n- Set: set covering, exact covering\n- Scheduling and binding: time slot modeling, non-uniform time slot",
        "voraussetzungen": "Fundamental programming knowledge",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1126235&pOrgNr=1",
        "name": "Mobile Communications",
        "kennung": "EI0697",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI0634",
        "lernergebnisse": "After successful completion of the module the student knows about wave propagation in mobile communications and resultant effects. He further knows how to adapt transmitter and receiver to combat these effects. He finally gets an insight into the physical layer of the three mobile communications standards used in Europe: GSM, UMTS, and its successor LTE.",
        "inhalt": "Introduction to mobile communication systems; models for mobile radio channels: path loss models, slow fading (shadowing), fast fading channel, frequency and time selective channels, delay and Doppler spread, multipath propagation. Derivation of error probabilities due to fading and noise, equalization for mobile communication systems: maximum ratio combining, zero-forcing, MMSE equalizer, Viterbi algorithm; channel and noise estimation. The physical layer of the existing UMTS and its successor LTE, associated with an introduction of CDM(A), OFDM(A), MIMO and scheduling techniques.\n\nThe modul is offered only in English.",
        "voraussetzungen": "Signal description in time and frequency, System theory, Basic knowledge in theory of probability, Basic knowledge in digital communications engineering\n\nThe following modules should be passed before the participation:\n- Höhere Mathematik 1-3\n- Signale\n- Nachrichtentechnik 1 (Part of Systeme)\n- Nachrichtentechnik 2",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2996633&pOrgNr=1",
        "name": "Mobile Robotik",
        "kennung": "IN2404",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage,\n- die verschiedenen Komponenten der Mobilen Robotik und deren Interaktion von der Perzeption über die Zustandsschätzung, Kartographierung und Regelung zu beschreiben.\n- mit verschiedenen Repräsentationen von Roboter-Zuständen und Karten mathematisch zu arbeiten.\n- die verschiedenen wahrscheinlichkeitstheoretischen Formulierungen der Sensor-Fusion zur Zustandsschätzung zu verstehen.\n- moderne SLAM-Systeme inklusive Elementen des Maschinellen Lernens zu verstehen.\n- Navigationsalgorithmen bezüglich Bewegungsplanung und Regelungstechnik zu beschreiben.\n- geeignete Algorithmen für verschiedene Anwendungen der mobilen Robotik zu kreieren.",
        "inhalt": "I Grundlagen:\n- Repräsentationen von Zustand, Umgebung und Unsicherheit\n- Übersicht von Sensoren und Aktuatoren\nII Zustandsschätzung mit Sensor-Fusion:\n- Probabilistische nichtlineare Ausgleichsprobleme\n- Kinematik und Dynamische Modelle\n- Rekursive Schätzung\nIII Von SLAM zu Räumlicher KI:\n- Spärliches Visuelles und Visuell-Inertiales SLAM\n- Dichte Kartographierung und SLAM\n- Semantische, Objekt-orientierte und dynamische Kartographierung\nIV Planung und Regelung:\n- Regelung, Modell-basierte und Modell-vorausschauende Regelung\n- Bewegungsplanung und Exploration\n- Bestärkendes Lernen: Bezug zu Modellen, Regelung und Perzeption",
        "voraussetzungen": "Begeisterung für Mobilie Robotik und Drohnen, sowie solide Mathematik-Grundkenntnisse in Analysis, Linearer Algebra, und Wahrscheinlichkeitsrechnung. Parallel zur Vorlesung wird das „Praktikum der mobilen Robotik“ angeboten, und die Teilnahme wird sehr empfohlen, um die hier vermittelten Inhalte praktisch in Simulation und auf fliegenden Drohnen umzusetzen.\nWeiter wird die Teilnahme an den folgenden Veranstaltungen sehr empfohlen:\n- Computer Vision II: Multi-View Geometry (IN2228)\n- Robotik (IN2067),\n- Bewegungsplanung in der Robotik (IN2138)\n- Introduction to Deep Learning (IN2346)\n- Motion planning for autonomous vehicles (IN2106, IN0012, IN4221)\nDie Übungen setzen solide Kenntnisse in Python voraus.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3395087&pOrgNr=1",
        "name": "Modelling and Control of Legged Robots",
        "kennung": "CIT4330007",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module, the students can analyze and model floating-base-legged robots. They will be capable of designing whole-body controllers for humanoid and quadruped robots, including walking controllers with all the elements involved. The students will be capable of creating walking controllers with classic methods and state-of-the-art optimal control methods.",
        "inhalt": "1. Introduction\n1.1. Motivation\n1.2. Historical review\n1.3. Applications\n\n2. Background.\n2.1. Homogeneous transformations\n2.2. Rotations\n2.3. Modeling\n2.3.1. Kinematic modeling\n2.3.2. Dynamic Modeling\n2.3.3. Floating base state representations\n2.3.4. Centroidal Dynamics\n2.3.5. Kinematic constraints\n2.3.6. Inverse kinematics\n2.4. Quadratic Programming and optimization.\n2.4.1. Conditions for optimality (KKT)\n2.4.2. Lagrangian Multipliers\n2.4.3. QP solvers\n\n3. Whole body control\n3.1. Task space representations\n3.2. Whole-body Jacobians\n3.3. Task definitions\n3.4. Hierarchical control\n3.4.1. Soft hierarchical control\n3.4.2. Strict hierarchical control\n\n4. Stability and balance (including contacts)\n4.1. Zero Moment Point (ZMP)\n4.2. Foot Rotation Indicator (FRI)\n4.3. Centroidal Moment Pivot (CMP)\n4.4. Capture Point (CP/DCM)\n4.5. Friction cone\n4.6. Contact stability\n4.7. Balance control\n\n5. Trajectory optimization\n5.1. Bellman principle of Optimality\n5.2. Hamiltonian Jacobian Bellman\n5.3. LQR\n5.4. MPC extensions\n5.5. Differential Dynamic Programming (DDP)\n\n6. Walking Control\n6.1. Walking cycle representation\n6.2. Simplified models\n6.3. Footstep planning\n6.4. DCM walking motions\n6.5. Floating base estimation\n6.5.1. Odometry\n6.5.2. Kalman Filter\n6.6. Walking motion tracking\n6.7. Walking controller architectures\n\n7. Advanced topics.\n7.1. Uneven terrain\n7.2. Partial footholds\n7.3. Torque level walking\n7.4. Running / jumping\n\nTutorials:\n\nT0: Technical training (ROS, Dynamics libraries)\nT1: Kinematic and dynamic modeling\nT2: Optimization\nT3: Floating base estimation\nT4: Whole body control\nT5: Task space inverse dynamics\nT6: Balance control\nT7: Trajectory optimization\nT8: Quadruped walking control\nT9: Biped walking control\nT10: Running and Jumping\nT11: Hardware implementations",
        "voraussetzungen": "Strong Mathematical background in Linear Algebra, Trigonometry, and Calculus.\nKnowledge in robotics (preferred).\nBasic Knowledge in C++, Python, and ROS.\nAll the tutorial exercises will be implemented in ROS Noetic (ubuntu 20.04).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1810259&pOrgNr=1",
        "name": "Monty MATLAB",
        "kennung": "EI78047",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, mit MATLAB als Programmierwerkzeug praktisch umzugehen und damit eigenständig Ingenieursprojekte umzusetzen. Für das Verständnis der Programmierumgebung und der Programmiersprache selbst bedeutet dies die Kenntnis der Syntax und Datenformate sowie die sichere Benutzung von objektorientierter Programmierung, automatisiertem Testen von Programmen, Möglichkeiten zum Debugging und die Modellierung und Simulation in MATLAB.\nDie Studierenden erlangen durch die Lehrveranstaltung die Fähigkeiten auf MATLAB basierende Lösungen für unbekannte Probleme zu entwickeln und können eine komplette Datenverarbeitungskette vom mobilen Endgerät bis zur Nutzerschnittstelle implementieren. Dies erstreckt sich über die folgenden Aspekte:\nNetzwerkkommunikation: effiziente Koodierungs- und Übertragungsmöglichkeiten für verschiedene abgetastete, analoge Sensorsignale\nSignalverarbeitung: digitale Signalfilter, Mustererkennung, effiziente Speicherung von digitalisierten Bewegungssensorsignalen,\nVisualisierung: Aufbereitung und Anzeige von Sensordaten auf Desktoprechnern als auch auf mobilen Endgeräten, Gestaltung grafischer Benutzeroberflächen in MATLAB\nVersionsverwaltung\nKommunikationsfertigkeiten für die Softwareentwicklung im Team\nSoftware Dokumentation",
        "inhalt": "Das Projektpraktikum MATLAB bietet eine umfassende Einführung in die interaktive Benutzung und Programmierung von MATLAB und führt die Teilnehmer bis zur Durchführung eines eigenständigen Programmierprojekts. Neben grundlegenden Datentypen und -strukturen werden Vektoren, Indizierung und Matrix-Operationen, sowie die MATLAB-Programmiersprache und der Debugger behandelt. Die Grundlagen werden anhand von Übungsaufgaben und Hausaufgaben auf der interaktiven Online Plattform „MATLAB Grader“ vertieft. Die behandelten Themen umfassen Grafik und Visualisierung, Benutzeroberflächen, Objektorientierung und sowie Maschinelles Lernen, neuronale Netze und Möglichkeiten zur Datenvorverarbeitung. Weiterhin wird auf die Möglichkeiten der Testautomatisierung in MATLAB sowie Sensordatenerfassung und Kommunikation mit „MATLAB Mobile“ eingegangen, um auf die Projektarbeit des Praktikums überzuleiten.",
        "voraussetzungen": "Grundkenntnisse in der Netzwerkkommunikation, Signalverarbeitung, MATLAB-Programmierung\nAls Voraussetzung erachten wir die erfolgreiche Durchführung eines MATLAB Onlinekurses mit einem entsprechenden Zertifikat. Diese Onlinekurse sind in der Campus Lizenz inbegriffen und stellen die geforderten Grundkenntnisse, auf denen die Lehrveranstaltung aufbaut, sicher. Zudem sollen die Studierenden durch den Erwerb des Zertifikats ein Gefühl für das Niveau des Kurses bekommen, um die Abbruchquoten zu verringern und die zur Verfügung stehenden Plätze optimal an interessierte Teilnehmer verteilen zu können. Die empfohlenen Onlinekurse aus dem Angebot von MathWorks werden auf der Kurswebsite des Lehrstuhls bekanntgegeben.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2839471&pOrgNr=1",
        "name": "Multi-criteria Optimization and Decision Analysis for Embedded Systems Design",
        "kennung": "EI71095",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss dieses Module\n- verstehen die Studenten die Berücksichtigung mehrerer Kriterien beim Design eingebetteter Systeme und die zugehörigen Herausforderungen,\n- können die zugehörigen Probleme analysieren und modellieren,\n- verstehen, wie unterschiedliche (mehrdimensionale) Optimierungsmethoden funktionieren, und können die - abhängig von der Problemstellung - am beste(n) geeignete(n) Methode auswählen und anwenden,\n- verstehen, wie unterschiedliche (multikriterielle) Entscheidungsverfahren funktionieren, und können die am beste(n) geeignete(n) Methode auswählen und anwenden sowie die vom Optimierungsprozess erhaltenen Ergebnisse analysieren.",
        "inhalt": "1. Einführung in die Berücksichtigung mehrerer Kriterien beim Design eingebetteter Systeme\n- Notwendigkeit mehrerer Kriterien\n- Modellierung und Herausforderungen\n2. Optimierungsmethoden\n- Lineare Programmierung\n- Meta-Heuristiken (z.B. Genetische Algorithmen, Simulated Annealing)\n- Mehrdimensionale Optimierung für die Entwurfsraumexploration\n3. Entscheidungsverfahren\n- Entscheidungstheorie\n- Multikriterielle Entscheidungsanalyse\n- Spieltheorie\n- Entscheidung unter Risiko und Unsicherheit\n\nIn der Vorlesung werden die theoretischen Inhalte durch illustrative Beispiele zu folgenden Konzepten ergänzt: Problemabstraktion und Modellierung, Auswahl eines Algorithmus und dessen Implementierung sowie multikriterielle Entscheidungsfindung und Analyse. Dabei werden sowohl funktionale als auch nicht-funktionale Aspekte berücksichtigt. Ausführlichere Übungsbeispiele zu diesen Themen werden von den Studenten im Eigenstudium durchgeführt.",
        "voraussetzungen": "- Datenstrukturen\n- Grundlegende Programmierkenntnisse in Python oder Matlab; alternativ C/C++ oder Java\n- Grundkenntnisse von Wahrscheinlichkeitsrechnung und Statistik (Wahrscheinlichkeitsaxiome und -theoreme, z.B. Bayes-Theorem und dessen Anwendung; typische Wahrscheinlichkeitsverteilungen, z.B. exponentiell, Gauss, etc.)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=965506&pOrgNr=1",
        "name": "Multimedia Communications",
        "kennung": "EI7352",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to understand the basics concepts of multimedia communications. They will be able to judge if specific applications can be deployed on specific networks. The students also gain a deep understanding of how to close the gap between application requirements and network support.",
        "inhalt": "The lecture discusses basics and applications of multimedia networking and communication. The main focus of the lecture is on characterizing the requirements multimedia applications have and the support that networks can provide to meet these requirements: Network and Application Quality-of-Service, Example: Streaming Media over VBR Channels, Example: Voice over IP (VoIP), IP QoS Parameter, Measuring QoS, Packet Dispersion Techniques, Multimedia Data Transport, TCP/IP, UDP, RTP, RTSP, Packet Loss Detection, QoS Architectures, Traffic Specification, Resource Allocation, Scheduling, Subjective and Objective Quality Assessment, Content Delivery Networks, Peer-to-Peer Media Delivery.",
        "voraussetzungen": "Communication networks, Internet Protocols, Media Technology\n\nThe following modules should be passed before taking the course:\n- Communication Networks\nIt is recommended to take the following modules additionally:\n- Image and Video Compression",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=706503&pOrgNr=1",
        "name": "Multimediatechnik für Lehramt",
        "kennung": "EI0543",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, grundlegende Eigenschaften digitaler Medien (reale und synthetische Bilder, Video) und die Verarbeitungskette von der Aufnahme bis zur Darstellung für ausgewählte Medientypen zu verstehen. Die Studierenden werden insbesondere in die Lage versetzt, die Mischung von realen und synthetischen Szenen im Studio zu verstehen.\nDer Studierende kennt die wichtigsten Peripheriegeräte für die Ein- und Ausgabe sowie deren grundsätzliche Funktionsweise. Er kann einfache intelligente User-Interfaces bzw. Dialogsysteme beurteilen und entwerfen und beherrscht die Grundlagen von Hidden-Markov-Modellen zur stochastischen Modellierung und Erkennung von gesprochener Sprache.\nNach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, verschiedene digitale Medienelemente zu akquirieren bzw. am Rechner zu synthetisieren, zu verarbeiten, zu verknüpfen und in einer Gesamtpräsentation zu arrangieren.",
        "inhalt": "V. Medientechnik:\nMediendifferenzierung, Zeitabhängigkeit von Medien, Bildentstehung, Kameramodelle und Kamerakoordinaten, Zusammenhang zwischen Welt- und Pixelkoordinaten, Kamerakalibrierung, Stereokamerasysteme, Bildwiedergabe, Bildsynthese, Rastern von Linien, Geometrische Szenenmodellierung, Polygonnetze, Parametrische Kurven und Flächen, B-Splines, Rendering von Polygonnetzen, Rendering von parametrischen Oberflächen, lokale Beleuchtungsmodelle, Rendering-Pipeline, Bildbasierte Szenen-Modellierung, Information Retrieval, schnelle Textsuche und Bildersuche, analoges Video, Farbfernsehsignale, Farbfernsehnormen, digitales Video.\nP. Projektpraktikum Multimedia:\nIn diesem Projektpraktikum werden ausgewählte Grundlagen der Multimediatechnik am Beispiel aktueller Themen am Rechner praktisch umgesetzt. Besonderer Schwerpunkt liegt auf der Verknüpfung mehrerer Medien zu einer Gesamtmultimediaanwendung. Die konkrete Aufgabenstelllung wechselt von Jahr zu Jahr. Beispiele für Themen der vergangenen Jahre sind Multimediale eLearning Einheiten, Car Infotainmentsysteme, 3D Computer Spiele, und Computer Haptik.\nV. Mensch-Maschine-Kommunikation 1:\nInformations- und Kommunikationssysteme, Peripheriegeräte zur Datenein-/Ausgabe, Sinnesorgane und -modalitäten zur Mensch-Maschine-Kommunikation, Dialogsysteme und Grundlagen der künstlichen Intelligenz, Spracherkennung mit Hidden-Markov-Modellen.",
        "voraussetzungen": "Höhere Mathematik, Lineare Algebra, Signalverarbeitung,\nGrundlagen der Systemtheorie, Grundlagen der Statistik, Boolsche Algebra, Finite Automaten",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1208758&pOrgNr=1",
        "name": "Multirate Signal Processing",
        "kennung": "EI7584",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students shall learn in this module to design and dimension sampling rate converters, to understand the theory and background and to employ various implementation forms. Furthermore, at the end of the term students shall be able to combine sampling rate converts with other signal processing techniques, e.g. band-pass sub-sampling, and also to understand the economical aspects of different implementations.",
        "inhalt": "The module offers a detailed insight in the digital signal processing domain with focus on multi rate signal processing the importance of which is still increasing in leading edge communication technologies. Multi rate signal processing is employed in almost all state-of-the-art communication systems for audio, video and data. In particular, due to Moore s law complexity and speed of modern signal processing technology are increasing and even more parts of a communication system are implemented in the digital domain. Therefore, sampling rate conversion is a key factor, especially when coupling digital systems as well as for compression of data. Examples of implementations of multi rate signal processing are given for audio, video and mobile communication.",
        "voraussetzungen": "Digital Signal Processing Basics\nSignal Analysis in Frequency Domain\nz-Transform\nSampling Theorem",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=973806&pOrgNr=1",
        "name": "Multi-Sensory Based Robot Dynamic Manipulation",
        "kennung": "EI7408",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Moduls ist der Studierende in der Lage serieller Roboter mit iterativen Methoden zu modellieren. Dazu kann er die symbolischen Gleichungen, die von diesem Prozess abgeleitet werden, zur Modellierung der Kinematik und Dynamik von Roboter einsetzen. Er kann diese Modelle zum Design von passivitäts-basierten Regelungsverfahren und der Fusion verschiedener Sensoren einsetzten.",
        "inhalt": "1. Einleitung\n1.1. Motivation\n1.2.Mathematische Grundlagen und Werkzeuge für Robotermodellierung\n1.2.1. Homogene Transformation\n1.2.2. Tutorium 1: Einarbeitung in die Simulation (Matlab/Simulink) und räumliche Beschreibung\n1.2.3. Vorwärts/Invers Kinematic\n1.2.4. Tutorium 2: D-H Konvention\n1.2.5. Differentielle Kinematics\n1.2.6. Tutorium 3: Roboter Jacobians\n1.2.7. Allgemeine Dynamik\n1.2.8. Tutorium 4: Dynamisches Modell einfacher Systeme\n1.2.9 Roboter Dynamik\n1.2.10 Tutorium 5: Roboter Dynamik via iterativen Methoden\n\n2. Passivitäts-basierte Regelung (Modellbasierte Regelung)\n2.1. Gelenkwinkel Regelung\n2.1.1 Tutorium 6: Gelenkwinkel Regelung\n2.2. Regelung im Betriebsbereich\n2.2.1 Tutorium 7: Regelung im Betriebsbereich\n2.2.6 Redundanz\n2.2.7 Tutorium 8: Regelung redundanter Roboter\n\n3. Passivitäts-basierte Regelung (visuelles Servoing)\n3.1 Positionsbasiertes (visuelles Servoing)\n3.2 Tutorium 9: Positionsbasiertes (visuelles Servoing)\n3.3 Bild-basiertes visuelles Servoing\n3.4 Tutorium 10: Bild-basiertes visuelles Servoing\n\n4. Passivitäts-basierte Regelung (Kraftregelung)\n4.1 Impedanzregelung\n4.3 Tutorium 11: Impedanzregelung\n4.2 Prinzip der Orthogonalisierung\n4.3 Tutorium 12: Kraftregelung\n\n5. Passivitäts-basierte Regelung (visuell-taktile Regelung)\n5.1 Fusion visueller und kraftbasierter Signale\n5.2 Tutorium 13: visuell-taktile Regelung",
        "voraussetzungen": "Starker mathematischer Hintergrund in linearer Algebra, Trigonometrie und Analysis.\nGrundkenntnisse in der Robotik (bevorzugt).\nGrundkenntnisse in C++ und ROS\nAlle Übungen werden in Matlab und ROS (ubuntu) implementiert, bitte installieren Sie auf Ihrem Laptop ubuntu (18.04) und ROS (Kinetic).",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=965530&pOrgNr=1",
        "name": "Multi-User Information Theory",
        "kennung": "EI7353",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module students are able to comprehend adanced topics in information theory;\n- Students will understand how multi-user information theory applies to modern communcations systems, especially wireless systems. They developed an appreciation for optimal strategies, as well as for limitations of the existing theory based on idealistic assumptions. Based on the gained knowledge, the student will be able to apply, analyze, evaluate, and create new network communication methods.",
        "inhalt": "General Description:\nFundamental Concepts of Multi-User Information Theory\n\nTopics:\nReview of Typical Sequences and Sets; Review of Capacity-Cost; Rate-Distortion Theory; Distributed Source Coding; Lossy Source Coding with Side Information; Coding for Channels with State; Broadcast Channels; Multiaccess Channels; Interference Channels; Network Flow; Network Coding; Relay Channels; Memoryless Networks; Digital Network Coding; Multiaccess Channels with Generalized Feedback",
        "voraussetzungen": "Recommendations:\n- Basic Course on Information Theory\n- Basic Knowledge in Discrete Probability",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473855&pOrgNr=1",
        "name": "Muster in der Softwaretechnik",
        "kennung": "IN2081",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul verstehen die Studierenden die wesentlichen Kategorien von Mustern, insbesondere Entwurfsmuster, Architekturmuster, Testmuster und Organisationsmustern. Sie verstehen, dass man mit Mustern wiederverwendbares Wissen in der Softwareentwicklung beschreibt, das insbesondere bei der Anforderungsanalyse, beim System- und Objektentwurf sowie im Projektmanagement verwendet werden kann. Sie sind in der Lage die Anwendbarkeit von Mustern bei gegebenen Problemen zu identifizieren, ein entsprechendes UML Modell zu erstellen, in dem dieses Muster enthalten ist und das Modell in Java Quellcode zu übersetzen.",
        "inhalt": "In dem Modul IN2081: Muster in der Softwaretechnik werden beispielhaft folgende Inhalte behandelt:\n-Muster als Technik um wiederverwendbares Expertenwissen zu strukturieren\n- Kategorien von Mustern:\n++ Architekturmuster\n++ Entwurfsmuster\n++ Prozessmuster\n++ Testmuster\n++ Organisatorische Muster\n++ Antimuster\n- Klassifikation und Kombination von Mustern\n++ Pattern-orientierte Softwareentwicklung\n- Modell-Transformationen\n- ++ UML Modell Transformationen\n- ++ Vorwärtsentwicklung- und Rekonstruktion von Modellen aus Code\n- ++ Code Gerüche (code smells)\n- ++Quellcode Transformationen\n- Benutzung von Mustern\n++ bei der Analyse\n++ beim Systementwurf\n++ beim Detailentwurf\n++ Identifizierung von Mustern in Software-Altsystemen",
        "voraussetzungen": "IN0001: Einführung in die Informatik\nIN0002: Grundlagenpraktikum: Programmierung\nIN0006: Einführung in die Softwaretechnik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=948553&pOrgNr=1",
        "name": "Nachrichtensysteme und Kommunikationssysteme",
        "kennung": "EI2195",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI2194",
        "lernergebnisse": "Durch die Teilnahme an der Modulveranstaltungen erhalten die Studierenden vertiefte Kenntnis über den Aufbau aktueller Übertragungstechnologien über drahtlose Medien, vorwiegend aus dem Bereich der Mobilfunksysteme. Sie haben die Fähigkeit, physikalische und systemtheoretische Modelle zur Beschreibung von Sender, Übertragungskanal, Empfänger, Entzerrer und Detektor auf die betrachteten Systeme anzuwenden und zur Bewertung der Übertragungsqualität (Analyse entstehender Verzerrungen, Berechnung der Bitfehlerrate) zu nutzen.",
        "inhalt": "Allgemeine Beschreibung von Nachrichtensystemen (Sender, Kanal, Empfänger). Besonderheiten des Mobilfunkkanals, Fading, Doppler-Effekt, Zeitvarianter Kanal. Aktuelle drahtlose Kommunikationssysteme: GSM, GSM 2+, CDMA, UMTS, HSPA.",
        "voraussetzungen": "Höhere Mathematik, Signaldarstellung im Zeit- und Frequenzbereich.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458040&pOrgNr=1",
        "name": "Nachrichtentechnik",
        "kennung": "EI00440",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage\n- Die Grundlagen der digitalen Nachrichtentechnik zu erklären, z.B. die Vor- und Nachteile gegenüber analogen Methoden,\n- die Funktion der Blöcke (z.B. Abtaster, Quantisierer, Modulator, Matched Filter) eines digitalen Senders und Empfängers zu beschreiben,\n- die charakteristischen Eigenschaften von linearen, zeitinvarianten Übertragungskanälen zu beschreiben,\n- wissenschaftliche Dokumente in Nachrichtentechnik zu verstehen.",
        "inhalt": "Die Lehrveranstaltung bietet eine Einführung in die digitale Nachrichtentechnik. Dazu zählt die Digitalisierung von analogen Quellen durch Abtastung und Quantisierung, Quellen- und Kanalcodierung, Grundbegriffe der Rate-Distortion Theorie, Pulsecode-Modulation (PCM), differentielle PCM, Impulsformen und ihre Spektren, Augendiagramme, Übertragungskanäle mit Rauschen, Detektion im Rauschen, Matched-Filter, Fehlerwahrscheinlichkeit, lineare digitale Modulationsverfahren (PSK, QAM), sowie Realisierungsaspekte (Takt-, Phasen- und Frequenzschätzung)",
        "voraussetzungen": "Mathematisches Verständnis, Signalbeschreibung im Zeit- und Frequenzbereich, Systemtheorie, Grundlagen der Wahrscheinlichkeitsrechnung und der Statistik, Lineare Algebra\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1 bis 3\n- Lineare Algebra\n- Signaldarstellung\n- Stochastische Signale\n- Schaltungstechnik 2",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=940028&pOrgNr=1",
        "name": "Nachrichtentechnik 2",
        "kennung": "EI0635",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage digitale Übertragungssystemen zu bewerten und nachrichtentechnische Basiskomponenten zu entwickeln.",
        "inhalt": "* Die Struktur des optimalen Empfängers\nSignale und Vektorräume, Maximum a posteriori Entscheider, Theorem der Irrelevanz, Entscheidungsregionen und Fehlerwahrscheinlichkeit\n\n* Bandpass-Signale und -Systeme\nTiefpass-Darstellung von Bandpass-Signalen und Bandpass-Systemen\n\n* Digitale Modulationsarten\nVerfahren, die kohärente Demodulation erfordern (OOK, BPSK, ASP, PSK, QAM, FSK, MSK), Nicht-kohärente Demodulationsverfahren (OOK, FSK, DPSK)\n\n* Entzerrung\nOptimaler Empfänger, Lineare Entzerrer (Zero-Forcing-Ansatz, Lineares Minimum Mean-Square-Error (LMMSE) Kriterium), Nichtlineare Entzerrer (Decision-Feedback-Entzerrer, Tomlinson-Harashima Precoding), Maximum-Likelihood Entzerrung\n\n* Multiplexverfahren\nFrequenz Multiplex (FDM), Orthogonales Frequenzmultiplex (OFDM)\n\n* Informationstheoretische Grundbegriffe\nElemente der Quellencodierung und der Kanalcodierung, Shannon-Grenze für AWGN und BSC",
        "voraussetzungen": "Mathematisches Verständnis, Signalbeschreibung im Zeit- und Frequenzbereich, Systemtheorie, Grundlagen der Wahrscheinlichkeitsrechnung und der Statistik\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1-3\n- Mathematik 4\n- Signaldarstellung\n- Stochastische Signale\n- Systeme",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1493755&pOrgNr=1",
        "name": "Natural Language Processing",
        "kennung": "IN2361",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, participants understand and can reproduce / remember essential concepts, algorithms, models, and methodology of modern Natural Language Processing (NLP). Participants are able to read and understand modern scientific publications in the field and to analyze, and evaluate the NLP concepts, algorithms, models, and methodology presented in those publications and presented in the course for a possible application to NLP problems in the participant’s own professional projects or their own scientific work in a Master’s thesis, Guided Research project, or PhD thesis developing new NLP algorithms, models and applications.\nThe module prepares the participants for the corresponding Master Lab course in NLP, which enables them to practically apply the concepts, algorithms, models, and methodology of this module by designing and implementing suitable Neural Network Architectures for key NLP Problems such as Semantic Role Labelling or Sentiment Analysis.",
        "inhalt": "• Text Normalization, Tokenization, N-Grams\n• Part-of-Speech-Tagging\n• Formal grammars for English and related approaches\n• Syntactic, Statistical and Dependency Parsing\n• Word Embeddings (Word2Vec, GloVe etc.)\n• Word Sense Disambiguation\n• Sentiment Analysis\n• Information Extraction\n• Semantic Role Labelling\n• Co-Reference Resolution\n• Named Entity Recognition and Classification\n• Machine Translation\n• Modern Neural Network approaches",
        "voraussetzungen": "IN2064 Machine Learning\nIN2346 Introduction to Deep Learning",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1070916&pOrgNr=1",
        "name": "Network Coding",
        "kennung": "IN2315",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer des Moduls beherrschen Grundlagen des Network Codings in Theorie und Praxis. Durch den Projektteil des Moduls haben sie praktischen Zugang zu Random Linear Network Coding in Transportprotokollen und auf der Verbindungsschicht kabelloser Netzwerke. Darüber hinaus beherrschen die Teilnehmer Grundlagen der Socketprogrammierung.",
        "inhalt": "Network Coding (NC) ist ein im Jahr 2000 aufgekommener Ansatz, um die durch das Min-Cut/Max-Flow Theorem vorhergesagte maximale Datenrate in einem Netzwerk auch erreichen zu können - eine eher theoretische Sichtweise. Vom praktischen Standpunkt aus betrachtet kann NC auch als Verallgemeinerung von Routing (bzw. Forwarding) gesehen werden: Üblicherweise sind von Vermittlungsknoten gesendete Pakete nur identische Kopien eines zuvor empfangenen Pakets. NC erweitert dies nun dahingehend, dass gesendete Pakete beliebige Linearkombinationen zuvor empfangener Pakete sein können.\n\nDiese Vorlesung bietet einen Einstieg in Network Coding aus theoretischer Sichtweise, welche durch praktische Aspekte und ein begleitendes Programmierprojekt ergänzt werden. Die folgenden Stichpunkte geben einen Überblick:\n- NC als Verallgemeinerung von Routing, Min-Cut/Max-Flow, Formulierung als Flussproblem\n- Paketverluste und Kanalschätzung, ARQ-Mechanismen\n- Forward Error Correction, Finite Felder\n- Random Linear Network Coding (RLNC)\n- Anwendungen von NC\n- Bidirektionales Coding, NC in kabellosen Netzwerken NC, in Transport- und Linklayer-Protokollen\n- Bestätigungsverfahren für NC\n- Kombination von NC auf unterschiedlichen Schichten\n\nDer praktische Teil des Moduls umfasst unter anderem:\n- Socketprogrammierung\n- IEEE 802.11 Raw-Sockets\n- Implementierung von RLNC Generationen und Bestätigungsverfahren\n- Fensterprotokolle",
        "voraussetzungen": "Grundlagen Rechnernetze und Verteilte Systeme (IN0010), Diskrete Strukturen (IN0015), Diskrete Wahrscheinlichkeitstheorie (IN0018), gute Programmierkenntnisse in C (oder C++)",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=965554&pOrgNr=1",
        "name": "Network Planning",
        "kennung": "EI7356",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "With this module, students gain a detailed knowledge of methods for planning of communication networks and the skills to apply and analyse them. Students will be able to practically create models and solve planning problems.",
        "inhalt": "Introduction: Motivation, Range of Tasks, Application Areas, Classification, Planning Process, Traffic Engineering\nRelated Optimization Fundamentals: Mathematical Formulation, Categories, Solution Methods (principles of exact and heuristic methods)\nTraffic and Demand Modeling: Traffic Types, Modeling, Forecasting\nNetwork Topology Design: Initial Planning, Extension Planning, Site Selection\nNetwork Dimensioning: Approaches for Circuit and Packet Switched Networks, Optimization Problems, Representative Heuristics\nResilience Planning: Redundancy Concepts, Disjointness, Resource Sharing\nGeneralizations: Multilayer Planning, Multiperiod Planning\nAccess Networks Planning: Overview, Selected Problems\nMobile Networks Planning: Overview (delineation with Resource Management in Wireless Networks course)\nPost-Planning Analysis: Network Simulation, Availability Analysis\nIn Practice: Network Planning Tools, Economics Aspects",
        "voraussetzungen": "Basic Knowledge of Communication Networks\n\nThe knowledge of the following modules is strongly recommended for this course:\n- Broadband Communication Networks",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456996&pOrgNr=1",
        "name": "Network Security",
        "kennung": "IN2101",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmenden verstehen Sicherheitsziele für das Internet und die Komponenten, in denen Kommunikationsprotokolle implementiert werden. Sie verstehen die Möglichkeiten, die Angreifern im Netz zur Verfügung stehen. Sie verstehen den Schutz, den kryptographische Verfahren und Mechanismen der Netzsicherheit bieten, und verfügen über das Wissen, Protokolle für die Netzsicherheit anzuwenden und Architekturen umzusetzen, mit denen sich konkrete Sicherheitsziele erreichen lassen.",
        "inhalt": "Diese Vorlesung bietet eine Einführung in das Feld der Netzsicherheit. Mögliche Bedrohungsszenarien bilden den Ausgangspunkt und liefern die Anforderungen für den Entwurf sicherer Netze. Nach einer Einführung in die Grundlagen wird die Integration von Sicherheitsmaßnahmen in Netzwerkarchitekturen und Netzwerkprotokolle diskutiert. Sicherheitslücken bestehender Systeme werden ebenfalls thematisiert.\nAls Grundlage zur Realisierung von Sicherheitsmechanismen werden kryptografische Basiskonzepte (insb. symmetrische und asymmetrische Verschlüsselung sowie kryptographische Hash-Funktionen) behandelt. Anschließend werden die Grundlagen und Methoden für Sicherheitsprotokolle zur Authentisierung, Autorisierung, Zugriffkontrolle, Integritätssicherung, Vertraulichkeit und Nichtabstreitbarkeit diskutiert. Anschließend werden konkrete Sicherheitstechniken insbesondere in der TCP/IP-Protokollfamilie behandelt. Die Beispiele aus der Praxis beinhalten PKI, Kerberos, IPSec, TLS sowie Firewall-Architekturen und Intrusion Detection Systeme.",
        "voraussetzungen": "IN0009 Grundlagen: Betriebssysteme und Systemsoftware, IN0010 Grundlagen: Rechnernetze und Verteilte Systeme",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456992&pOrgNr=1",
        "name": "Netz- und Systemmanagement",
        "kennung": "IN2099",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer verstehen die Hauptprobleme beim IT-Management und dessen Einbindung in IT-Prozesse einer Organisation und kennen wesentliche Lösungsansätze.",
        "inhalt": "Nach kurzer Wiederholung der Grundlagen Verteilter Systeme werden Grundbegriffe und Anforderungen an das IT-Management, insbes. Netz- und Systemmanagement diskutiert. Dann folgt eine ausführliche Vorstellung verschiedener im Einsatz befindlicher Managementarchitekturen (OSI/TMN, Internet, CORBA, DMTF, Web-based Management). Es folgt die Behandlung von Management-Werkzeugen und Plattformen. Danach werden Einsatzszenarien und IT-Prozesse im Servicemanagement diskutiert.",
        "voraussetzungen": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456414&pOrgNr=1",
        "name": "Netzwerkanalyse - statistische und formale Modelle und Methoden",
        "kennung": "IN2045",
        "organisation": "Department Computer Engineering",
        "anmerkung": "Ab WiSe 14 neuer Titel; ab WS 11/12 5 Credits statt 4; ab WS15 neuer Titel",
        "lernergebnisse": "Teilnehmer beherrschen methodische Grundlagen und praxisbezogene Techniken der Modellbildung, Simulation und Ergebnisauswertung und kennen ausgewählte Fallstudien.",
        "inhalt": "- Modellierung von Systemen\n- Konzepte der zeitdiskreten Simulation\n- Komponenten von Simulationsmodellen und Simulations-Software\n- Zufallszahlengenerierung und Verteilungsfunktionen\n- Zeit- und Leistungsverhalten von Systemen\n- Leistungsmetriken\n- Simulationsexperimente\n- Fallstudien",
        "voraussetzungen": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, IN0009 Grundlagen: Betriebssysteme und Systemsoftware",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1273240&pOrgNr=1",
        "name": "Neuro-inspired Systems Engineering",
        "kennung": "EI60009",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "see english version",
        "inhalt": "see english version",
        "voraussetzungen": "see english version",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2664285&pOrgNr=1",
        "name": "Neuroprosthetics",
        "kennung": "EI70270",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage\n- anspruchsvolle Computerprogramme zu erstellen\n- Modelle nichtlinearer Systeme (Neurone) zu entwickeln und nichtlineare Differenzialgleichungen numerisch zu lösen\n- zu verstehen wie Neuroprothesen funktionieren\n- die Prinzipien der elektrischen Stimulation von Neuronen zu verstehen und zu modellieren\n- aktuelle und in der Entwicklung befindliche Neuroprothesen zu analysieren und zu bewerten\n- Modelle neuer Implantate und der dazugehörigen Kodierungsstrategien zu entwickeln",
        "inhalt": "In diesem Modul werden die Grundlagen zur Neuroprothetik in der Vorlesung theoretisch hergeleitet und im begleitenden Computer-Praktikum numerisch berechnet. Der Schwerpunkt liegt dabei auf der elektrischen Stimulation von Neuronen, diese wird am Beispiel der Cochlea-Implantate eingehend untersucht.\n\nIm begleitenden Computer-Praktikum (Python oder MATLAB) werden die in der Vorlesung erarbeiteten Gleichungen numerisch gelöst. Insgesamt soll dabei ein virtuelles Modell eines gesamten Innenohrimplantats entwickelt werden und die Antwort des auditorischen Nerven durch die elektrische Stimulation berechnet werden.\n\nThemen:\n- Übersicht über Neuroimplantate\n- Numerische Lösung von linearen und nichtlinearen Differentialgleichungen\n- elektrische Modellierung von (Nerven)zellen\n- Herleitung und Lösung der Kabelgleichung für Nervenfasern (Axone)\n- Simulation der elektrischen Erregung von Nervenfasern (Axone)\n- Simulation der elektrischen Feldausbreitung im Körper\n- Anatomie und Funktion des Innenohres\n- Neuronale Kodierung von Schallsignalen im auditorischen Nerven\n- Implementierung einer Kodierungsstrategie für ein Innenohrimplantat\n- Elektrochemie an Elektroden, Biokompatibilität und Fremdkörperreaktionen",
        "voraussetzungen": "Grundlagen in Matlab oder Python\nGrundlagen der Elektrotechnik (Elektrische Schaltungen, Kabelgleichung, Elektrische Felder)\nGrundlagen der Signalverarbeitung (Fouriertransformation, digitale Filter)\nGrundlagen der Systemtheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1189600&pOrgNr=1",
        "name": "Numerical Linear Algebra for Signal Processing",
        "kennung": "EI7494",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, the students can apply the concepts and algorithms of numerical linear algebra for the optimal design and operation of practical signal processing systems with finite precision.\nThe students are able to analyze and evaluate the computational complexity of an algorithm, the condition of a problem and the stability of an algorithm to solve the problem by forward and backward error analysis. In particular, the students can analyze the complexity and stability properties of the Householder QR factorization, back substitution, Gaussian elimination together with Cholesky factorization, and the different schemes to solve a least squares problem. They can impose a defined structure to a matrix with Householder reflections and Givens rotations. Furthermore, the students are able to implement the basic steps of an eigenvalue and singular value decomposition.",
        "inhalt": "Floating-point arithmetics: IEEE standard, error of floating-point arithmetic.\nPreliminaries from linear algebra: singular value decomposition (SVD), projectors, matrix norms, Householder reflection, Givens rotation.\nQR factorization: Gram-Schmidt orthogonalization, Householder triangularization, applications of QR factorization.\nBack substitution: solving a triangular equation system, inversion of a triangular matrix and application to channel equalization.\nLeast squares: least squares with Cholesky factorization, QR factorization, and SVD; rank-deficient least squares, application to least squares estimation.\nCondition of a problem: norm-wise & component-wise condition numbers, condition number of basic operations, condition of inner product, matrix-vector product, unitary matrix, and equation system.\nStability of an algorithm: backward stability, accuracy based on backward stability; stability of floating-point arithmetic, algebraic operations, Householder triangularization, back substitution; stability of solving equation systems via Householder triangularization.\nSystems of equations: Gaussian elimination, pivoting, stability of Gaussian elimination; Cholesky factorization, pivoting, stability, application to MIMO detection.\nEigenvalues: Hessenberg form; Rayleigh quotient iteration, QR algorithm, application to principal component analysis; SVD, bi-diagonal form, implicit Q-theorem, Golub-Reinsch SVD, application to blind channel estimation.",
        "voraussetzungen": "Linear algebra, calculus, basics in signal processing.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2632102&pOrgNr=1",
        "name": "Numerische Algorithmen für Computer Vision und Maschinelles Lernen",
        "kennung": "IN2384",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Beendigung dieses Moduls sind die Studierenden in der Lage grundlegende numerische Algorithmen zu implementieren, sowie deren Stärken und Schwächen zu verstehen. Außerdem sollen Studierende ein Gespür dafür entwickeln, welche Algorithmen für welche Probleme aus den Bereichen Computer Vision und Maschinellem Lernen am besten geeignet sind. Somit sind sie in der Lage praktische Probleme aus diesen Bereichen effektiv zu lösen.",
        "inhalt": "In diesem Modul werden numerische Verfahren behandelt, welche häufig in den Gebieten Computer Vision (CV) und Maschinellem Lernen (ML) vorkommen. Neben den eigentlichen Algorithmen werden insbesondere auch Aspekte der Problemmodellierung behandelt, sodass praktische Probleme in CV und ML gelöst werden können. Es werden u.a. die folgenden Inhalte behandelt:\n- Fehleranalyse und Konditionierung von Problemen\n- Lineare Systeme (Lösbarkeit, Algorithmen, Stabilität, Regularisierung), sowie deren Anwendung und Modellierung in CV und ML (z.B. lineare Regression, Bildregistrierung, Dekonvolution)\n- Spektrale Verfahren (Eigenwertzerlegung, Singulärwertzerlegung, entsprechende Algorithmen), sowie Anwendungen und Modellierung in CV und ML (z.B. Clustering, Procrustes Analyse, Punktwolkenregistrierung, Hauptkomponentenanalyse)\n- Numerische Optimierung (Gradienten-basierte Verfahren, Optimierungsverfahren zweiter Ordnung, Large-scale Optimierung), sowie deren Anwendungen und Modellierung in CV und ML.",
        "voraussetzungen": "Es wird erwartet, dass alle Teilnehmer gute Kenntnisse in linearer Algebra (Lineare Algebra für Informatik MA0901) und Differentialrechnung (Analysis für Informatik MA0902) haben. Außerdem sind Grundkenntnisse in den folgenden Gebieten erforderlich:\n- mathematische Optimierung (z.B. Effiziente Algorithmen und Datenstrukturen I IN2003, oder II IN2004; oder Operations Research IN0024; etc.),\n- Computer Vision (z.B. Computer Vision I IN2246, oder II IN2228, oder III IN2375; oder Tracking and Detection in Computer Vision IN2210; etc.), und\n- Maschinelles Lernen (z.B. Maschinelles Lernen für Computersehen IN2357; oder Introduction to Deep Learning IN2346; oder Statistical Foundations of Learning IN2378; etc.).\nIn den Übungen werden Programmieraufgaben gestellt, welche mit Matlab zu lösen sind.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743570&pOrgNr=1",
        "name": "Numerische Methoden der Elektrotechnik",
        "kennung": "EI70440",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls versteht und kennt der Studierende für die Elektrotechnik grundlegende numerische Verfahren der Mathematik. Hierzu zählen insbesondere Methoden zur Lösung linearer Gleichungssysteme einschließlich Modellordnungsreduktion und zur numerischen Integration. Der Studierende ist in der Lage, diese in Aufgaben der Elektrotechnik einzusetzen.",
        "inhalt": "• Verfahren zur Lösung linearer Gleichungssysteme wie Gauss/Cholesky-Elimination, QR-Zerlegungen, Singulärwertzerlegung, Konjugierte-Gradienten-Ansatz, Relaxation\n• Verfahren zur Modellordnungsreduktion (Krylov-Unterraum-Transformation) wie Arnoldi-Iteration, Lanczos-Iteration\n• Verfahren zur nichtlinearen Nullstellensuche wie Newton-Raphson, Intervallverfeinerungsansätze\n• Verfahren der numerischen Integration differentiell-algebraischer Gleichungssysteme wie z.B. Expliziter Euler, impliziter Euler, Trapez-Methode, Gear-Ansatz\n\nDie genannten mathematischen Grundlagen werden im unmittelbaren Zusammenhang mit Anwendungsgebieten der Elektrotechnik entwickelt. Ein herausragendes Beispiel ist die Schaltkreissimulation. Zum einen bildet sie als zeitsparende und Material schonende Alternative zur Fertigung und Messung von Prototypen eine Schlüsseltechnik beim Entwurf von komplexen Schaltungen und Systemen. Zum anderen bilden numerische Verfahren und Algorithmen den Kern moderner Simulationsverfahren und kommen alle der oben erwähnten numerischen Verfahren bei der Simulation zum Einsatz. Im Einzelnen werden die vier Simulationsarten\n• Kleinsignal- oder lineare Wechselstromanalyse (AC-Analyse),\n• Arbeitspunktberechnung (DC-Analyse)\n• nichtlineare Einschwinganalyse (Transient-, TR-Analyse) und\n• nichtlineare Frequenzanalyse (Harmonic Balance, Shooting Newton)\nverwendet, um die oben genannten numerischen Verfahren beispielhaft zu lehren.",
        "voraussetzungen": "Gute Kenntnisse in höherer Mathematik (aus dem B.Sc.-Studium) werden benötigt.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4387358&pOrgNr=1",
        "name": "Object-centric 3D Vision",
        "kennung": "CIT433036",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of the module, students are deeply familiar with various representations for 3D object shape and pose, their pros and cons, and how to transform one representation into another. [assessment: final exam, programming assignments]\n\nStudents gain an understanding of 2D Image Formation from 3D scenes. In the reverse direction, they learn various state-of-the-art techniques to reconstruct 3D object shape and pose from 2D images, as well as how to track objects in 3D across frames. [assessment: essay, final exam, programming assignments]\n\nIn this context, they will learn to formulate optimization and learning problems for 3D fitting/prediction, and to solve these analytically in some cases, and numerically in more complex ones. [assessment: final exam]\n\nStudents will also learn how to represent and numerically solve optimization and learning problems using Python libraries. [assessment: essay, programming assignments]",
        "inhalt": "The lecture is divided into four parts. Part I covers 3D representations of object pose and shape, conversions between them, and the process of image formation from 3D scenes. Part II motivates the use of differentiable rendering in the context of 3D Computer Vision. It covers techniques for rendering volumes, surfaces, and primitives. Part III acts as a primer into automatic differentiation and neural networks – mainly CNNs, sequence-to-sequence models such as RNNs and transformers, followed by generative modeling. It also covers representation theory and symmetries in the context of Deep Learning. With the background built by the above parts, Part IV dives into advanced models and methods for reconstructing scene depth and individual objects in 3D from monocular color images. Optimization- as well as Deep Learning-based models are covered for both rigid and articulated deformable objects. This is followed by 3D reconstruction of objects from multi-view images. We then cover (deep) generative models for learning 3D shape priors, and for completing 3D shapes. Then, under the assumption that the object shape and appearance is known, we move on to estimation and tracking of 3D object pose. Finally, we address the challenging topic of reconstructing and tracking hand-object interactions in 3D.",
        "voraussetzungen": "- Probability theory\n- Linear Algebra",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=710359&pOrgNr=1",
        "name": "Online Gaming",
        "kennung": "IN2262",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Participants of the course can analyze existing online games and engineer communication mechanisms of these. This includes abilities to formulate and present technical problems that need to be solved by different categories of online games, as well as the abilities to reproduce architectural components of different online games. Participants have knowledge about the communication protocols used in online games, and the impact of network service properties, in particular latency, jitter and loss, onto the quality of service from a user's perspective. Participant also know the principles behind possible design decisions of multiplayer communication systems, and can identify suitable communication mechanisms and dimensioning of their parameters for a given set of demands.",
        "inhalt": "The following topics are treated:\n+ Overview on Online Gaming\n++ Taxonomy of Online and Multiplayer Games\n++ Examples for early multiplayer and network games\n++ Evolution of Online Games\n++ Related concepts: Telepresence, Augmented Reality, Distributed Virtual Environments\n+ Network service properties\n++ Sources of Latency, Jitter, Loss\n++ Service needs of online, networked games.\n++ Measuring network properties\n++ Controlling network properties\n++ Quality-of-Service support\n+ Latency compensation techniques\n++ Prediction\n++ Time manipulation\n+ Assessment\n++ Quality-of-experience dependencies\n++ Network disruption experiments\n++ Game traffic characterization\n+ Architectures and dimensioning\n++ Server dimensioning\n++ Peer-to-peer mechanisms",
        "voraussetzungen": "IN0010 Introduction to computer networking and distributed systems",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=966762&pOrgNr=1",
        "name": "Optical Networks",
        "kennung": "EI7633",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module students have an understandig of optical networks (covering aspects from the physical layer to networking functions), and are able to analyse them in the aspects of what the components of an optical network are, how optical networks are evolving, how optical networks can be reliable, how optical networks are planned, controlled and managed.",
        "inhalt": "Introduction to optical networks: why optical networks? Main drivers; Optical fiber and transmission effects; Most important optical network components; Routing and Wavelength Assignment; Optical Circuit Switched networks; Optical Packet Switched networks; Optical Burst Switched networks; Prevention, detection and reaction to failures; Optical access networks; from MPLS to GMPLS; actual research topics.",
        "voraussetzungen": "The knowledge of following modules are recommended:\n- Broadband Communication Networks",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1772070&pOrgNr=1",
        "name": "Optimal Control and Decision Making",
        "kennung": "EI70140",
        "organisation": "Department Computer Engineering",
        "anmerkung": "!WS/SS: wird ab 24W gedoppelt, im Wintersemester von Prof. Buss (M. Leibold) in deutscher Sprache durchgeführt, im Sommersemester von Prof. Schoellig in engl. Sprache",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage folgendes zu tun:\n- Analyse und Formalisierung eines Problems der optimalen Steuerung\n- Herleitung optimaler Regler für verschiedene Applikationen\n- Auswahl eines numerischen Algorithmus\n- Implementierung eines optimalen Reglers in der Praxis und Analyse von dessen Eigenschaften\n- Verständnis und Design von aktuellen Ansätzen des lernbasierten Reglerentwurfs und Reinforcement Learning",
        "inhalt": "- Optimale Steuerung: Dynamic Programming (DP), Bellman Gleichung, Value Iteration und Policy Iteration, Linear-quadratische Regler, Iterative Algorithmen der optimalen Steuerung\n\n- Grundlagen der Optimierung: Diskretisierung, KKT Bedingungen, Konvexität, QP und SQP Methoden\n\n- Modellprädiktive Regelung (MPC): Lineares MPC, Stabilität und Feasibility, Nichtlineares und robustes MPC, Praktische Betrachtungen\n\n- Modell-Lernen in der optimalen Regelung: Deterministische Ansätze (z.B. Lineare Regression, Neuronale Netze), Probabilistische Ansätze (z.B. Bayes lineare Regression, Gauss Prozesse)\n\n- Reinforcement Learning (RL): Markov Entscheidungsprozess, State-Value Function, Action Value Function, Modellbasiertes RL, Modellfreies RL (z.B. Monte Carlo, Q-Learning)\n\n- Aktuelle Forschungsfragen und Anwendungen",
        "voraussetzungen": "Grundkenntnisse: Dynamische Systeme, lineare Regelungssysteme, lineare Algebra, Wahrscheinlichkeitstheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3037228&pOrgNr=1",
        "name": "Optimal Control and Reinforcement Learning for Robotics (Seminar)",
        "kennung": "EI71098",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, the students have an understanding of the basics of optimal control and reinforcement learning and an overview of the state-of-the-art of research for robotic applications. Also, students aree able to identify the main research directions in the field and summarize the state-of-the-art in a specific research direction by investigating and analyzing research papers. In addition, they are capable of conducting group discussions and collaborative writing, and present fundamental principles, critical analysis and findings clearly.",
        "inhalt": "Optimal Control and Reinforcement Learning for Robotics is a seminar course which will introduce the basics and explore advanced topics in optimal control and reinforcement learning. Students will first be introduced to the foundations of optimal control theory and reinforcement learning. Students will then be guided to explore advanced topics which focus on robotic applications.",
        "voraussetzungen": "- Fundamentals of control theory\n- Fundamentals of robotics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1060581&pOrgNr=1",
        "name": "Parallel Program Engineering",
        "kennung": "IN2310",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "The participants will be able to apply a structured approach in the development of parallel applications. They are able to assess and apply existing tools for a given problem. They understand tool development infrastructures and are able to design and implement own solutions to issues in the development process of parallel software.",
        "inhalt": "This module starts with a short introduction to parallel programming, programming models and languages, applications, and the parallelization approach. It presents the software development process focusing on aspects and requirements for parallel and high performance applications. Development environments supporting the orchestration of parallel programs are introduced. The module then concentrates on concepts and tools for engineering parallel programs focusing on: e.g. omain decomposition, Debugging, Performance analysis, Performance modeling and prediction, Application tuning, Performance engineering workflows, and tool development infrastructures.",
        "voraussetzungen": "IN2076 Advanced Computer Architecture, IN2147 Parallel Programming",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457062&pOrgNr=1",
        "name": "Parallel Programming",
        "kennung": "IN2147",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to create parallel programs in MPI and OpenMP. They understand the performance aspects of different parallelization strategies and can evaluate those parallelization strategies in the context of applications. They are able to apply data dependence analysis and program transformations. They can analyze and tune the performance of parallel applications.",
        "inhalt": "The module starts with a motivation for parallel programming and a classification of parallel architectures. It focuses first on parallelization for distributed memory architectures with MPI. It introduces the major concepts, e.g., point to point communication, collective operations, communicators, virtual topologies, non-blocking communication, single-sided communication and parallel IO. In addition, it covers the overall parallelization approach based on four phases, i.e., decomposition, assignment, orchestration and mapping. The next section presents dependence analysis as the major theoretical basis for parallelization. It introduces program transformations and discusses their profitability and safety based on data dependence analysis. The second major programming interface in the module is OpenMP for shared memory systems. This section covers most of the language concepts as well as proposed extensions. In the last part, the module presents novel programming interfaces, such as PGAS languages, threading building blocks, CUDA, OpenCL, and OpenACC.",
        "voraussetzungen": "IN2076 Advanced Computer Architecture",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1507004&pOrgNr=1",
        "name": "Parallel Programming Systems",
        "kennung": "IN2365",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "• Provide students with the fundamental knowledge about how parallel programming models and languages can be implemented efficiently.\n• Students will learn how a parallel programming model and its runtime interacts with the underlying hardware.\n• Students will be taught fundamental algorithms for key parallel mechanisms such as locks, barriers, etc.",
        "inhalt": "This lecture focuses on the implementation aspects of parallel programming systems. Parallel programming models need compiler and runtime support to map the rich feature set of a parallel programming model to actual parallel hardware. To obtain high performance and high efficiency, this mapping needs to take into account the specific architectural aspects of the underlying computer architecture. This lecture briefly reviews key concepts that have been presented in the lecture \"Parallel Programming\" and \"Microprocessors\". It then turns towards the fundamental algorithms used to implement the concepts of parallel programming models and how they interact with modern processors. While the lecture will focus on the general mechanisms, we will use the Intel processor architecture to exemplify the discussed implementation concepts.",
        "voraussetzungen": "Lecture Parallel Programming (IN2147)\nLecture Microprocessors (IN2075)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=487459&pOrgNr=1",
        "name": "Peer-to-Peer-Systems and Security",
        "kennung": "IN2194",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ab SoSe 13 5 SWS und 6 Credits",
        "lernergebnisse": "At the end of the module the students can describe the goals and properties of peer-to-peer systems. They can recite the internals of selected systems. They can utilize the fundamental mechanisms and protocols of peer-to-peer networks, in particular for search of data and managing membership.\nThey can explain security goals of such networks and discuss concepts to provide security services. They can assess various mechanisms to provide anonymity and can compare selected anonymity systems.\nFinally, they are able to apply this theoretical knowledge into the design and implementation of new protocols and applications, can explain their new design, predict its behavior and critially analyze its weaknesses.",
        "inhalt": "The course covers the following topics:\n- P2P applications, advantages and disadvantages of P2P systems\n- common problems and operations in P2P systems\n- routing in structured and unstructured overlay networks, in particular distributed hash tables\n- network address translation and traversal\n- decentralized network size estimation\n- reputation systems\n- common attacks on P2P protocols and defenses against them\n- anonymity, protocols to create anonymity and attacks on anonymity\n\nThe various protocols are described in theory and practical implementations of those ideas are discussed (in particular Freenet, Bittorrent, Tor, JAP, GNUnet, I2P and Gnutella). The course will also include a practical component focusing on the design and implementation of a new P2P protocol or application with design choices being discussed in class.",
        "voraussetzungen": "IN0010 Introduction to Computer Networking and Distributed Systems, Knowledge in computer networks and the ability to program in C or Java are expected.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3840777&pOrgNr=1",
        "name": "Phänomene der Quantenphysik",
        "kennung": "CIT133004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind nach dem erfolgreichen Abschluss des Moduls in der Lage, die Konzepte und Phänomene der Quantenphysik zu verstehen und deren Relevanz für zukünftige Quantentechnologien einzuschätzen. Außerdem können sie diese Phänomene quantitativ beschreiben und berechnen, sowie die technischen Herausforderungen und Limitierungen für Anwendungen verstehen.",
        "inhalt": "Moderne Quantentechnologien wie der Quantencomputer und die Quantenkryptografie werden bereits für konkrete Anwendungen entwickelt. Diese Technologien basieren auf oftmals kontraintuitiven Konzepten und Phänomenen der Quantenphysik. Diese Vorlesung bietet eine Einführung zu den fundamentalen Grundlagen der Quantenphysik. Bei der Entwicklung der Quantenphysik wurden sich viele „Gedankenexperimente“ überlegt, welche heutzutage mit modernen Messmethoden experimentell überprüfbar geworden sind. Die Vorlesung umfasst die folgenden Themenblöcke: Grundlagen der Quantenphysik; Interferenz-Effekte; Quantenphysikalische Messungen und deren Interpretation; Experimente mit Einzelphotonen, Elektronen, Atomen und Resonatoren; Grenzen zwischen klassischer Physik und Quantenphysik.",
        "voraussetzungen": "Lineare Algebra",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1744303&pOrgNr=1",
        "name": "Physical Layer Methods",
        "kennung": "EI70370",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls verfügen die Studierenden über ein fundiertes Verständnis aktueller Methoden der Übertragungstechnik über leitungsgebundene Medien (Kupfer-Doppelader, Koaxialkabel, Glasfaser). Sie haben die Fähigkeit, physikalische und systemtheoretische Modelle zur Beschreibung von Sender, Übertragungskanal, Empfänger, Entzerrer und Detektor auf reale Systeme anzuwenden, diese bezüglich entstehender Verzerrungen und der letztendlich resultierenden Bitfehlerrate zu analysieren und deren Übertragungsqualität zu bewerten. Mit den erworbenen Kenntnissen sind sie imstande, zuverlässige Übertragungssysteme über eine vorgegebene Leitungsinfrastruktur selbst zu entwerfen.",
        "inhalt": "Kommunikationsnetze über Kupferleitungen und Glasfasern. Digitale Sendesignalformen und Leistungsdichtespektren. Leitungscodierung. Übertragungseigenschaften unterschiedlicher Leitungen: Kupfer-Doppelader, Koaxialkabel, Glasfasern.\nDigitale Übertragung in linearen Systemen: Intersymbol-Interferenz, Augenmuster, Augenöffnung, additive Störungen, Rauschen. Bitfehlerwahrscheinlichkeit. Optische Systeme mit Leistungsdetektion, differentieller Detektion, kohärenter Detektion.\nLineare Entzerrung: Zero-Forcing- und Minimum-Mean-Square-Error-Entzerrung, Nyquist-Systeme. Nichtlineare Entzerrung: Quantisierte Rückkopplung, Tomlinson-Harashima-Vorcodierung.\nOptimale Empfänger: Matched Filter, ML-Detektion, Viterbi-Empfänger. Trellis-Codierte Modulation.\nAktuelle Übertragungssysteme über Kupferkabel und Glasfasern: xDSL, G.fast, ausgewählte elektrische und optische Ethernet-Systeme von 10Mbit/s - 100Gbit/s.",
        "voraussetzungen": "Fundierte Kenntnisse auf folgenden Gebieten: Höhere Mathematik, Signaldarstellung im Zeit- und Frequenzbereich, Modulationsverfahren, Statistische Methoden der Nachrichtentechnik. Kenntnisse über Wellenausbreitung sind von Vorteil.\nVorlesungen, die dieses Wissen vermitteln, sind z.B.:\nAnalysis und lineare Algebra,\nNachrichtentechnik,\nSignaldarstellung,\nStatistische Methoden,\nElektromagnetische Feldtheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1189674&pOrgNr=1",
        "name": "Physical Principles of Electromagnetic Fields and Antenna Systems",
        "kennung": "EI7485",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "The student has obtained a firm understanding of the physical principles of classical electrodynamics (such as forces and fields, moving charges, waves in free-space, Lorentz-covariance, reciprocity, conservation laws, relativistic effects...) and their application to antenna systems. Based on these principles, the student can calculate e.g., radiated power, received voltage, radiation patterns, directivity, efficiency, height, element coupling, excitation, noise and matching of wire antennas and arrays and is able to derive and use multiport circuit models for multi-antenna systems of both near-field and far-field type.",
        "inhalt": "1. The principles of the classical electromagnetic field theory\n- Forces, fields and inertial frames\n- The magnetic field is a relativistic effect\n- Explicit field formulation (Feynman)\n- Differential field equations (Maxwell)\n- When to use quantum electrodynamics\n- The great conservation laws: charge, energy, and momentum\n- Uniqueness theorem for the field solutions\n- The equivalence of energy and mass (Einstein)\n- Scalar and vector potential\n- Gauge transformations\n- The wave equation\n- Special relativity (Lorentz-covariance, 4-vector notation)\n- Field invariants\n- Relativistic effects\n- Duality transformations\n- Solution of the field equations\n- Sinusoidal time dependence and complex fields\n\n2. Dipole Radiation\n- Hertzian dipole\n- Radiated power and radiation resistance\n- Antenna pattern and directivity\n- Effective area\n- The reciprocity theorem\n- Antenna current distribution\n- Effective antenna length\n- Long dipoles\n- Antenna efficiency\n- Canonical minimum scattering\n\n3. Antenna Array Theory\n- Element coupling part I (partial-field analysis)\n- Radiated power\n- Antenna pattern\n- Optimum excitation\n- Directivity and superdirectivity\n- Antenna array efficiency\n- Arrays of dipoles\n- A theory of the array of isotrops\n\n4. Multi-antenna systems\n- Multiport model\n- Element coupling part II (full-field analysis)\n- Thermal equilibrium antenna noise\n- Non-equilibrium receiver noise\n- Matching and decoupling\n- Near-field MIMO Systems (full interaction)\n- Far-field MIMO Systems (partial interaction)\n\nMathematical preliminaries (reviewed in lecture):\n- vectors\n- general coordinates\n- differential vector operators\n- vector integration\n- integral theorems (Gauss, Stokes, Green)\n- gradient fields and scalar potential\n- solenoidal fields and vector potential\n- Lemma of Poincare",
        "voraussetzungen": "The lecture is self contained. All physical concepts and necessary mathematical tools\nare developed in the course of the lecture.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3035295&pOrgNr=1",
        "name": "Post Shannon Theory",
        "kennung": "EI71103",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls können die Studierenden mathematische und konzeptuelle Methoden zur Behandlung von Post-Shannon Kommunikationsmodellen anwenden.\nSie können Kommunikationszenarien analysieren und Kodierungssätze sowie allgemeine und spezielle Strategien entwickeln.",
        "inhalt": "Heutzutage sind Maschine-zu-Maschine-Kommunikation und Maschine-zu-Mensch-Kommunikation wesentliche Komponenten der 5. Mobilfunkgeneration. Um diese hoch anspruchsvollen Anwendungen zu realisieren, müssen die notwendigen Latenz- Resilienz- und Datensicherheitsanforderungen in die physikalische Domäne eingebettet sein.\nViele dieser Anwendungen sind im Sinne des Shannon Übertragungsschematas implementiert. Für diese Art der Kommunikation muss der Empfänger in der Lage sein, alle Nachrichten des Absenders zu dekodieren. Die entsprechende Kommunikationsaufgabe ist in vielen Fällen ineffizient.\nIm Gegensatz dazu können neue Kommunikationsmodelle zu erheblichen Leistungssteigerungen führen. Ein Beispiel ist das Identifizierungsschema von Ahlswede und Dueck wenn es für die zuvor genannten Anwendungen geeignet angewendet wird. In diesem Szenario will der Empfänger nur entscheiden, ob der Sender eine relevante Nachricht gesendet hat oder nicht. Natürlich hat der Sender keine vorherige Information über die Nachrichten, die der Empfänger für wichtig hält. Die Relevanz bestimmter Nachrichten für den Empfänger kann während der Anwendung geändert werden.",
        "voraussetzungen": "Interesse an mathematischer Modellierung und\nGrundkenntnisse in Informationstheorie.\n\nEmpfohlen werden Kombinationen dieses Moduls mit der Absolvierung eines der folgenden Module:\n„EI7431 – Information Theory“,\n„EI7344 – Informationstheoretische Grundlagen der Informationsforensik und biometrische Sicherheit“,\n„EI7345 - Informationstheoretische Sicherheit“,\n„EI7353 - Multi-User Information Theory\"",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3832419&pOrgNr=1",
        "name": "Practical Course Advanced Robocup@Home",
        "kennung": "CIT431010",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Analytische Fähigkeiten und technisches Wissen: Durch das Verfassen von Berichten zu technischen Überprüfungen und Anforderungsanalysen erlangen die Studierenden ein tiefgreifendes Verständnis der Technologien und Strategien, die in früheren RoboCup@Home-Wettbewerben verwendet wurden. Dieser Prozess verbessert ihre Fähigkeit, komplexe technische Lösungen zu analysieren, zu bewerten und zu verstehen.\n\nPraktische Robotikfähigkeiten und Teamarbeit: Die praktische Erfahrung, ein Abschlussprojekt in Teams zu vollenden, lehrt die Studierenden die praktische Anwendung theoretischen Wissens in der Robotik. Dazu gehört die Arbeit an Objekterkennung, -erkennung, -manipulation und -aufgabenplanung, was Teamarbeit und kollaborative Problemlösungsfähigkeiten fördert.\n\nIndividuelle technische Kompetenz: Die Studierenden werden anhand ihrer individuellen Beiträge zum Abschlussprojekt bewertet, wobei der Schwerpunkt auf ihrer Fähigkeit liegt, technisch fundierte Lösungen zu entwickeln und diese effektiv mit Software wie ROS umzusetzen.\n\nKommunikations- und Präsentationsfähigkeiten: Der Kurs erfordert von den Studierenden, ihre Projektlösungen zu präsentieren, wodurch sie ihre Fähigkeit, komplexe Ideen effektiv zu kommunizieren, verbessern. Die Live-Demonstration und die Fragerunde entwickeln weiter ihre Fähigkeiten, ihre technischen Entscheidungen zu artikulieren und zu verteidigen.\n\nUmfassendes Verständnis und Berichterstattung: Das Schreiben eines detaillierten Abschlussprojektberichts ermöglicht es den Studierenden, ein umfassendes Verständnis des Kursmaterials zu demonstrieren und ihr Wissen auf eine praktische Herausforderung anzuwenden.\n\nInsgesamt verlassen die Studierenden den Kurs mit einer Mischung aus theoretischem Wissen, praktischen Robotikfähigkeiten, analytischen Fähigkeiten, Teamerfahrung, individueller technischer Kompetenz und starken Kommunikationsfähigkeiten.",
        "inhalt": "1. Einführung, Einführung in den Robocup@home-Wettbewerb, historischer Rückblick, Herausforderungen beim Robocup@home-Wettbewerb\n2. Überprüfung der Planung\nLokalisierung und Navigation, Kartierung und Lokalisierung, Pfadplaner, Navigation in nicht kartierten Umgebungen 2.1.4. Navigation in dynamischen Umgebungen\nBewegungsplanung, Hindernisvermeidung in unübersichtlichen Szenen, Bewegungsplanung mit Einschränkungen\n\n3. Rückblick auf die Wahrnehmung\nErfassen, maskierte Punktwolkensegmentierung, Objekterkennung\nObjektbeschriftung, Griffpunkterkennung\nMensch-Roboter-Interaktion, Erkennung der menschlichen Körperhaltung, Gestenerkennung, Gesichtserkennung\n4. Abschlussprojekt",
        "voraussetzungen": "Die Teilnahme am Praxiskurs Robocup@Home und das Bestehen der Prüfung wird dringend empfohlen.\nStarker mathematischer Hintergrund in linearer Algebra, Trigonometrie und Infinitesimalrechnung. Kenntnisse in Robotik, z. B. Bewegungsplanung, Steuerung usw.\nGrundkenntnisse in C++, Python und ROS.\nGrundkenntnisse des maschinellen Lernens, z. B. Objekterkennung, Klassifizierung usw.\nAlle Tutorial-Übungen werden in ROS Noetic (Ubuntu 20.04) implementiert",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4401248&pOrgNr=1",
        "name": "Practical Course Atomically Thin 2D Transistors and LEDs",
        "kennung": "CIT431020",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the module, the students will be able to fabricate, characterize, and handle 2D materials, as well as to build heterostructure devices based on these materials. They have also developed the skills needed to understand the limitations and potential advantages of such materials for next-generation nano-electronics. In addition, the students will have obtained the skills to present their results in an academic environment.",
        "inhalt": "The practical course offers an introduction to 2D materials, their fabrication, properties, and applications in electro-optical devices. The participating students get hands on experience in fabricating atomically thin 2D materials using the mechanical exfoliation technique, the assembly of different materials into heterostructures by dry stamping, connecting to electrical circuits, and in measuring their opto-electronic characteristics. Two exemplary experiments are the fabrication and characterization of atomically thin field effect transistors and atomically thin LEDs. The devices that the students fabricate represent the ultimate atomic limit how small these devices can be miniaturized. The materials involved are graphene, transition metal dichalcogenides, and hexagonal boron nitride.",
        "voraussetzungen": "No specific prerequisites. The lecture 2D Materials and Applications in Electronics is beneficial but not required.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3835111&pOrgNr=1",
        "name": "Practical Course Atomistic Simulation of Nanomaterials and Electronic Devices",
        "kennung": "CIT431011",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the module, the students will be able to perform modern atomistic simulations and can calculate properties of (e.g., semiconducting) nanomaterials and electronic heterostructure devices. They have also developed the skills needed to understand the limitations of such computational methods and can assess the reliability of simulation results.",
        "inhalt": "The practical course offers an introduction to modern atomistic simulation tools, such as density functional theory (DFT). The participating students get hands on experience using these tools to calculate material properties and electronic devices. The topics include 2D and other nanomaterials; semiconductor heterostructures; quantum LEDs; batteries and energy storage; among others.",
        "voraussetzungen": "No specific prerequisites.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2861802&pOrgNr=1",
        "name": "Practical Course Wearable Robotics: Upper Limb Exoskeletons",
        "kennung": "EI78066",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende dieses Kurses sind die Teilnehmer in der Lage:\n- Die verschiedenen Wearable-Robotik-Technologien, Anforderungen und Anwendungen zu verstehen.\n- Die Rolle der Mensch-Roboter-Interaktion und des menschlichen Faktors bei der Steuerung von Exoskeletten zu verstehen.\n- Die Modellierung des menschlichen Muskel-Skelett-Systems zu beschreiben\n- Kinematik und Dynamik von Exoskeletten der oberen Gliedmaßen modellieren\n- Signale von mehreren Sensoren in Exoskelett-Geräte integrieren, abhängig von den beabsichtigten Therapieergebnissen.\n- Die kinematischen und dynamischen Modelle des Exoskeletts zu nutzen, um Steuerungsschemata unter Verwendung multisensorischer Modalitäten zu entwerfen",
        "inhalt": "In diesem Kurs führen wir die Studenten in die Grundlagen der Robotik und Steuerung ein, um tragbare Robotik zu entwickeln. Der Kurs besteht aus theoretischen Vorlesungen, praktischen Übungen und einem Abschlussprojekt. Die Vorlesungen führen in ausgewählte Themen der Robotik, Sensoren und Aktoren ein, indem sie diese mit der Neuromechanik und der motorischen Steuerung beim Menschen und deren Anwendung auf Exoskelette für die oberen Gliedmaßen mit besonderem Fokus auf die Rehabilitation von Patienten mit neurologischen Erkrankungen verbinden. In den praktischen Übungen werden die Studenten angeleitet, die Robotersteuerung eines Exoskeletts der oberen Gliedmaßen mit einem einzigen Gelenk zu programmieren, wobei die in unserem Labor entwickelte Roboterhaut als sensorische Schnittstelle verwendet wird. Jede Studentengruppe erhält ein Hardware-Setup, mit dem sie in den Tutorien und Projektphasen arbeiten kann. Im letzten Teil des Kurses werden die Studenten bei der Entwicklung ihrer Abschlussprojekte durch regelmäßige Kolloquien mit den Dozenten unterstützt. Von den Studenten wird erwartet, dass sie das in den Vorlesungen und Tutorien Gelernte anwenden, um Steuerungsroutinen für Exoskelette zu implementieren, die in Rehabilitationsbereichen der Robotik eingesetzt werden.\nVorlesung 1: Einführung in die Wearable Robotics und die menschliche Biomechanik\n- Einführung in die Wearable Robotics, Typen und Anwendungen\n- Exoskelette der oberen Gliedmaßen für Rehabilitation und neurologische Erkrankungen\n- Vorwärtskinematik: Homogene Transformationen und Arten von Gelenken\n- Menschliche Biomechanik: Kinematik der oberen Gliedmaßen\nÜbung 1: Einrichten der Umgebung, ROS-Grundlagen und homogene Transformationen.\nVorlesung 2: Menschliche Kinematik\n- Muskulatur der oberen Extremitäten, Gelenkkopplung, Bewegungsumfang, Kraft- und Drehmomentbereich beim Menschen.\n- Vorwärtskinematik: D-H-Konvention, Jacobianer und Trajektorienplanung\nÜbung 2: URDF-Roboterbeschreibung, D-H-Konvention, Jacobianer, Trajektorienplanung\nVorlesung 3: Dynamik der menschlichen Bewegung\n- Aktivitäten des täglichen Lebens und Dynamik der menschlichen Bewegung\n- Bewegungsverlust nach neurologischen Erkrankungen\n- Roboter-Dynamik: Euler-Lagrange-Methode, Parameter der menschlichen Gelenkdynamik\nÜbung 3: Roboterdynamik mit der Euler-Lagrange-Methode, Einrichtung des ROS-Arbeitsbereichs\nVorlesung 4: Steuerungsstrategien für das Exoskelett der oberen Gliedmaßen\n- Beschäftigungstherapie und Rehabilitationsstrategien\n- Stand der Technik der Roboter-Rehabilitationssteuerung\n- Gelenkraum- und kartesische Raumsteuerung\n- Positions- und Impedanzsteuerung\nÜbung 4: Gelenk- und kartesische Raumsteuerung in einem Exoskelett der oberen Extremitäten\nVorlesung 5: Sensorik und Aktorik des Exoskeletts der oberen Gliedmaßen\n- Stand der Technik: Sensorik und Aktorik in Exoskeletten\n- Einführung in die Roboterhaut und Anwendungen in Exoskeletten\n- Verwendung der Roboterhaut zur Impedanzkontrolle\nÜbung 5: Aufbau der Roboterhaut und Impedanzkontrolle.",
        "voraussetzungen": "- Starker mathematischer Hintergrund in Linearer Algebra, Trigonometrie und Kalkül\n- Grundkenntnisse in Robotik (bevorzugt).\n- Grundkenntnisse in C++ und Matlab\n- Grundkenntnisse in ROS (bevorzugt)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1369743&pOrgNr=1",
        "name": "Praktikum Industrie 4.0",
        "kennung": "EI07041",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, ein Rapid Prototyping Werkzeug basierend auf Simulink zu verwenden um Signale in Echtzeit aufzunehmen, zu verarbeiten und wiederzugeben. Ausserdem sind die Teilnehmer in der Lage die Einflüsse von Paketvermittlungsnetzen und –knoten auf Bandbreite und Latenz abzurufen und zu beschreiben. Des Weiteren können die Studierenden aussagekräftige Messreihen durchführen und analysieren. Weiterhin sind sie in der Lage, die Performanz- und Flexibilitätseigenschaften verschiedener Implementierungskonzepte von Paketvermittlungsknoten zu verstehen. Sie können die Latenzen in Videoübertragungen darstellen und Teile einer Videoverzögerungsmessung implementieren. Weiterhin kennen sie RFID-Systeme, verstehen sicherheitsrelevante Konzepte und können einen kryptografischen Algorithmus anwenden. Darüber hinaus können die Studierenden auditorische Displays und deren perzeptuelle Eigenschaften analysieren. Schließlich können sie die elementaren Schritte von 3D-Druck erklären und Störeinflüsse erkennen und klassifizieren.",
        "inhalt": "Schlüsselaspekte von Industrie 4.0: Virtualisierung, Echtzeitfähigkeit, Flexibilität und Modularität.\n- Theorie und Praxis von Echtzeitanwendungen über Paketvermittlungsnetze, Messen des Einflusses von Netzwerkeffekten auf latenzkritische Regelungsanwendungen.\n- Funktionsweise und Eigenschaften von Paketvermittlungsknoten in Hardware und Software.\n- Theorie zu Verzögerung bei Videoübertragung, Implementierung einer Latenzmessung.\n- Konzepte zu Vertraulichkeit und Datenschutz im Internet der Dinge, Anwendung eines kryptografischen Algorithmus in RFID-Verbindungen.\n- Verwendung und Auslegung von auditorischen Displays im industriellen Umfeld.\n- Datenverarbeitungskette, FDM-Verfahren und Unterdrückung von Störeinflüssen beim 3D-Druck.",
        "voraussetzungen": "Empfohlen werden Kenntnisse der Vorlesungen Signaldarstellung, Messsystem- und Sensortechnik, Regelungssysteme, und Kommunikationsnetze.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1704971&pOrgNr=1",
        "name": "Praktikum Regelung und Automation",
        "kennung": "EI06631",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage für unterschiedliche, praxisnahe steuerungs- und regelungstechnische Problemstellungen systematisch Lösungen zu erarbeiten, diese auf einem realen Versuchsaufbau umzusetzen und das Ergebnis kritisch zu bewerten.",
        "inhalt": "Das Praktikum umfasst Versuche zu folgenden Themenschwerpunkten: Rechnergestützter Reglerentwurf, Reglerentwurf im Zustandsraum, Beobachterentwurf, optimierungsbasierter Reglerentwurf, Regelung mobiler Roboter, Steuerung mit Petrinetzen, Steuerung mit SPS und Neuronale Netze",
        "voraussetzungen": "Grundlagen der Regelungstechnik\n\nFolgendes Modul sollte vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4390398&pOrgNr=1",
        "name": "Praktikum RISC-V für AI",
        "kennung": "CIT431019",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to analyze and evaluate a RISC-V processor with different types of accelerations that target machine learning algorithms. Students will learn how to employ HW/SW co-optimization and hardware customization for RISC-V processors that are designed for machine learning tasks such as neural networks and brain-inspired algorithms. Students will be able to design their own accelerator, test it, and evaluate the gain in performance along with the overheads.",
        "inhalt": "RISC-V processor design with the focus on AI and machine learning algorithms. Processor customization to include special accelerators for the algorithms. Algorithm modification to include the concepts of HW/SW codesign which are performed to improve the processor. Evaluation of the gained performance due to the AI customization along with the potential overheads. AI algorithms. Verification for the implementation. Algorithm programming and modification to include the performed customization.",
        "voraussetzungen": "Good knowledge in computer architecture\nGood knowledge in programming\nBasic knowledge in RTL",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1624244&pOrgNr=1",
        "name": "Praktikum Robot Modelling and Identification",
        "kennung": "EI78030",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss dieses Labors sind die Studierenden in der Lage, verschiedene Aktorkonzepte, wie Pneumatikaktoren oder Gleichstrommotoren, sowie gängige Beobachtungs- und Regelungsstrategien, Identifikationsmethoden (linear + Pseudoinverse und nichtlinear + gradientenbasiert), einen kontinuierlichen sowie diskreten PID Regler, LQ Regler, Luenbergerbeobachter und Störgrößenbeobachter zur Erkennung von Kollisionen, in Matlab/Simulink zu implementieren. Sie haben theoretisch-fundiertes Wissen in der kaskadierten Regelung und Impedanzregelung und können diese auf ein Robotergelenk anwenden. Sie verfügen über die nötigen Kenntnisse, um seriellkinematische Roboter in Maple zu modellieren, und in Matlab/Simulink zu regeln und zu identifizieren.",
        "inhalt": "Dieses Labor behandelt verschiedene mechatronische Grundkonzepte der Robotik mit dem Focus auf Modellierung, Simulation und Regelung unter Verwendung der numerischen Software Matlab/Simulink sowie dem Computeralgebrasystem Maple.\nDas Labor umfasst die Modellierung und Regelung eines permanenterregten Gleichstrommotors sowie eines Pneumatikaktors, die zeitdiskrete Regelung eines Gleichstrommotors, den Reglerentwurf eines elektrischen Antriebs im Frequenzbereich, die Identifikation eines Robotergelenks, einen Regler- und Beobachterentwurf für ein Robotergelenk, eine Impedanzregelung für ein Robotergelenk, einen Kraftregler und Kollisionsbeobachter, die dynamisch/kinematische Modellierung einer seriellen Roboterkinematik sowie deren Identifikation und Trajektorienoptimierung.",
        "voraussetzungen": "Die Studierenden sollten über solide Grundkenntnisse in den der folgenden Bereichen verfügen:\n• Regelungstechnik\n• Mechanik, Mehrkörpersysteme\n• Elektrische Antriebstechnik\n• Robotik",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1370141&pOrgNr=1",
        "name": "Praktikum Roboterregelung",
        "kennung": "EI06931",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Absolvierung des Moduls sind die Studierenden in der Lage die grundlegenden Algorithmen der Roboterregelung im Detail zu verstehen und auch in der Praxis auf neue Fragestellungen anzuwenden, Das gilt sowohl für Umsetzungen in der Simulation als auch am realen Roboter.",
        "inhalt": "Das Modul wird als ergänzendes vertiefendes Modul begleitend zum Modul \"Einführung in die Roboterregelung\", in dem die Studierenden die theoretischen Grundlagen der Roboterregelung erlernen, angeboten.\nDas Praktikum umfasst sieben Versuche zu folgenden Themenschwerpunkten: programmiertechnische Grundlagen für die Roboterprogrammierung, Kinematik und inverse Kinematik von Robotermanipulatoren, Dynamik von Robotermanipulatoren, Roboterregelung, praktische Evaluierung der Verfahren an einem dreigelenkigen SCARA-Roboter, Steuerung eines sechsgelenkigen Industrieroboters, Steuerung und Regelung eines humanoiden Roboters",
        "voraussetzungen": "Regelungssysteme 1, Einführung in die Roboterregelung",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2693340&pOrgNr=1",
        "name": "Praktikum Software Engineering",
        "kennung": "EI04029",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, die Struktur und die Organisation eines kollaborativen Software Projekts zu verstehen. Weiterhin ist der Studierende in der Lage die Konzepte des Unit Testing für die Validierung der eigenen Implementierungen auf jeder Ebene anzuwenden.",
        "inhalt": "Die Software Engineering Fähigkeiten eines Ingenieurs werden mit wachsender Digitalisierung und Automatisierung immer wichtiger. Software Engineering bedeutet nicht nur durch die Implementierung alle Anforderungen zu erfüllen und korrekte Ergebnisse zu erzielen. Ein zweiter, sehr wichtiger Aspekt ist die Wartbarkeit der Software. Mehrere Entwickler müssen in der Lage sein, den Code über Monate, Jahre oder Jahrzehnte pflegen zu können. Durch die Lebensdauer und die Anzahl der mitwirkenden Entwickler entstehen neue Anforderungen und Herausforderungen während des gesamten Entwicklungsprozesses. Die Software muss testbar, lesbar und erweiterbar sein. Konzepte wie Unit Testing, Code Reviews und Continuous Integration unterstützen hier den Entwicklungsprozess.\nDieser Kurs vermittelt grundlegende Konzepte des Software Engineerings unabhängig von einer spezifischen Programmiersprache. Der Kurs basiert auf der Programmiersprache C++, um auf die erworbenen Kenntnisse des C-Praktikums zu Beginn des Bachelor EI aufzubauen. Der Kurs beinhaltet eine grundlegende Einführung in Compiler und Linker, das Build System, Unit Testing, Refactoring, Code Review und Werkzeuge der Software Entwicklung (VCS, CI, …). Jede Gruppe von Studierenden wendet das erworbene Wissen in praktischen Übungen und Hausaufgaben an.\nInsgesamt behandelt der Kurs die folgenden Themen:\n\n● Einführung zu Compiler und Linker\n● Buildsysteme\n● Konzepte des Unit Testing\n● Code Refactoring\n● Code Review\n● Werkzeuge (Versionsverwaltung, Continuous Integration, …)",
        "voraussetzungen": "Grundlagen der Programmierung",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=477800&pOrgNr=1",
        "name": "Praktikum VHDL",
        "kennung": "EI0463",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls kennen die Studierenden die Grundkonzepte der Hardware-Modellierung mit Hilfe einer Hardware-Beschreibungssprache (hier VHDL). Sie sind in der Lage, entsprechende Modelle zu erstellen, zu simulieren und in Gatter-Netzlisten zu synthetisieren. Zudem können sie für diese Netzlisten auch die statische Timing Analyse durchzuführen und sie simulieren.\nInsgesamt haben damit die Teilnehmer die Grundfertigkeiten zur Erstellung synthetisierbarer HW Modelle erworben.",
        "inhalt": "Gegenstand dieses Praktikums ist der Entwurf von digitalen integrierten Schaltungen mit der Hardware-Beschreibungssprache VHDL. Das Praktikum beinhaltet sowohl die Modellierung und die Simulation von digitalen Schaltungen als auch deren Synthese in Gatter-Netzlisten.\nFolgende Hauptaspekte sollen vermittelt werden: Aufbau von VHDL Modellen (Entity, Architecture, Package); Nebenläufigkeit von Hardware und deren Erfassung in VHDL; Strukturale und Verhaltensmodellierung; Prozesse als Schnittstelle zwischen nebenläufiger und sequentieller Modellierung; Modellierung des Zeitverhaltens in VHDL (Event Queue, Delta-Zyklen); Synchrones Design; Synthetisierbarkeit von Modellen",
        "voraussetzungen": "Schaltnetze und Schaltwerke\n\nFolgendes Modul sollte vor der Teilnahme bereits erfolgreich absolviert sein:\n- Digitaltechnik",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1227802&pOrgNr=1",
        "name": "Principles of Information Engineering",
        "kennung": "EI10001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After attending the module, the students:\n- can describe the main principles of operation of information transmission systems and networks as well as of data processing devices and methods\n- are familiar with fundamental design principles of such systems and understand why existing systems are designed the way they are\n- have an overview of the underlying physical and mathematical principles and can distinguish fundamental limitations from technological constraints\n- have learned to take an engineering perspective on information transmission and processing tasks (e.g., by structuring a system into building blocks and abstraction layers)\n- know the main mathematical methods relevant for this field of engineering and are able to apply a selection of these methods to example problems",
        "inhalt": "* Fundamentals:\n- Elements of Stochastic Modeling and Analysis\n- Signals (analog/digital, deterministic/stochastic, real/complex)\n- The Frequency Domain (Fourier transform, spectrum and bandwidth, sampling theorem)\n- Information Theory (fundamentals, source coding, channel coding, channel capacity)\n* Information Transmission and Storage Systems:\n- Elements of Data Transmission (transmission chain, filtering, modulation, detection)\n- Communication Systems (real systems compared to theory, channel models, performance criteria, comparison to data storage, current trends)\n- Communication Networks (network structures, interference, broadcast and multiple access, multihop and relaying, abstraction layers, network planning)\n* Elements of Information Processing\n- Data Processing Devices (abstraction layers, real systems compared to theory, digital processing, algorithms and complexity)\n- Data Acquisition and Analysis (sampling and quantization, information and noise modeling, feature extraction, machine learning)\n- Security Aspects (reliability, security, secrecy, encryption)",
        "voraussetzungen": "The following module should be successfully completed prior to participation: MA9711 Mathematics in Natural and Economic Science 1.\nThe following module is recommended to be attended in parallel (if not already attended earlier): MA9712 Statistics for BWL.",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1490252&pOrgNr=1",
        "name": "Principles of Information Engineering",
        "kennung": "EI10007",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After attending the module, the students:\n- can describe the main principles of operation of information transmission systems and networks as well as of data processing devices\n- are familiar with fundamental design principles of such systems and understand why existing systems are designed the way they are\n- have an overview of the underlying physical and mathematical principles and can distinguish fundamental limitations from technological constraints\n- have learned to take an engineering perspective on information transmission and processing tasks (e.g., by structuring a system into building blocks and abstraction layers)\n- know the main mathematical methods relevant for this field of engineering and are able to apply a selection of these methods to example problems",
        "inhalt": "* Fundamentals:\n- Elements of Stochastic Modeling and Analysis\n- Signals (analog/digital, deterministic/stochastic, real/complex)\n- The Frequency Domain (Fourier transform, spectrum and bandwidth, sampling theorem)\n- Information Theory (fundamentals, source coding, channel coding, channel capacity)\n* Information Transmission and Storage Systems:\n- Elements of Data Transmission (transmission chain, filtering, modulation, detection)\n- Communication Systems (real systems compared to theory, channel models, performance criteria, comparison to data storage, current trends)\n- Communication Networks (network structures, interference, broadcast and multiple access, multihop and relaying, abstraction layers, network planning)\n* Elements of Information Processing\n- Data Processing Devices (abstraction layers, real systems compared to theory, digital processing, algorithms and complexity)\n- Data Acquisition (sampling and quantization, information and noise modeling)",
        "voraussetzungen": "The following module should be successfully completed prior to participation: MA9711 Mathematics in Natural and Economic Science 1.\nThe following module is recommended to be attended in parallel (if not already attended earlier): MA9712 Statistics for BWL.",
        "modulniveau": "",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1199485&pOrgNr=1",
        "name": "Probabilistische Graphische Modelle in der Computer Vision",
        "kennung": "IN2329",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an diesem Modul werden die Studenten mit verschiedenen graphischen Modellen und deren Anwendung in der Computer Vision vertraut sein. Insbesondere können die Studenten Markov Random Field (MRF) Modelle und deren zugrundeliegenden Optimierungsverfahren verstehen und auf eine Vielzahl von Problemen in der Computer Vision anwenden. Sie lernen die Fähigkeit entsprechende Inferenz- und Lernverfahren selbstständig zu implementieren.",
        "inhalt": "Viele Probleme der Computer Vision lassen sich als Klassifizierungsproblem darstellen. Üblicherweise entstehen solche Probleme bei Markov Random Field (MRF) Modellen, die es uns in eleganter Weise ermöglichen, verschiedene Multilabel-Probleme des Bildverstehens zu modellieren.\nUnter bestimmten Annahmen können einige „gutartige“ Probleme in polynomieller Zeit gelöst werden, während andere wiederum NP-schwer sind. Wir werden uns auf der einen Seite mit effizienten Verfahren beschäftigen, die diese gutartigen Probleme global optimal lösen. Auf der anderen Seite werden wir die NP-schweren Probleme approximativ lösen.\nTheoretisch beschäftigen wir uns mit:\nGerichtete und ungerichtete graphische Modelle\n- Bayessche Netze\n- Markov Random Fields\n- Conditional Random Fields\nParameterlernen für MRF und CRF Modelle\n- Gradientenbasierte Optimierung\n- Stochastischer Gradientenabstieg\n- Structured Support Vector Machines\nExakte MAP Inferenz in MRFs\n- Belief propagation auf Bäumen; sum-product Algorithmus\n- Binäre Graph-cuts\n- Branch-and-mincut\nApproximative MAP Inferenzmethoden\n- Loopy belief propagation\n- Mean field Approximationen\n- Graph cuts: alpha expansion, alpha-beta swap\n- Relaxierungen basierend auf linearer Programmierung: fast primal-dual schema\nPraktische Anwendungen die wir behandeln werden sind:\n- Binäre- und Multiobjekt-Bildsegmentierung\n- Schätzen von menschlichen Posen\n- Tiefenrekonstruktion aus Stereobildern\n- Objekterkennung",
        "voraussetzungen": "Algebra und multivariate Analysis) sowie Grundwissen der Informatik (insbesondere Programmierung, zum Beispiel dynamische Programmierung und einfache Datenstrukturen) empfohlen.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3391387&pOrgNr=1",
        "name": "Programmable Communication Networks Lab",
        "kennung": "CIT4310003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, students are able to develop a communication system based on concepts of programmable communication networks (e,g, P4, SDN). They are able to apply appropriate methods to evaluate communication systems.",
        "inhalt": "Programmable Communication Networks describes a fundamentally new paradigm for the control and operation of communication networks with a software focus. Wide-spread related concepts are P4 (Programming Protocol-independent Packet Processors) and SDN (Software-Defined Networking). The control software is decoupled from the forwarding hardware and moved to a central entity the SDN or P4 controller. Programmability of networks opens fundamentally new opportunities for the design of communication systems.\n\nThe module addresses state-of-the art challenges in communication systems in the form of a group project. The goal of the project is to develop, test and measure communication systems. The project's topic and problem definition will be given at the beginning of the semester. As a start, the participants will work on reviewing the literature available on the topic and creating a project plan. The project is implemented as a group work, with supervisors available to solve and discuss problems. Finally, the implemented communication system is evaluated through measurements or simulation.\n\nEach semester there would be given project topics.",
        "voraussetzungen": "Basic knowledge of communication networks:\n- network protocols and protocol stacks (TCP/IP and MAC layer)\n- performance analysis of communication networks\n- basic network algorithms for resource management, routing, scheduling, etc.\n\nProgramming skills.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458161&pOrgNr=1",
        "name": "Programmierpraktikum Angewandte Softwareentwicklung",
        "kennung": "IN2120",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer erhalten einen praktischen Einstieg in die objektorientierte Programmierung mit Java: Objekte, Vererbung, Ein-/Ausgabe, Ausnahmebehandlung, Visualisierung mit AWT, Multi-Threading.",
        "inhalt": "Im Rahmen des Praktikums wird in Java ein System entwickelt, mit dem sich eine Reihe von Aufgaben im Umfeld der Textverarbeitung durchführen lassen. Die wesentliche Idee dabei ist es, einzelne einfache Komponenten zu entwickeln, die dann in ihrem Zusammenwirken auch komplexe Aufgaben lösen können. Inhalt des Praktikums ist sowohl die Entwicklung spezifischer Komponenten als auch der Infrastruktur zur Integration und Konfigurierung der Komponenten. Im Rahmen dieses Praktikums wird dazu eine graphische Benutzungsoberfläche zur Konfiguration des Systems entwickelt.",
        "voraussetzungen": "",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977264&pOrgNr=1",
        "name": "Programmierung und Regelung für Mensch-Roboterinteraktion",
        "kennung": "IN2308",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende der Vorlesung sollen die Studierenden nicht nur theoretische Kenntnisse, sondern auch erste praktische Erfahrungen im Umgang mit nachgiebigen, drehmomentgeregelten Robotersystemen und deren Programmierung haben.",
        "inhalt": "Die Vorlesung behandelt Aspekte der robotischen Manipulation und Mensch-Roboterinteraktion von den theoretischen Grundlagen über Implementierung in Simulationsmodellen bis hin zur Hands-on Erprobung auf dem KUKA-DLR Leichtbauroboter.\nThemen im Einzelnen:\n- Robotermodelle und Parameteridentifikation\n- Positionsregelung\n- Drehmomentregelung\n- Kartesischen Impedanzregelung\n- Kollisionsdetektion\n- Reaktive Bahngenerierung\n- Zustandsautomaten zur Aufgabenprogrammierung",
        "voraussetzungen": "Introduction to robotics, IN2067 Robotics",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=458550&pOrgNr=1",
        "name": "Programming of Supercomputers",
        "kennung": "IN2190",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "The students can design, implement, and optimize production programs for supercomputers. They are able to apply advanced concepts of OpenMP and MPI. They understand the difference of interactive and batch computing on production parallel systems and can manage both environments.",
        "inhalt": "During the course the concepts learned in Parallel Programming (IN2147) are trained and extended. The students work on realistic code examples, parallelize and tune them with MPI and OpenMP. They work on the large scale parallel systems at LRZ and get acquainted with interactive and batch processing on a production system.",
        "voraussetzungen": "IN2189 Computer Architecture and Networks, IN2147 Parallel Programming",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456509&pOrgNr=1",
        "name": "Programmoptimierung",
        "kennung": "IN2053",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Teilnehmer wissen um den häufig auftretenden Widerspruch zwischen guter Strukturiertheit und Lesbarkeit eines Programmes und der ebenfalls erwünschten größt möglichen Effizienz bei der Programm-Ausführung. Sie beherrschen die Techniken, mit denen in der Optimierungs-Phase eines Compilers durch Analyse und gegebenenfalls optimierende Transformationen die Effizienz der Programm-Ausführung erhöht werden kann. Sie können diese auf gegebene kleine Programme anwenden und gegebenenfalls neue Analysen und optimierende Transformationen entwickeln.",
        "inhalt": "Die Vorlesung beginnt mit grundlegenden Datenfluss-Analysen wie Verfügbarkeit von Ausdrücken und Lebendigkeit von Variablen zusammen mit den optimierenden Transformationen, die durch diese Informationen ermöglicht werden. Motiviert durch diese Beispiele wird die notwendige Theorie über vollständige Verbände und monotone Funktionen entwickelt, die zur Berechnung der Programm-Analysen erforderlich ist. Anschliessend betrachten wir weitere elaboriertere Analysen etwa zur Konstantenpropagation. Mit der Intervall-Analyse diskutieren wir Methoden, die auch in dem Fall anwendbar sind, wenn die gewöhnliche Fixpunkt- Iteration nicht terminiert. Weitere Themen sind:\n- interprozedurale Analyse;\n- Pointeranalysen;\n- Fixpunkt-Algorithmen.\nWeiterhin betrachten wir Hardware-spezifische Optimierungstechniken wie etwa:\n- Registerverteilung;\n- Instruktionsselektion;\n- Instruction Sceduling\nsowie Techniken zur besseren Ausnutzung von Caches.",
        "voraussetzungen": "Bachelor Informatik, Grundkenntnisse in Programmiersprachen oder Compiler.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=973871&pOrgNr=1",
        "name": "Project Laboratory Human Centered Robotics",
        "kennung": "EI7413",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage ein konkretes Problemen im Anwendungskompetenzbereich human-centered Robotik eigenständig zu lösen. Das umfasst die Analyse des Problems und die Entwicklung von passenden Lösungsstrategien. Insbesondere sind die Studierenden in der Lage effizient und problemorientiert im Team zu arbeiten. Methodisch können die Studierenden in einer schriftliche Dokumentation ihre Ergebnisse und den Stand der Technik strukturiert darstellen. Im Abschlussvortrag zeigen die Studierenden, dass sie ihre Ergebnisse vor Publikum in verständlicher Form darstellen können.",
        "inhalt": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der human-centered Robotik. Der Fokus liegt auf der Regelung, Planung, Interaktion und adaptiven Algotithmen für Roboter in der Mensch-Roboter Interaktion.",
        "voraussetzungen": "Grundlagen der Regelungs- und Steuerungstechnik und Robotik\nProgrammieren in C/C++ oder Java\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452542&pOrgNr=1",
        "name": "Project Laboratory IC Design",
        "kennung": "EI5042",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module students know the HW system specification. They are able to implement an IC design with VHDL, applying a HW design flow from system specification to system test.",
        "inhalt": "A VLSI architecture is designed by a group of students:\nSystem design (architecture and partitioning), Hardware specification and verification (functionality and interfaces), simulation and synthesis, implementation in FPGA; Project management: Coordination, integration of submodules, verification in system enviroment",
        "voraussetzungen": "Prerequisite is a completed VHDL course.\nPraktikum VHDL\nPraktikum Systemetnwurf mit VHDL\nEntwurf digitaler Systeme mit VHDL\nor equivaent VHDL cours in any approved BSc programm",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261729&pOrgNr=1",
        "name": "Projektorganisation und -management in der Softwaretechnik",
        "kennung": "IN2083",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ab SS18 6 ECTS und 5 SWS",
        "lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Modul verstehen die Studierenden die wesentlichen Konzepte des Softwareprojektmanagements. Sie sind in der Lage typische Anforderungen wie z.B. Erstellung eines Software Projekt Management Plans, Initiierung und Durchführung eines Softwareprojektes und die Anpassung eines Softwarelebenszyklus Modells durchzuführen. Ausserdem sind ihnen die wichtigsten Probleme des Risikomanagements, Zeitplanung, Qualitätsmanaggment, sowie Erstellungs- und Lieferungsmanagement bekannt, und sie sind in der Lage, diese auf kleinere Probleme anzuwenden.",
        "inhalt": "In dem Modul IN2083 werden beispielhaft folgende Inhalte behandelt:\n- Projektorganisation\n++ Lebenszyklusmodell eines Projektes\n++ Organisationen (Linien-, Matrix- und Projekt-basiert)\n++ Rollen unnd Verantwortlichkeiten, Management Antimuster\n++ Global Software Projekte\n++ Reifegrade von Organisantionen (CMM, CMMI)\n- Projektplanung\n++ Software Lebenszyklusmodelle\n++ Lineare Modelle (Wassrfall, V-Modell)\n++ Iterative Modelle (Spiral-Modell, Unified Process, V-Modell XT)\n++ Agile Modelle (Scrum, Kanban)\n++ Schätzung\n++ Projektzeitplanung\n- Verträge\n++ Typen von Verträgen\n++ Lebenszyklusmodell für Verträge\n++ Rechtsfragen\n- Veränderungsmanagement\n++ Konfigurationsmanagement\n++ Kontinuierliche Integration\n++ Kontinuierliche Lieferung\n- Qualitätsmanagement\n++ Nutzer Management\n++ Tests, V&V\n++ Riskomanagement\n++ IEEE Standards",
        "voraussetzungen": "IN0006 Einführung in die Softwaretechnik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1624441&pOrgNr=1",
        "name": "Projektpraktikum Audio-Signalverarbeitung",
        "kennung": "EI78033",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls ist die/der Studierende in der Lage, die wesentlichen Eigenschaften und Herausforderungen des Audio-Signalverarbeitung zu beschreiben. Darüber hinaus ist der Studierende in der Lage, Lösungen zu ausgewählten Anwendungen aus der Audio-Signalverarbeitung zu entwerfen, zu analysieren, praktisch umzusetzen und zu bewerten.",
        "inhalt": "Die Professur für Audio-Signalverarbeitung beschäftigt sich mit verschiedenen Themen, aus denen mit Bezug zur aktuellen Forschung Praktikumsaufgaben gestellt werden, zu denen nach einer Literaturrecherche Lösungen gefunden werden sollen:\n- Virtuelle Akustik und virtuelle Realität\n- Raumakustiksimulation\n- Hörgerätealgorithmen\n- Cochlea Implantate (Neuroprothesen) und deren Algorithmen\n- Modellierung auditorischer Prozesse, auch neuronal\n- (Binaurale) Psychoakustik und Hörversuche\n- Anwendungen in der Sound Quality und akustischen zerstörungsfreien Prüfung",
        "voraussetzungen": "Grundlagen der Systemtheorie und Audio-Signalverarbeitung\nGrundlagen der Akustik und Psychoakustik\nGrundlagen der Informatik, Matlab and C++",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=562675&pOrgNr=1",
        "name": "Projektpraktikum Automatisierung mechatronischer Systeme",
        "kennung": "EI7173",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolreichen Abschluss des Moduls sind die Studierenden in der Lage mit konkreten regelungstechnischen Problemen im Anwendungskompetenzbereich von automatisierten mechatronischen Systemen eigenständig umzugehen.",
        "inhalt": "Die Projektaufgaben umfassen Hard- und Softwarethemen aus dem Bereich der Automatisierung mechatronischer Systeme, wie sie z.B. im Bereich der Robotik, im Automobil oder in der industriellen Produktion zum Einsatz kommen. Wichtige Fragestellungen beschäftigen sich dabei u.a. mit der Fusion von Sensordaten, der Implementierung geeigneter Regelungsalgorithmen und der Evaluierung des resultierenden Gesamtsystems.",
        "voraussetzungen": "Grundlagen der Regelungs- und Steuerungstechnik oder\nRegelungssysteme 1",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=553126&pOrgNr=1",
        "name": "Projektpraktikum Bioanaloge Informationsverarbeitung",
        "kennung": "EI7191",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After the practical course students are able to\n- analyze\n- evaluate\n- implement (create)\nnovel systems in the field of bio-inspired information processing",
        "inhalt": "Entwicklung von z.B.:\n- Modellen der Sinnesorgane und der neuronalen Informationsverarbeitung sensorischer Information\n- Modellen Kodierungsstrategien von Neuroprothesen\n- mikromechanischen Sensoren, Aktuatoren und Elektroden\n- elektrischen und optischen Stimulationssystemen für Neurone",
        "voraussetzungen": "Grundlagen der Informatik\nGrundlagen der Systemtheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3393057&pOrgNr=1",
        "name": "Projektpraktikum Biosignalverarbeitung und Modellierung",
        "kennung": "CIT4310004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem Kurs ist der Student dazu in der Lage:\n- selbstständing ein Experiment zur Datenaufnahme mit elektrophysiologischen Sensoren durchzuführen.\n- selbstständig die Datenqualität zu beurteilen und Signalverarbeitungsmethoden zur Extraktion robuster Information aus den aufgenommenen Daten anzuwenden.\n- selbständig prädiktive Datenmodelle und Klassifikatoren auf Basis von Methoden aus der Mustererkennung und Maschinellem Lernen zu erstellen und zu evaluieren.\n- selbstständig ein praktisches Projekt zu bearbeiten, sowie die Ergebnisse in einem ausführlichen, schriftlichen Report zusammen zu fassen.\n- das Projekt vor einem Expertenkomitee vorzutragen und zu verteidigen.",
        "inhalt": "Das Projektpraktikum Biosignalverarbeitung und Modellierung umfasst theoretische Vorlesungen und praktische Übungen zu elektrophysiologischen Sensorsystemen, sowie Methoden zum Experiment Design, zur offline und online Signalverarbeitung und Mustererkennung / Maschinellem Lernen. Die Studierenden lernen lektrophysiologische Signale (z.B. Elektroenzephalographie, Elektromyographie) aufzunehmen, zu verarbeiten und für Gehirn-Computer Schnittstellen (BCI) Anwendungen zu klassifizieren. Im ersten Teil des Kurses wird ein Tutorial zur Vertiefung der Kursinhalte abgehalten. Der zweite Teil des Kurses ist hauptsächlich einem praktischen Projekt gewidmet welches Studenten ermöglicht, praktisch mit einem BCI Paradigma zu arbeiten (Gruppenprojekt von bis zu 4 Studierenden).",
        "voraussetzungen": "Programmierkenntisse in Python und MATLAB sind vorausgesetzt\nBasiswissen im Bereich statistische Signalverarbeitung und Machinellem Lernen ist empfehlenswert",
        "modulniveau": "",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3033293&pOrgNr=1",
        "name": "Projektpraktikum Human Activity Understanding",
        "kennung": "EI78075",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss dieses Moduls sind die Studierenden in der Lage, die Herausforderungen im Bereich des Human Activity Understanding zu verstehen und Prozesse für die automatische sensorgestützte Erkennung laufender menschlicher Aktivitäten zu entwickeln.\n\nDie Studierenden sammeln praktische Erfahrungen in der Erfassung und Nutzung synthetischer Daten sowie sequenzieller Multikameradaten in egozentrischen und stationären Sensorenaufbau, in der Annotation und Extraktion relevanter semantischer Informationen und im Erlernen der räumlichen und zeitlichen Repräsentation der Daten.\n\nDie Studierenden können lernen, wie man KI-Modelle und Algorithmen einsetzt, um Informationen aus einer Szene zu extrahieren und menschliche Aktivitäten auf der Grundlage der extrahierten Informationen zu erkennen und vorherzusagen.\n\nSie sind schließlich in der Lage, die Ergebnisse der verschiedenen beteiligten Algorithmen sowie die von ihnen entworfenen Lösungen zu analysieren und zu bewerten.",
        "inhalt": "Erfassung und Annotation von Sensordaten\n- Erfassung und Verarbeitung von Multisensor- und Multiview-Kameradaten, einschließlich Farbe/Tiefe/IMU\n- Erzeugung synthetischer Daten für menschliche Aktivitäten\n- Beschleunigte Annotation der Ground Truth durch interaktive Segmentierung und Tracking\n\nBausteine der semantischen Inferenz\n- Objekterkennung\n- Schätzung der Körperhaltung von Menschen\n\nGraphische Darstellung von räumlichen und zeitlichen Daten\n- 3D-Szenengraphen\n- semantische Graphen\n- Räumlich-zeitliche Graphen\n- Wissensdatenbanken (Ontologien)\n\nSequentielle Deep-Learning-Modelle für die Erkennung und Antizipation menschlicher Aktivitäten\n- Recurrent Neural Networks\n- Graph Networks\n- Transformers",
        "voraussetzungen": "- Wissenschaftliches Arbeiten (Recherche, Analyse, Dokumentation und Präsentationstechnik)\n- Grundlagen der Informatik, Python und C++\n- Kenntnisse im Umgang mit Linux-Systemen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1810708&pOrgNr=1",
        "name": "Projektpraktikum Human-Centered Neuroengineering: Cybathlon",
        "kennung": "EI78054",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Kurses sollten die Studenten in der Lage sein:\n- neuronale Signale (EEG, EMG) aufzunehmen und zu verarbeiten\n- Algorithmen des maschinellen Lernens auf neuronale Daten anwenden und weiterentwickeln\n- Sensorische Rückkopplung zu integrieren\n- Assistenzsysteme entwickeln, mit denen die Piloten im Zusammenhang mit dem Cybathlon-Wettbewerb activities of daily living (ADLs) durchführen können\nNicht-technische Fähigkeiten werden ebenso erlernt: Die Studierenden sind in der Lage:\n- ein großes technisches Projekt zu organisieren und zu leiten.\n- in kleinen Gruppen zu arbeiten und die Fortschritte, die in der Gruppe erreicht werden, zu kommunizieren.\n- behinderte Menschen partizipatorisch in ihre Forschungs- und Entwicklungsarbeit einzubinden\n- Methoden des menschzentrierten Designprozesses anzuwenden und Neurotechnologien nach ethischen Gesichtspunkten zu reflektieren",
        "inhalt": "Die Studierenden bilden Teams, um an wissenschaftlich-technisch-sozialen Problemstellungen im Zusammenhang mit der Arm-Prothetik Disziplin oder der Brain-Computer Interface Disziplin des Cybathlon Wettbewerbs zu arbeiten. In Zusammenarbeit mit dem \"Piloten\" (den Menschen mit Behinderung, welche die Technologien im Cybathlon Wettkampf nutzen werden) sollen gemäß des menschzentrierten Design-Prozesses sozio-technische Problemstellungen gefunden und iterativ bearbeitet werden. Im technischen Zentrum stehen dabei die Aufnahme, Verarbeitung und Klassifikation neuronaler Signale, die Fusion mit Kontextinformation und die sensorische Rückkopplung. Im menschzentrierten Zentrum steht die partizipatorische Einbindung der Piloten und eine wertesensible Herangehensweise.\nDas endgültige Ziel ist, am Cybathlon Wettbewerb teilzunehmen und gleichzeitig an für die späteren Nutzer der Neurotechnologien wichtigen Forschungsfragen zu arbeiten. Cybathlon ist ein Wettbewerb, in welchem Menschen mit physischer Behinderung gegeneinander antreten und in möglichst kurzer Zeit verschiedene Aufgaben des alltäglichen Lebens mithilfe von technischen Assistenzsystemen durchführen.\nDer Kurs ist in 4 verschieden Phasen aufgeteilt:\n- Kick-off Phase: Die Studierenden erhalten in Einführungsvorlesungen einen Überblick zu den Themen Neuroprothesen, Gehirn-Computer Schnittstellen, Human-Centered Engineering, Responsible Neuroengineering und Disability Studies. Währenddessen lernen sie verschiedene technische Methoden kennen (Signalverarbeitung und maschinelles Lernen für EMG- und EEG-Signale).\n- Projektfindungsphase: Auf Basis der theoretischen Vorträge, der wissenschaftlichen Literatur und unter Einbeziehung der Perspektive von behinderten Menschen/ PatientInnen erstellen die Studierenden Projektpläne und stellen diese in einer Projekt-Kick-off Präsentation vor.\n- Iterative Entwicklungsphase: Die Studierenden entwickeln und implementieren die Algorithmen und Hardwaresysteme. Diese Entwicklung verläuft Hand in Hand mit der Test- und Validationsphase - durch objektive Metriken und durch Einbeziehung der Perspektive von Betroffenen. In dieser Phase haben die Studierenden regelmäßige Kolloquia mit den Dozenten, um ihren Fortschritt vorzustellen und ihre Probleme und nächsten Schritte zu besprechen.\n- Reflexionsphase: Die Studierenden präsentieren ihre Ergebnisse und schreiben einen Bericht über ihre technischen und wissenschaftlichen Projektergebnisse. Darin reflektieren sie auch die sozialen und ethischen Aspekte ihres Projektes, sowie welche Probleme in der Zusammenarbeit mit dem Piloten aufkamen, welche Lösungen sie dafür gefunden haben und was sie daraus gelernt haben.\n\nQualifikation für Cybertum Wettbewerbe:\nDieses praktische Projekt wendet sich an die Studierenden, die sich gerne über mehrere Monate hinweg mit den Aufgaben des Cybathlon Wettbewerbs und mit Human-Centered Engineering beschäftigen wollen.",
        "voraussetzungen": "Die Studenten sollten Programmierkenntnisse haben. Vorwissen in Maschinellem Lernen und in Signalverarbeitung sind hilfreich.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1810707&pOrgNr=1",
        "name": "Projektpraktikum Human-Centered Neuroengineering: Neurorehabilitation",
        "kennung": "EI78046",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "\"Am Ende des Kurses sind die Studenten in der Lage:\n- robotische Neurorehabilitationsmethoden mit Exoskeletten und Virtual Reality zu verstehen und zu entwickeln\n- neuronale Signale (EEG, EMG) aufzunehmen und zu verarbeiten\n- Algorithmen des maschinellen Lernens auf neuronale Daten anwenden und weiterentwickeln\n- Sensorische Rückkopplung zu integrieren\n\nNicht-technische Fähigkeiten werden ebenso erlernt: Die Studierenden sind in der Lage:\n- ein technisches Projekt zu organisieren und zu leiten.\n- in kleinen Gruppen zu arbeiten und die Fortschritte, die in der Gruppe erreicht werden, zu kommunizieren.\n- Menschen partizipatorisch in ihre Forschungs- und Entwicklungsarbeit einzubinden\n- Methoden des menschzentrierten Designprozesses anzuwenden und Neurotechnologien nach sozialen und ethischen Gesichtspunkten zu reflektieren\n\"",
        "inhalt": "\"Die Studierenden bilden Teams, um an wissenschaftlich-technisch-sozialen Problemstellungen im Zusammenhang mit Neurorehabilitation zu arbeiten. Von technischer Seite liegt ein besonderer Schwerpunkt darauf, wie Exoskelette, Brain-Machine Interfaces (mit EEG und EMG), sowie Virtual Reality die Neurorehabilitation von Patienten mit Schlaganfall unterstützen können.In sozialer Hinsicht soll ein Fokus darauf gelegt werden, in welchen strukturellen Umgebungen (von Reha-Kliniken bis Home-based Rehabilitation) und mit Unterstützung welcher Stakeholder Neurorehabilitation durchgeführt wird und werden kann. Von Interesse ist aber auch die individuelle Interaktion mit der Rehabilitationstechnik. Diese sollte möglichst menschzentriert entwickelt werden und den Bedürfnissen und Interessen der Betroffenen entsprechen, z.B. durch personalisierte Rehabilitationsprogramme und Gamifikation. Im Sinne des Human-Centered Engineerings sollen die Studierenden die Perspektive von Betroffenen nach Möglichkeit partizipativ und wertesensibel einbinden.\n\nDer Kurs ist in 4 verschieden Phasen aufgeteilt:\n- Kick-off Phase: Die Studierenden erhalten in Einführungsvorlesungen einen Überblick zu den Themen Neurorehabilitation, Exoskelette, Human-Centered Engineering, Responsible Neuroengineering und Virtual Reality in der Robotik & im Neuroengineering. Währenddessen lernen sie verschiedene technische Methoden (EMG, EEG, exoskelette, VR) kennen.\n- Projektfindungsphase: Auf Basis der theoretischen Vorträge, der wissenschaftlichen Literatur und unter Einbeziehung der Perspektive von SchlaganfallpatientInnen erstellen die Studierenden Projektpläne und stellen diese in einer Projekt-Kick-off Präsentation vor.\n- Iterative Entwicklungsphase: Die Studierenden entwickeln und implementieren die Algorithmen und Hardwaresysteme. Diese Entwicklung verläuft Hand in Hand mit der Test- und Validationsphase - durch objektive Metriken und durch Einbeziehung der Perspektive von Betroffenen.\n- Reflexionsphase: Die Studierenden präsentieren ihre Ergebnisse und schreiben einen Bericht über ihre technischen und wissenschaftlichen Projektergebnisse. Darin reflexieren sie auch die sozialen und ethischen Aspekte ihres Projektes. \"",
        "voraussetzungen": "\"\nDie Studenten sollten Programmierkenntnisse haben. Vorwissen in Maschinellem Lernen und in Signalverarbeitung sind hilfreich. \"",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=562669&pOrgNr=1",
        "name": "Projektpraktikum Kognitive Robotik und Regelung",
        "kennung": "EI7172",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage ein konkretes regelungstechnisches Problem im Anwendungskompetenzbereich von autonomen und kognitiven technischen Systemen eigenständig zu lösen. Das umfasst die Analyse des Problems und die Entwicklung von passenden Lösungsstrategien. Insbesondere sind die Studierenden in der Lage effizient und problemorientiert im Team zu arbeiten. Methodisch können die Studierenden in einer schriftliche Dokumentation ihre Ergebnisse und den Stand der Technik strukturiert darstellen. Im Abschlussvortrag zeigen die Studierenden, dass sie ihre Ergebnisse vor Publikum in verständlicher Form darstellen können.",
        "inhalt": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der autonomen Robotik. Dabei ist der Fokus nicht nur auf klassischen Fragestellungen der Robotik sondern zusätzlich auf der Wahrnehmung und Verarbeitung von Umgebungsinformationen durch technische Systeme wie sie besonders für die Mensch-Roboter Interaktion von Relevanz ist.",
        "voraussetzungen": "Grundlagen der Regelungs- und Steuerungstechnik und Robotik\nProgrammieren in C/C++ oder Java\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nEinführung in die Roboterregelung",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=553129&pOrgNr=1",
        "name": "Projektpraktikum Kognitive Systeme",
        "kennung": "EI7208",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss des Moduls ist der Student dazu in der Lage:\n- selbstständig ein praktisches Projekt im Gebiet der humanoiden oder allgemeinen Robotik durchzuführen. Dies bezieht sich auf alle Phasen, von der initialen Planung, über die Realisierung und Evaluierung des Projektziels.\n- selbstständig einen ausführlichen, schriftlichen Report über das Projekt anzufertigen.\n- das Projekt vor einem Expertenkomitee vorzutragen und zu verteidigen.\n- technisches Detailwissen und -fertigkeiten, die während der Durchführung des Projektes erlangt werden, hängen stark von dem gewählten Forschungsgebiet ab.",
        "inhalt": "Das Hauptseminar umfasst ein praktisches Laborprojekt in Teilgebieten der humanoiden und allgemeinen Robotik sowie eine Abschlusspräsentation. Das Institut für Kognitive Systeme (ICS) kann in drei Hauptgebiete unterteilt werden welche weitere Untergebiete enthalten. Das Thema des praktischen Laborprojekts kann in Absprache mit dem thematisch verantwortlichen wissenschaftlichen Mitarbeiter definiert werden (siehe: http://www.ics.ei.tum.de).\n\nSensoren und Aktoren, Steuerung und Regelung\n- Künstliche Haut für Robotersysteme\n- Humanoide dynamische Lokomotion\n- Restringierte Manipulation für sichere Aktuation\n- Navigation, Steuerung und Regelung von mobilen Robotern\n- Hochleistungs Aktoren\n\nBiologisch-inspirierte verkörperte Kognition\n- Biologisch-inspiriertes Sehen\n- Neurologisch-inspiriertes Lernen von zweibeinigem Gehen\n- Kognitive Architektur\n- Semantische Schlussfolgerung für die Erkennung menschlichen Handelns\n\nMensch-Maschine Schnittstelle\n- Humanoide kognitive Kommunikation\n- Roboter, Gesellschaft und Interaktion\n- Gehirn-Computer Schnittstelle (BCI)\n- Mensch-Roboter Interaktion",
        "voraussetzungen": "Englisch Kenntnisse und vertieftes Fachwissen (abhängig vom jeweiligen Thema / Themengebiet). Programmiererfahrung ist grundsätzlich vorausgesetzt.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=557786&pOrgNr=1",
        "name": "Projektpraktikum Kognitive Technische Systeme",
        "kennung": "EI7171",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage mit konkreten regelungstechnischen Problemen im Anwendungskompetenzbereich von autonomen und kognitiven technischen Systemen eigenständig umzugehen. Desweiteren werden Kompetenzen im effizienten und problemorientierten Arbeiten im Team vermittelt.",
        "inhalt": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der autonomen Robotik. Dabei ist der Fokus nicht nur auf klassischen Fragestellungen der Robotik sondern zusätzlich auf der Wahrnehmung und Verarbeitung von Umgebungsinformationen durch technische Systeme wie sie besonders für die Mensch-Roboter Interaktion von Relevanz ist.",
        "voraussetzungen": "Grundlagen der Regelungs- und Steuerungstechnik und Robotik\nProgrammieren in C/C++ oder Java\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nGrundlagen intelligenter Roboter",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=551055&pOrgNr=1",
        "name": "Projektpraktikum Python",
        "kennung": "EI0508",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind in der Lage mit Python als Programmierwerkzeug praktisch umzugehen, sowie die Einbindung von Object-Code bestehender Software-Systeme zu integrieren\n\nDie Studierenden sind in der Lage Python als objektorientiertes Programmierwerkzeug für die Problemlösung praktisch anzuwenden\nund die Einbindung aus Object-Code bestehender Software-Systeme zu analysieren.",
        "inhalt": "Das Projektpraktikum Python bietet eine umfassende Einführung in die Programmierung mit Python und führt die Teilnehmer bis zur Durchführung eines eigenständigen Programmierprojekts. Neben grundlegenden Datentypen und -strukturen wirf die Python-Programmiersprache behandelt. Die Grundlagen werden seminaristisch diskutiert und anhand von Übungsaufgaben in Form von Programmieraufgaben vertieft. Die erworbenen Kenntnisse werden in Form einer eigenständig zu lösenden Programmieraufgabe angewendet.",
        "voraussetzungen": "Programmierkenntnisse in C, Grundlegende Begriffe der objektorientierten Programmierung, Algorithmen und Datenstrukturen\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Computertechnik, Algorithmen und Datenstrukturen, Programmierpraktikum C, Grundkurs C++",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1285655&pOrgNr=1",
        "name": "Projektpraktikum RoboCup@Home",
        "kennung": "EI78008",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme sind Studierende dieses Kurses in der Lage:\n\n• Verschiedene Algorithmen zur Erkennung, zum Lernen und zur Regelung im Bereich der Servicerobotik zu implementieren.\n• Diese Algorithmen in Simulationen und in der Anwendung mit echten mobilen Robotern zu testen und zu bewerten.\n• Nach der Analyse entsprechende Techniken bei herausfordernden Problemstellungen in alltäglichen, realistischen Szenarien anzuwenden, wie z.B. in Wohnungen oder im Supermarkt\n\nNeben der Aneignung von Fachkenntnissen lernen Studierende dieses Kurses auch wie man Projekte organisiert und managt. Des Weiteren können Studierende während der Gruppenarbeit ihre Soft-Skills und Kommunikationsfähigkeit trainieren.",
        "inhalt": "Wir möchten ein Studententeam für den größten Wettbewerb in der Servicerobotik, den RoboCup@Home, gründen. Dieser Wettbewerb konzentriert sich auf anspruchsvolle wissenschaftliche Problemstellung wie zum Beispiel das Entwickeln, Implementieren und Testen von Algorithmen in den Bereichen des Erkennens, des Lernens und der Roboterregelung. Das generelle Ziel dieses Kurses ist es, Studierenden die nötigen praktischen Grundlagen an die Hand zu geben, damit sie erfolgreich am jährlichen internationalen Wettbewerb der RoboCup@Home Liga teilnehmen können.\n\nServiceroboter müssen folgende Fähigkeiten aufweisen: Navigation, Kartierung der Umgebung, Erkennung von Menschen und Objekten, Erkennung und Verstehen von Situationen usw.. Daher ist der Kurs ist folgendermaßen unterteilt:\n- Kick-off meeting: Die Studierenden treffen sich mit einem Betreuer und bilden Kleingruppen unter Berücksichtigung ihrer Vorkenntnisse. Jede Gruppe ernennt einen Gruppenleiter (vorzugsweise ein Master-Student) der fortwährend in Kontakt mit den Kursbetreuern steht.\n- Hands-on tutorials: Die Studierenden bekommen Einführungskurse, die sie mit den im Kurs verwendeten Methoden, Softwarebausteine und Material vertraut machen. Diese Einführungskurse stellen sicher, dass alle Studierenden auf dem gleichen Basiswissenstand sind und mit der Anwendung der Methoden vertraut sind.\n- Entwicklungs- und Testphasen: Die Studierenden entwickeln und implementieren Algorithmen,um die vorgegebene Problemstellungen zu lösen. Jede Entwicklungsphasewird von Test- und Validierungs-Zyklen begleitet.\n- Abschlussprojekt: Es wird ein Szenario aus einen früheren Wettbewerb ausgewählt und mit einen mobilen Roboter realisiert. Abschließend werden die Fähigkeiten des Robotersystems evaluiert und verglichen.\n\nDieser Kurs richtet sich vor allem an Studierende, die motiviert sind, über die Dauer des Jahres Algorithmen für die Testszenarien des RoboCup@Home Wettbewerbs zu entwickeln.\nDer Kurs soll auf längere Sicht zum Aufbau eines RoboCup@Home Studententeams beitragen, das künftig an offiziellen Wettbewerben teilnimmt.",
        "voraussetzungen": "Studierende im Bachelor-Studium müssen die ersten zwei Semester erfolgreich abgeschlossen haben. Es empfiehlt sich theoretisches Basiswissen in der Regelung, in der Bildverarbeitung oder im Maschinellen Lernen.\n\nFolgende Kenntnisse werden vorausgesetzt::\n- C++ Programmier-Kenntnisse sind zwingend erforderlich\n- ROS Kenntnisse sind sehr hilfreich und empfehlenswert\n- Basiskenntnisse in AI (PROLOG) und in Robotik werden sehr empfohlen",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1369741&pOrgNr=1",
        "name": "Projektpraktikum Taktiles Internet",
        "kennung": "EI78018",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage, die wesentlichen Eigenschaften und Herausforderungen des taktilen Internets zu beschreiben. Darüber hinaus ist der Studierende in der Lage ausgeählte Aspekte des taktilen Internets zu entwerfen, zu analysieren und zu bewerten.",
        "inhalt": "Die Teilnehmer entwicklen, implementieren und untersuchen ausgewählte Aspekte aus dem Bereich Taktiles Internet.\nDas Taktile Internet ist ein hochaktuelles Forschungsthema, das insbesondere im Rahmen der Standardisierung der 5ten Generation Mobilfunk (5G) großes Interesse erfährt. Das Taktile Internet ermöglicht die Regelung von Prozessen über ein Kommunikationsnetz oder ein Netz von Kommunikationsnetzen (ein Internet) hinweg. Sensoren, Aktoren und Regler können im Taktilen Internet voneinander getrennt auf unterschiedlichen (geographisch verteilten) Netzknoten realisiert werden. Der Austausch der Information zwischen den Einheiten erfolgt über das Taktile Internet mit sehr geringen Latenzen, im Idealfall mit weniger als 1 ms. Anwendungsgebiete finden sich im Bereich intelligenter Transportsysteme, autonomes Fahren, Teleoperation (z.B.Telechirurgie), Industrie 4.0, der Regelung von Smart Grids, und vielem mehr.",
        "voraussetzungen": "- Programmiererfahrung in C++, Java, Python oder ähnlich\n- Matlab\n- Grundkenntnisse Kommunikationsnetze\n- Grundkenntnisse Audiosignalverarbeitung\n- Grundkenntnisse Videosignalverarbeitung\n- Grundkenntnisse Computer und Networking Werkzeuge: ssh, iperf, etc.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=553245&pOrgNr=1",
        "name": "Projektpraktikum Vernetzte und kooperative Systeme",
        "kennung": "EI7215",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage ein konkretes regelungstechnisches Problem im Anwendungskompetenzbereich von vernetzten, verteilten und kooperativ geregelten technischen Systemen eigenständig zu lösen. Das umfasst die Analyse des Problems und die Entwicklung von passenden Lösungsstrategien. Insbesondere sind die Studierenden in der Lage effizient und problemorientiert im Team zu arbeiten. Methodisch können die Studierenden in einer schriftliche Dokumentation ihre Ergebnisse und den Stand der Technik strukturiert darstellen. Im Abschlussvortrag zeigen die Studierenden, dass sie ihre Ergebnisse vor Publikum in verständlicher Form darstellen können.",
        "inhalt": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der vernetzten und kooperativen Systeme. Dabei reicht der Fokus von Fragestellungen der vernetzten kooperierenden Multi-Roboter-Systeme, über die Telepräsenzsysteme hin zu kooperierenden Mensch-Roboter-Teams.",
        "voraussetzungen": "Grundlagen der Regelungs- und Steuerungstechnik\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1021373&pOrgNr=1",
        "name": "Projektpraktikum Verstärkerschaltungen zur Messung bio-elektrischer Signale",
        "kennung": "EI7429",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme am Projektpraktikum sind die Studierenden in der Lage\n- Verstärker für bio-elektrische Signale mit AD_Wandler zu entwickeln, charakterisieren und zu bewerten\n- Verstärkerschaltungen mit A-D Wandler und Computerinterface für die geforderte Messaufgabe zu entwickeln und aufzubauen.",
        "inhalt": "In diesem Projektpraktikum werden Verstärkerschaltungen mit folgender Analog-Digitalwandlung und Computerinterface für Messungen bio-elektrischer Signale entworfen, aufgebaut und charakterisiert. Für die Arbeiten stehen am IMETUM gut ausgestattete Labors zur Verfügung (Messtechnik, halbautomatische Bestückung von SMD Bauteilen). Der Kurs beinhaltet auch die Vermittlung von Sicherheitsaspekten, die bei elektrischen Messungen an menschlichen Probanden einzuhalten sind.",
        "voraussetzungen": "Grundlagen Schaltungstechnik",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3770184&pOrgNr=1",
        "name": "Projektwoche Medizintechnik Prototyp",
        "kennung": "CIT433019",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Projektziele:\nDie Studierenden können die Stärken und Probleme eines heterogenen und interdisziplinären Teams bewerten. Sie sind sich über ihre eigenen Stärken bei der Technologieentwicklung bewusst und berücksichtigen ethische Aspekte bei der Produktentwicklung (Patientensicherheit, Datenschutz).\nZudem können sie ihr Grundwissen in pragmatische Lösungen umsetzen und sind in der Lage, auch die wirtschaftlichen Grundlagen einer Geschäftsidee zu bewerten und eigene Start-Up Ideen zu entwickeln.",
        "inhalt": "Unser Projekt „Medizintechnik“ zeigt Studierenden am Beispiel der Entwicklung eines Gerätes zum Hörscreening wie Probleme aus der medizinischen Diagnostik mit technologischen Ansätzen gelöst werden können. Das Projekt ist interdisziplinär zwischen der Medizin, den Ingenieurswissenschaften und einem Wirtschaftsunternehmen (KMU) angesiedelt, die Studierenden lernen dabei die Denkweisen und Anforderungen aus diesen Bereichen kennen, inklusive wichtiger Aspekte bei der Zulassung von Medizinprodukten und der wirtschaftlichen Verwertung. Der Projektablauf beinhaltet eine Einführung in die benötigten Grundlagen, eine Exkursion zum Medizintechnik Unternehmen PATH MEDICAL (Germering bei München). Die folgenden zwei Tagen bestehen aus praktischen Inhalten zum mechanischen und elektrischen Design, Rapid Prototyping (3d-Druck), und der Softwareentwicklung. Hier sollen sich die Studierenden auf einen Teil konzentrieren, in dem sie ihre Vorkenntnisse optimal einbringen können. Am letzten Tag werden die Teilnehmer mit dem entstandenen System Messungen an ihrem Gehör durchführen und sollen Projektideen und Geschäftsmodelle für Start-Ups entwickeln.",
        "voraussetzungen": "Studierende der Module:\n• Entwurf von sicheren medizinischen Geräten und Baugruppen (Dr. Gleich)\n• Neuroprosthetics (Prof. Hemmert)\n• Zulassungsverfahren und Qualitätsmanagement in der Medizintechnik (Dr. Oswald)",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3399657&pOrgNr=1",
        "name": "Projektwoche Natural Language Processing (NLP)",
        "kennung": "CIT1330001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Kurses werden die Studierenden ein grundsätzliches Verständnis von verschiedenen Ansätzen im Bereich Natural Language Processing haben. Sie werden praktische Kenntnisse zur Implementierung von NLP-Algorithmen erworben haben, von syntaktischen und semantischen Analysen über neueste Transformer-basierte generative Sprachmodelle hin zur automatischen Generierung von Bildern aus kurzen Text-Prompts über Text2Image Modelle. Sie werden Vor- und Nachteile der Modelle kennenlernen, die aktuellen Diskussionen nachvollziehen können und selbständig in der Lage sein, sich in neueste Entwicklungen schnell einzuarbeiten.",
        "inhalt": "Natural Language Processing (NLP) ist ein interdisziplinäres Fachgebiet an der Schnittstelle zwischen der Informatik und der Linguistik sowie mittlerweile ein Teilbereich der Künstlichen Intelligenz. Es befasst sich mit Algorithmen, welche die natürliche Sprache des Menschen (geschrieben oder gesprochen) interpretieren, um darüber einen Computer zu befähigen aus dem Inhalt Erkenntnisse zu ziehen. So kann man beispielsweise Texte gewissen Themen zuordnen, ähnliche Texte finden, Texte als positiv oder negativ behaftet einstufen. Neueste Sprachmodelle, die auf künstlicher Intelligenz beruhen, können in Texten Antworten auf Fragen finden, Texte automatisiert zusammenfassen, sie vervollständigen und selbst vollkommen neue Texte generieren.\n\nZiel des Projektpraktikums Natural Language Processing ist die Vermittlung von grundlegendem Wissen zu Natural Language Processing und aktuell in der Praxis eingesetzten Algorithmen, sowie die Vermittlung von praktischen Kenntnissen zur Interpretation von Texten und Verwendung in Anwendungsbeispielen. Die Studierenden erlernen dazu die erforderlichen Programmierkenntnisse in der Programmiersprachen Python.\n\nFolgende Teilbereiche werden vermittelt:\n- Syntaktische und statistische NLP Methoden\n- Transformerbasierte Modelle, generative Sprachmodelle\n- Text2Image Modelle\nWir diskutieren verschiedene Methoden und aktuelle Entwicklungen diskutieren und wenden diese praktisch an, um\n- Möglichkeiten und konkrete Anwendungen für Natural Language Processing zu erkennen und zu verstehen\n- Systematisch Lösungsansätze zu Aufgabenstellungen im Bereich des Verstehens und Generierens von Texten zu finden\n- Aktuelle Herausforderungen und Diskussionen im Bereich NLP und speziell transformer-basierter generativer Sprachmodelle zu kennen und nachvollziehen zu können, Überlegungen zu aktuellen Herausforderungen anzustellen\n- In team-orientierter Arbeitsweise verschiedene Teilaufgaben einer Problemstellung zu einem kohärenten Gesamtergebnis zusammenzusetzen",
        "voraussetzungen": "Die Vorlesung basiert auf folgenden Vorkenntnissen, die in den Lehrveranstaltungen erworben wurden:\n- Grundlegende Programmierkenntnisse in Python\n- Bereitschaft zur aktiven Teilnahme an Diskussionen und Gruppenarbeiten\n- Keine anderen überlappenden Kurse",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1826031&pOrgNr=1",
        "name": "Protocol Design",
        "kennung": "IN2333",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of this module, students will remember the basic functional blocks for different protocols and alternative ways to realize those. They understand the origin and evolution of the Internet architectural principles and the technical issues relevant to Internet-scale protocol design and their evaluation. They recognize non-technical challenges arising protocol design when targeting broader adoption. They understand the implications of design choices, for implementation, maintenance, and validation. They understand the importance of interoperability and evolvability and ways to achieve those for protocol and system designs that may be around for a long time. They recognize the interaction of market players and impact of IPR on technology development and deployment. They are able to apply their knowledge to evaluate the pros and cons of protocol design alternatives as well as the methods of design, modeling, and evaluation to sample cases.",
        "inhalt": "All communication systems use protocols that define how to exchange information, from bit representations on the wire or in the air to addressing and routing in a global network to application layer conventions for representing complex data types. Protocols appear in many different domains and application areas, which define the goals and constraints; they may be proprietary or open, jointly developed by standards organizations or set by strong market players.\nIn this course, we will focus on protocol for the Internet, primarily looking at the network, transport, and application layer. We will review architectural and protocol design principles from theory as well as from practical experience over the past decades. We will study different functional building blocks and design patterns for protocols suitable to implement certain protocol features and assess their applicability and their limitations. We will look at how the various design principles fit with and how they impact recent and foreseeable future developments in communications and (inter)networking at large and how such principles may need to be restated or adapted for new environments. While a clear focus is on architectures and principles from the Internet and for internetworking, lessons from other networking technologies are also considered. We will use numerous case studies to exemplify the main points. We will discuss various implementation aspects for scalable and robust systems and also consider the non-functional aspects of protocol design, including issues concerning acceptance in the market or groups. In our exercises, we the students will explore selected topics with a focus on recent developments. In our assignments, we will develop a protocol specification to achieve certain functionality in several steps and implement this specification in small groups.\nThe following list offers a rough outline of the topics we expect to cover:\n- State sharing and reliability\n- Scalability concerning many dimensions\n- Resource consumption and fairness\n- Naming and Addressing\n- Protocol syntax and encoding\n- Multiplexing\n- Security: Robustness\n- Security: Protocol Design Techniques\n- Intermediaries: NATs/firewalls, proxies, gateways\n- Transport layer abstractions\n- Interoperability, Evolveability\n- Internet design principles (and their evolution)\n- Meta-aspects of design: financial, political, human\n- Implications of new communication paradigms\n- Think different: Protocol design for specific environments",
        "voraussetzungen": "Recommended requirements are basics in computer networks, security, and distributed systems (IN0010 or equivalent knowledge) as well as very good command of the C/C++ or Java programming language.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1808722&pOrgNr=1",
        "name": "Quantum Computers and Quantum Secure Communications",
        "kennung": "EI71073",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls: 1) Verstehen die Studierenden die grundlegenden Konzepte von Quantum Computing und Post-Quantum Kryptographie; 2) kennen sie sich mit Quanten- und Postquantenalgorithmen aus; 3) verstehen sie die Schwachstellen von Post-Quanten-Cryptographie-Implementierungen; 4) können sie die Sicherheit und Leistung von kryptografischen Post-Quantum-Implementierungen bewerten; und 5) können sie Sicherheitsgegenmaßnahmen auf postquantenkryptographische Implementierungen anwenden.",
        "inhalt": "Der Kurs besteht aus einem Vorlesungsteil und begleitenden Übungen sowie einem Projektanteil.\nDie Vorlesung gliedert sich in folgende Themenblöcke:\n1) Einführung;\n2) Quantum Computing und Methoden;\n3) Quantenalgorithmen;\n4) Allgemeine Beschreibung von Post-Quantum Algorithmen;\n5) Implementierung und Evaluierung von Post-Quantum-Algorithmen;\n6) Sichere Implementierung.",
        "voraussetzungen": "Gute Kenntnisse im Bereich Micro-Controller Programmierung und Basiskenntnisse im Bereich Security, wie sie beispielsweise in der Vorlesung Embedded Systems und Security vermittelt werden.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3287086&pOrgNr=1",
        "name": "Quantum Computing Software Lab",
        "kennung": "CIT4310000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the lab, students will have a detailed insight into different software frameworks and will be able to evaluate their respective advantages and disadvantages. Based on that, they will be able to efficiently conceptualize, implement, and evaluate own quantum computing solutions using the covered software frameworks.",
        "inhalt": "Quantum computers are becoming a reality. They offer new and powerful paradigms while also introducing new challenges, which, in turn, need different tools and methods to develop with the new paradigms. Accordingly, the design and realization of corresponding quantum computing solutions differs significantly from the conventional design and, hence, requires new software solutions and design methods. This practica provides an introduction into the quantum computing paradigms as provides hands-on experiences on corresponding software tools and design automation methods. Different frameworks focused on quantum computing are presented and used to realize selected quantum algorithms in practice.",
        "voraussetzungen": "Programming Skills",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1451393&pOrgNr=1",
        "name": "Quantum Information Theory",
        "kennung": "EI76471",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls haben die Studierenden ein Verständnis für mathematische und konzeptuelle Methoden zur Behandlung von Kommunikationszenarien für diskrete gedächtnislose Semiklassische und quantenmechanische Systeme.\nSie kennen die wichtigsten Kommunikationszenarien und die dazugehörigen Kodierungssätze sowie allgemeine und spezielle Strategien zu deren Beweis.",
        "inhalt": "Die Idee der Datenübertragung und -speicherung unter Verwendung der Eigenschaften physikalischer Systeme auf der atomaren Skala hat in den vergangenen Jahrzehnten ganze Gebiete experimenteller sowie theoretischer Forschung eröffnet.\nDas vorliegende Modul soll in die mathematische Modellierung von Quanten-Kommunikationssystemen mittels des aus der klassischen Informationstheorie bekannten Shannon'schen Zugang einführen.\n\nSowohl von der Themenauswahl als auch der methodischen Herangehensweise stellt das Modul eine konsequente Fortführung des Inhaltes entsprechender Module im Themenbereich klassische Informationstheorie dar. Explizit behandelt werden:\n- die mathematischen und konzeptuellen Grundlagen der Beschreibung von Quantensystemen mit endlichen Freiheitsgraden mit besonderem Fokus auf einen operationellen Zugang zur Quantentheorie\n- Quanten-Hypothesentests; Quanten-Stein's Lemma\n- Quellenkodierung für gedächtnislose Quanten-Quellen\n- Kodierungssätze für Übertragung klassischer Nachrichten über Semiklassische und Quantenmechanische gedächtnislose Kanäle\n- Fortgeschrittene Themen aus den Bereichen Informationstheoretische Sicherheit für Quantenmechanische Kanäle und Quellen, Verschränkungstheorie, Optimale Protokolle für die Generierung quantenmechanischer und klassischer Kommunikationsresourcen.",
        "voraussetzungen": "Interesse an mathematischer Modellierung,\nGrundkenntnisse in Linearer Algebra,\nGrundkenntnisse in klassischer Informationstheorie.\n\nEmpfohlen werden Kombinationen dieses Moduls mit der Absolvierung eines der folgenden Module:\n„EI7431 – Information Theory“,\n„EI7344 – Informationstheoretische Grundlagen der Informationsforensik und biometrische Sicherheit“,\n„EI7345 - Informationstheoretische Sicherheit“,\n„EI7353 - Multi-User Information Theory\"",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2796519&pOrgNr=1",
        "name": "Quantum Nanoelectronics",
        "kennung": "EI73751",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to analyse effects of quantum mechananics in quantum nanoelectronics. They understand the relevance of nanoelectronics in information theory and information technology.",
        "inhalt": "The influence of quantum mechanics on electronics, nanoelectronics and information theory, early quantum theory of radiation, Planck s radiation law, the photoelectric effect, spontaneous and induced emission, quantum properties of matter, the matter wave, the Schrödinger equation, the observability of physical quantities, expectation values of observables, eigenfunctions and eigenvalues of operators, stationary states, particle in square well potential, the one-dimensional harmonic oscillator, the hydrogen Atom, atoms, molecules, solids, nanostructures, the Hilbert space representation of states and observables, Dirac vectors, dynamics of quantum systems, the Schrödinger Representation, the Heisenberg representation, the Interaction representation, algebraic treatment of the harmonic oscillator, quantum information theory, the Einstein Podolsky Rosen experiment, entangled states, the quantization of the electromagnetic field, quantum theory of electric circuits, coherent states, interaction of radiation and matter, emission and absorption of radiation, the natural line width of an atom, quantum statistics, the density operator, the coherent state and the Poisson distribution, signal and noise, the characteristic function, photon field coupled to a reservoir of a two-level atom, laser theory, superconductivity, the Josephson effect, quantization of the JC circuit, quantum computing, basic operations in quantum computing, the no-cloning theorem, quantum teleportation",
        "voraussetzungen": "No prerequisites",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1711618&pOrgNr=1",
        "name": "Regelung moderner Leichtbauroboter",
        "kennung": "IN2373",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage:\no ... die grundlegenden Regelungsmethoden für moderne Leichtbauroboter zu bewerten und deren Unterschiede sowie Vor- und Nachteile für den praktischen Einsatz beurteilen zu können.\no ... Methoden zur Passivitäts- und Stabilitätsanalyse von Regelungsansätzen in der Robotik zu verstehen und auf bestimmte Leichtbaurobotertypen anwenden zu können.\no ... Stabilitätseigenschaften von Roboterreglern zu klassifizieren und deren Konsequenzen für den praktischen Einsatz beurteilen zu können.\no ... die gängigsten Methoden zur nachgiebigen Regelung von Robotern implementieren zu können. Dies beinhaltet sowohl Starrkörperroboter wie auch Systeme mit seriell-elastischen Gelenken oder Gelenken variabel einstellbarer Steifigkeit.\no ... für einen vorgegebenen Anwendungsfall in der Leichtbauroboterregelung einen passenden Ansatz auszuwählen und zu implementieren.",
        "inhalt": "• Werkzeuge zur passivitäts- und energiebasierten Analyse von Robotern\n• Konzepte zur nachgiebigen Regelung von Starrkörpersystemen\n– Zustands-Feedbacklinearisierung\n– Nachgiebigkeits-Regelung, Impedanz- und Admittanzregelung\n– Hierarchische Multiprioritätenregelung\n– Passivitätsbasierte Bahnregelung\n– Adaptive Regelung\n– Optimierungsbasierte Regelung\n• Konzepte zur nachgiebigen Regelung von Robotern mit flexiblen Gelenken\n– Kaskadierte Gelenkdrehmomentregelung (Singular-Perturbation¬-Ansatz)\n– Passivitätsbasierte Regelung\n– Vollständige Zustandsregelung für Bahnregelung\n– Backstepping-Ansätze\n• Konzepte zur nachgiebigen Regelung von Robotern mit variabel einstellbarer Gelenksteifigkeit\n– Regelung zur Erhaltung der inhärent elastischen Struktur\n– Regelung zur Erhaltung der inhärent elastischen Struktur mit Steifigkeitsvorgabe\n• Konzepte zur Regelung unteraktuierter Systeme",
        "voraussetzungen": "IN2067 oder eine gleichwertige Robotik-Grundlagenvorlesung, Grundkenntnisse der Beschreibung dynamischer Systeme, Regelungstechnikgrundlagen\nOptional praktische Erfahrung mit Leichtbaurobotern, z.B. durch die Vorlesung „Programmierung und Regelung für Mensch-Roboterinteraktion“ (IN2308)",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=835298&pOrgNr=1",
        "name": "Regelungssysteme",
        "kennung": "EI0307",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende mit grundlegenden Konzepten der Regelungs- und Steuerungstechnik vertraut und in der Lage, Regelungen selbst zu konzipieren und umzusetzen.\n\nDarüber hinaus wird den Studierenden ein tieferes Verständnis für dynamische Systeme und deren Verhalten vermittelt.",
        "inhalt": "Grundlagen der Steuerung und Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme. - Systemdynamische Bausteine, Zeitverzögerte Systeme. - Stabilität von LTI-Systemen, Stabilitätskriterien. - Grundlagen der Regelung und Standardregler. - Stabilitätsanalyse von Regelkreisen im Frequenzbereich, Nyquist- und Bodediagramme. - Reglerentwurf und Methoden zur Reglerparametrierung. - Strukturelle Erweiterungen der einschleifigen Regelungsstruktur durch Vorsteuerung und Reglerkaskaden. - Zustandsbasierter Reglerentwurf, Linearquadratische Regelung, Zustandsbeobachter von LTI-Systemen. - Digitale Implementierung von Steuerungs-, Regelungs- und Filtergesetzen. - Grundlagen der Regelungstheorie ereignisdiskreter Systeme, endliche Zustandsautomaten, Sprache eines Automaten, Petri-Netz-Modellierung, Koordinierung von Teilsteuerungen. - Technik von Regelungs-, Steuerungs- und Automatisierungssystemen. - Anwendungsbeispiele.",
        "voraussetzungen": "Grundlagen der Mathematik dynamischer Systeme, die in den Vorlesungen für höhere Mathematik vermittelt wird.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1370140&pOrgNr=1",
        "name": "Regelungssysteme 2",
        "kennung": "EI06871",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage Mehrgrößenregelungssysteme zu analysieren, zu entwickeln und zu implementieren. Sie sind danach mit erweiterten Konzepten der linearen Regelungstechnik vertraut und in der Lage, Regelungen selbst zu konzipieren und umzusetzen. Die dazu notwendigen methodischen Grundlagen werden in den Vorlesungen vermittelt und Studierende sind durch die begleitenden Übungen befähigt diese auf konkrete Problemstellungen anzuwenden.",
        "inhalt": "Analyse von Mehrgrößensystemen: Pole und Nullstellen, Steuerbarkeit und Beobachtbarkeit, Stabilität: MIMO-Nyquist-Kriterium, Gershgorin, quadratische Stabilität, Lyapunov-basierte Analysewerkzeuge, strukturelle Analyse, fundamentale Performanzschranken, Regelungsentwurf für Mehrgrößensysteme: Vorfilter-Entwurf, vollständige modale Synthese, Entkopplungsregelung, Loopshaping, H-unendlich-Regelung, LMI-basierte Entwurfsmethoden, rechnergestützter Regelungsentwurf. - Anwendungsbeispiele.",
        "voraussetzungen": "Grundlagen der Regelungstechnik und erweiterte mathematische\nKenntnisse.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3395843&pOrgNr=1",
        "name": "Remote Machine Intelligence Lab",
        "kennung": "CIT4310005",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the course, students have understood the working principles of teleoperation systems with haptic feedback. They are ready to write code to connect haptic devices with remote robots, manipulate the robots and interact with remote objects while perceiving stable force feedback. Moreover, the students are also able to program and remotely transfer necessary knowledge to the robot for executing complex tasks at full autonomy. Besides, the students will be able to explain the main components of autonomous drones, i.e. state estimation, mapping, motion planning and control. In addition, they will know in detail the working principles of 3D occupancy mapping and planning, and be able to implement them as a real-time ROS/C++ application. They will furthermore be given awareness for what intuitive user interaction requires regarding ease of use as well as safety.",
        "inhalt": "Overview of robotics and control\no Introduction to robotics and control of robotic systems: a general overview of kinematics, dynamics and control of the robotic systems are given.\no Motion control: Decentralized control, PD plus gravity and inverse dynamics controller and their closed-loop dynamics are illustrated.\no Force/impedance control: The impedance control in task space and joint space is shown is reviewed.\n● Telerobotic systems and applications\no Overview of telerobotics: the importance of telerobotics and different examples are reviewed.\no Control architectures: different control architecture used in teleoperation is introduced.\n▪ Direct control\n▪ Shared control\n▪ Supervisory control\no Stability and transparency in tele-manipulations: the importance of stability and transparency is shown in illustrative example scenario.\no Telepresence reference platform at MIRMI: our telepresence setup with different protocols is introduced, and the performance of the system in contact with different environments is presented.\no Clear intensive guidance for programming with haptic devices\no Designing a teleoperation system for remote interaction and skill transfer\n● Teleoperation with haptic devices\no Intensive guidance for programming with haptic devices and designing teleoperation system for remote interaction and skill transfer.\no Making students user-ready to haptic technology and challenges for teleoperation systems over real communication networks (e.g. system stability, communication load, etc.).\no Working with haptic devices and remote robot in virtual reality, introduction to ROS, Chai3D, and then a quick overview about available examples.\no Overview of teleoperation design in real environment and corresponding stability issues, and remote learning from demonstration technologies.\no Writing codes and programming the teleoperation system either in virtual or real environments to perform a certain number of tasks that are ranging from simple to complex.\n● Drone and its application\no Simulation (Gazebo) and a real one that has basic semi-automatic control already implemented, including on-board localization.\no Students will implement is on-board occupancy mapping using the mounted depth camera, as well as (local) planning to avoid collisions with the environment.\no Develop a final demo, in which the drone can be steered intuitively with a keyboard, while the drone is inherently safe and will only ever move as far as safe to avoid colliding with the environment.",
        "voraussetzungen": "- Fundamentals of control theory\n- Fundamentals of robotics\n- Fundamentals of mobile robotics\n- Fundamentals of 3D computer vision\n- C, C++\n- Python",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1236015&pOrgNr=1",
        "name": "Ringpraktikum Neurosignale",
        "kennung": "EI78001",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem Praktikum sind die Studierenden dazu in der Lage:\n- die theoretischen Grundlagen von neuronalen Reaktionen auf muskuläre Signale, deren Messung, Analyse (auch mehrkanalige Datenanalyse) und statistische Auswertung zu verstehen.\n- Experimente zur Erfassung ereigniskorrelierter Potentiale (z.B. auditorisch evozierte Hirnstammpotentiale, visuell okuläre Reaktionen, EEG-Signale) anzulegen.\n- wenden modernste Signalverarbeitungsmethoden, robuste Informationsextraktion und Auswertung der Datenqualität von bioelektrischen Signalen mit Matlab an.\n- verrauschte multivariate neuronale Messdaten statistisch zu analysieren.",
        "inhalt": "Das praktische Modul lehrt grundlegende Methoden des NeuroEngineering in 3 thematischen Elementen, die jeweils von einem anderen Mitglied des CoC NeuroEngineering betreut werden. In persönlicher Vorbereitung mit schriftlichem Material bereiten sich die Studierenden auf jedes Praktikum vor, in dem sie ein praktisches Tutorium erhalten.\n1) Hemmert: Einführung in das Hörsystem des Menschen. Aufzeichnung und Analyse von Biosignalen, z.B. EMG, auditorische Hirnstammreaktionen (BERA), kortikale auditorisch evozierte Potentiale (CAEP).\n2) Seeber: Einführung in die Elektrookulogramm (EOG)-Datenverarbeitung, Implementierung eines blickgesteuerten Beamformers.\n3) Cheng: Mehrkanal-EEG-Aufzeichnungen und die statistische Analyse ereigniskorrelierter Potentiale mittels Zeit-Frequenz-Zerlegung mit Schwerpunkt auf kognitiven Mechanismen.",
        "voraussetzungen": "Empfohlen: Programmiererfahrung in MATLAB. Vorteilhaft: Hintergrund in Signalverarbeitung, Hintergrund in statistischer Datenanalyse und Mustererkennung.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1235884&pOrgNr=1",
        "name": "Ringvorlesung Systemsicherheit",
        "kennung": "EI75671",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI7567",
        "lernergebnisse": "Nach Abschluss des Moduls sind die Studierenden in der Lage grundlegende Problemstellungen von sicherheitskritischen Systemen zu verstehen und\naktuelle Lösungsansätze für diese Probleme wieder zu geben.",
        "inhalt": "In der Vorlesung werden von verschiedenen Referenten aus der Industrie und aus Forschungseinrichtungen aktuelle Problemstellungen der IT Sicherheit von Systemen und Anwendungen vorgestellt und vorhandene\nLösungen präsentiert.",
        "voraussetzungen": "Der vorherige Besuch des Moduls Grundlagen der IT-Sicherheit oder gleichwertig erleichtert das Verständnis.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3501658&pOrgNr=1",
        "name": "Robot Learning and Control Project Course",
        "kennung": "CIT4310007",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students will learn to independently solve robotics control and learning problems. This includes analyzing the problem, developing a project plan, exploring appropriate solutions, and demonstrating the results on real robot hardware. Students will also learn to work efficiently as a team, document their approach, and communicate their results.",
        "inhalt": "Students will gain hands-on experience in robot learning and control by developing their own comprehensive hardware/software solution for a given robotics problem. Topics will vary each term. Student teams work jointly on the hardware and software solution, and develop a robot demonstration to showcase their results. The main goal of this course is to teach robotics problem solving skills as well as project management and teamwork.",
        "voraussetzungen": "Fundamentals of robotics, machine learning, control theory, and computer vision.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=473874&pOrgNr=1",
        "name": "Robot Motion Planning",
        "kennung": "IN2138",
        "organisation": "Department Computer Engineering",
        "anmerkung": "5 Credits ab SoSe 2015",
        "lernergebnisse": "The goal of the module is to show the participants existing direct planning methods for low-dimensional problems, e.g. mobile robots, and show how probabilistic approaches help to deal with the increasing complexity in high-dimensional planning cases. The students learn how to design a planning system by understanding how to build maps from a-priori information or from sensor input (SLAM) and how to use these maps to efficiently plan collision-free trajectories in space.",
        "inhalt": "The module has two parts. In the first part, planning methods are discussed starting with complete knowledge about the environment, over partial knowledge of the local area, to probabilistic sampling in high-dimensional spaces. This part covers:\nbug-algorithms, direct planning methods for planar robots, and probabilistic road-maps.\nIn the second part, Kalman Filter techniques are discussed that allow to compensate errors in the data and build maps of the environment based on Simultaneous Localization and Mapping (SLAM) and particle filtering approaches.",
        "voraussetzungen": "Not specified",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261359&pOrgNr=1",
        "name": "Robotics",
        "kennung": "IN2067",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Teilnehmer*innen sollen in der Lage sein, ein mathematisches Modell eines mechanischen Systems mit Hilfe von Kräfte-/Momenten-Analyse (Newton-Euler Ansatz) oder durch Energieanalyse (Lagrange Methode) zu erstellen, welches die Antriebsmomente in den Gelenken zu Bewegungsparametern des Manipulators in Beziehung setzt.\nSie sollen auch die Bedeutung und den mathematischen Zusammenhang zu dem o.g. Modell für die Regelparameter eines PID Reglers für ein Robotersystem erklären können und deren optimale Werte für einen Positions- und Kraftregler bestimmen können.",
        "inhalt": "Dieses Modul vermittelt einerseits das Wissen, wie ein mechanisches System in ein mathematisches Gleichungssystem zur Bewegungsbeschreibung übergeführt werden soll. Anschließend, wird aus der mathematische Analyse dieser Gleichung die Parametrierung der Regelung eines Manipulators abgeleitet, um etwaige Fehler und Abweichungen entlang einer vorgegebenen Trajektorie auszugleichen.\n\nFolgende Themenbereiche werden in der Vorlesung definiert und an praktischen Beispielen diskutiert:\n- Koordinatensysteme (Denavit-Hartenberg Konvention)\n- Forwärtskinematik (Beziehung: Gelenkrotation zu Manipulatorbewegung)\n- Inverse Kinematik (Beziehung: Manipulatorbewegung zu Gelenkrotationen)\n- Newton-Euler/Lagrange Analyse des dynamischen Zustandes in den Gelenken\n- Dynamische Modellierung des Manipulators (mathematisches Modell (MVG) zur Bewegungsanalyse)\n- PID Regelung der Position und Kraft",
        "voraussetzungen": "- Vektorrechnung\n- Differentialrechnung\n- Grundkenntnisse in Physik (Newton's Law, etc.)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1804622&pOrgNr=1",
        "name": "Schaltungssimulation",
        "kennung": "EI06691",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende mit der grundlegenden Funktionsweise von Algorithmen in der analogen Schaltungssimulation vertraut. Er versteht, wie ein Schaltungssimulator funktioniert und ist damit in der Lage, ihn kompetent und effizient einzusetzen. Gleichzeitig ist er über die Schaltungssimulation hinaus mit den grundlegenden Verfahren der Simulation kontinuierlicher Systeme vertraut. Im einzelnen versteht er folgende Konzepte und kann sie anwenden: Aufstellen des Knotenspannungssystems für eine rechnergerechte Darstellung von Transistorschaltungen; Lösung linearer Gleichungssysteme für die AC-Analyse mittels Gauss-Verfahren; Arbeitspunktbestimmung mittels numerischer Nullstellensuche; Einschwinganalyse dynamischer Schaltungen mittels numerischer Integration.",
        "inhalt": "Entwurfsablauf mikroelektronischer Systeme (Design Flow), Entwurfsraum (Y-Chart), Entwurfsstile; Simulation analoger Schaltungen; Systembeschreibung, erweitertes Knoten-Spannungssystem; Wechselstrom-(AC-)Analyse, parallele Simulation, schwach besetzte Matrizen; Gleichstrom-(DC-)Analyse, Newton-Raphson, linearisierte Schaltungsmodelle; Einschwinganalyse, numerische Integrationsverfahren, diskretisierte Schaltungsmodelle; Großsignalmodelle.",
        "voraussetzungen": "Module, die in Schaltungstheorie und Signaldarstellung einführen, sollten vorab belegt worden sein.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458030&pOrgNr=1",
        "name": "Schaltungstheorie",
        "kennung": "EI00130",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, aus der Struktur der elektrischen Schaltung die Kirchhoff'schen Gesetze zu bestimmen, mathematische Beschreibungen für lineare und nichtlineare Elemente als Ein-, Zwei- oder Mehrtore zu erstellen und deren Eigenschaften zu beurteilen. Für die Analyse von resistiven Schaltungen beherrschen sie die Formulierung der Tableaugleichungen und des Gleichungssystems der reduzierten Knotenspannungsanalyse. Die Studierenden können für lineare Schaltungen das Superpositionsprinzip anwenden und eine Zweipolersatzschaltung bestimmen. Sie können einfache Schaltungen entwerfen und die Sinnhaftigkeit des verwendeten Modells beurteilen. Die Studierenden sind in der Lage, die grundlegenden Eigenschaften reaktiver Elemente zu beurteilen und die Zeitantwort einer linearen reaktiven Schaltung mithilfe der komplexen Wechselstromrechnung bestimmen.",
        "inhalt": "Modellierung, Analyse linearer und nichtlinearer Schaltungen.\nKirchhoff-Gesetze und Graphen: Torbedingung, Kirchhoff'sche Gesetze, Netzwerkgraph, systematische Formulierung der Kirchhoff'schen Gesetze, Inzidenzmatrizen.\nResistive Eintore: Modellierung, Eigenschaften, streng lineare resistive Eintore, Dioden, Verschaltung von Eintoren, lineare Quellen, stückweise lineare Widerstände, Arbeitspunkt, Kleinsignalanalyse.\nResistive Zweitore: lineare Zweitore, Eigenschaften, spezielle Zweitore, Verschaltung von Zweitoren.\nOperationsverstärker: Modellierung, Grundschaltungen mit Operationsverstärker.\nResistive Mehrtore: Beschreibungsformen, spezielle Mehrtore.\nAllgemeine Analyseverfahren: Tellegen'scher Satz, Tableaugleichungen, Newton-Raphson Algorithmus, reduzierte Knotenspannungsanalyse.\nNetzwerkeigenschaften: duales Netzwerk, Sustitutionstheorem, Superpositionsprinzip, äquivalente Zweipolersatzschaltungen.\nReaktive Bauelemente: lineare und nichtlineare Kapazitäten, Induktivitäten und Memristoren, Dualität von Ladung und Fluss, Eigenschaften reaktiver Eintore, Verschaltung reaktiver Eintore, reaktive Mehrtore.\nKomplexe Wechselstromrechnung: komplexe Zeigergrößen, Berechnung der Zeitantwort im eingeschwungenen Zustand, Energie- und Leistungsberechnung mit komplexen Zeigern.",
        "voraussetzungen": "Algebra (Gleichungssysteme in mehreren Variablen), Vektorrechnung, Differential- und Integralrechnung, elektrophysikalisches Grundwissen\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n- Lineare Algebra\n- Analysis 1",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=460596&pOrgNr=1",
        "name": "Security Engineering",
        "kennung": "IN2178",
        "organisation": "Department Computer Engineering",
        "anmerkung": "Erhöhung auf 5 Credits ab SoSe 2014",
        "lernergebnisse": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, Prozesse und Techniken für Analyse, Design, Evaluierung und Betrieb sicherer IT-Anwendungen, sowie Design Umsetzung, und Verifikation sicherer Software zu verstehen und anzuwenden. Damit werden die Studierenden befähigt, die IT-Sicherheit von Anwendungen zu analysieren und zu bewerten, sowie angemessene IT-Sicherheitslösungen systematisch zu entwickeln und darzustellen.",
        "inhalt": "Eine sichere IT-Anwendung erfordert sowohl die Anwesenheit erwünschter Sicherheitsfunktionalität (Beispiel: Zugriffskontrolle), als auch die Abwesenheit unerwünschter Sicherheitsmängel (Beispiel: Verarbeitung ungeprüfter Benutzereingaben).\n\nWir besprechen grundlegende Begriffe (Beispiel: Security versus Safety), sowie Sicherheitsziele und sichere Designprinzipien (Beispiel: Least Privilege). Wir lernen den Entstehungsprozess sicherheitskritischer Anwendungen kennen.\n\nSchwerpunkte bilden Systemanalyse, Bedrohungs- und Risikoanalyse, Ableitung der Sicherheitsanforderungen, und Empfehlung von möglichen Sicherheitsmaßnahmen, auch unter Berücksichtigung von wirtschaftlichen Aspekten. Wir lernen, wie Sicherheitsrichtlinien definiert werden und wie sie sich in einer Sicherheitsarchitektur im Rahmen der Gesamtsystemarchitektur widerspiegeln. Wir betrachten exemplarisch grundlegende Sicherheitsmechanismen (Beispiel: PKI). Wir adressieren Methoden zur Validierung und Bewertung sicherer Anwendungen (Beispiel: Common Criteria) und beschäftigen uns mit Konzepten zum IT-Sicherheitsmanagement (Beispiel: ISO 2700x) und zum sicheren Betrieb von Anwendungen. Ein weiterer Schwerpunkt ist die Entwicklung sicherer Software. Wir sprechen die grundlegenden Angriffs-Vektoren von Hackern, Crackern und Schadsoftware-Autoren an. Wir erfahren, wie unsichere Programmierung Verwundbarkeiten eröffnet (Beispiel: Cross-Site-Scripting). Wir lernen, wie man systematisch nach solchen Schwachstellen sucht. Wir untersuchen den professionellen Umgang mit Sicherheitsvorfällen, und die Arbeit von \"Computer Emergency Response Teams\" (CERTs). Wir adressieren Prinzipien und Richtlinien sicheren Software-Entwurfs und sicherer Programmierung, sowie entsprechende Verifikationsmethoden. Wir betrachten exemplarisch den \"Security Development Cycle\" von Microsoft, sowie Modelle zur Bestimmung der Güte eines sicheren Software-Entwicklungsprozesses und zu seiner Verbesserung (Beispiel: SSE-CMM).",
        "voraussetzungen": "IN2209 IT Sicherheit",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1704173&pOrgNr=1",
        "name": "Security in Communications and Storage",
        "kennung": "EI71060",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "NAch dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage\n- Maßnahmen, um Sicherheit in modernen Kommunikations- und Speichersystemem zu erreichen, zu benennen und zu erklären,\n- grundlegende kryptographische Schemata zu verstehen und zu analysieren,\n- die Herausforderungen von post-quantum Kryptographie zu verstehen und zu benennen, welche Systeme sicher bleiben,\n- für Code-basierte Kryptographie: einen passenden fehlerkorrigierenden Code zu wählen, seine Parameter anzupassen, zu evaluieren und in Software zu implementieren,\n- bekannte Attacken auf Code-basierte Kryptographie zu verstehen und zu implementieren,\n- einen Überblick über symmetrische Kryptographie und Authentifizierung zu geben,\n- die wichtigsten Codes zu erklären, welche für verteilte Datenspeicherung verwendet werden,\n- Herausforderungen im Design und das Zusammenspiel verschiedener Parameter in verteilter Datenspeicherung zu identifizieren,\n- Herausforderungen der Sicherheit in der verteilten Datenspeicherung zu identifizieren,\n- das grundlegende Prinzip und die verschiedenen Formen von Private Information Retrieval zu verstehen,\n- einen Überblick über die bekannten Ergebnisse im Zusammenhang mit Private Information Retrieval über Komplexität, Kapazität und Codes zu geben",
        "inhalt": "- Motivation und praktische Notwendigkeit von Sicherheit\n- Kurzer Überblick der klassischen Kryptographie: symmetrische und public-key Kryptographie\n- Kurze Einführung in lineare fehlerkorrigierende Codes: Generator und Parity-Check Matrix, dualer Code, Mindestdistanz, MDS Codes\n- Post-quantum Kryptographie: Bedrohung des Quantencomputers, Code-basierte Kryptographie (McEliece & Niederreiter Schema, Attacken), Lattice-basierte Kryptographie\n- Authentifizierung\n- Verteilte Datenspeicherung: Wahl der Parameter, Regenerating Codes, Locally Repairable Codes, Schranken\n- Grundlegende Definitionen der Informationstheorie: Entropie, wechselseitige Information\n- Sichere verteilte Datenspeicherung\n- Private Information Retrieval: grundlegende Idee (Sicherheit vs. Anonymität vs. Privacy), kleine Beispiele (1-3 Server), computational vs. informations-theoretisches PIR, Überblick über Kommunikationskomplexität\n- PIR über codierte Datenbanken: PIR Rate und Kapazität",
        "voraussetzungen": "- Benötigt: mathematische Grundkenntnisse (vor allem lineare Algebra).\n- Empfohlen: Kenntnisse der Kanalcodierung oder Informationstheorie (Vorlesungen können parallel zu dieser Vorlesung gehört werden)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743476&pOrgNr=1",
        "name": "Selected Topics in Robotics",
        "kennung": "EI71072",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls kennen und verstehen die Teilnehmer fortgeschrittene Konzepte der Robotik und Roboterregelung. Sie können Problemstellungen im Bereich der Regelung von Manipulatoren, die über einfache serielle Roboter hinausgehen, analysieren und Lösungsstrategien bewerten, die auch Modellunsicherheiten über lernende Verfahren berücksichtigen. Die Teilnehmer verstehen Konzepte der mobilen Robotik und können diese in Kombination mit Manipulatoren anwenden. Darüber hinaus können Sie zentrale und dezentrale Regelungsstrategien mit mehreren Robotern analysieren und bewerten.",
        "inhalt": "Kinematik & Dynamik, Roboterstrukturen, unteraktuierte Roboter, mobile Roboter (holonom / nicht-holonom), (hyper-)redundante Systeme, Parameteridentifikation / Lernen, Multi-Roboter Systeme",
        "voraussetzungen": "Einführung in die Roboterregelung\nRegelungssysteme 1\n\nEmpfohlen: Optimierungsverfahren in der Automatisierungstechnik",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3875539&pOrgNr=1",
        "name": "Semantics in Robot Perception and Decision-Making Seminar Course",
        "kennung": "CIT433026",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students will learn to conduct a thorough literature review, contrast different ideas and concepts, quickly prototype existing algorithms, identify their impact and limitations, and communicate their findings in written and oral form. Furthermore, students will be able to structure their findings by identifying the main research threads in a particular field and engaging in group discussions and collaborative writing.",
        "inhalt": "Students will gain knowledge in robot decision-making by critically reviewing existing literature in this field, with a focus on semantics-informed approaches. In addition to the literature review, students are expected to implement relevant work to showcase their understanding of the approach and support the claims in their literature analysis. The specific topics covered will change each term, encompassing areas such as safe robot learning, learning from demonstration, language-conditioned robot learning, spatial AI, and 3D scene understanding.",
        "voraussetzungen": "Fundamentals of robotics, machine learning, control theory, and computer vision.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3567009&pOrgNr=1",
        "name": "Seminar AI Processor Design",
        "kennung": "CIT4320002",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the seminar, the students are able to present a new idea or an existing approach in the area of AI acceleration in an understandable and convincing manner.\nFor this purpose, the following competencies will be acquired:\n\n* The students are able to independently familiarize themselves with a scientific topic in the field of unconventional computing paradigms for AI accelerations.\n* The students are able to present their topic in a structured way according to problem formulation, state of the art, goals, methods and results.\n* The students can present their topic, according to the above-mentioned structure, in form of a presentation, and in form of a written report.\nThe students are able to summarize, present, and explain research ideas presented in scientific papers.",
        "inhalt": "Technology scaling is approaching its end in which breakthroughs become inevitable. This holds even more after starting the massive production of commercial processors at 7nm technology nodes. At such an extreme scale, obtaining further improvements in the efficiency of processors become significantly difficult. AI applications, in practical, impose profound challenges for the exiting von-Neumann architectures.\n\nSpecific seminar topics in the area of AI acceleration in both hardware and software will be offered.\n\nExamples are:\n* In-memory and near-memory computing to largely accelerate AI applications.\n* Lightweight deep learning algorithms for edge AI such as quantized neural networks (QNNs) and binarized neural networks (BNNs).\n* Brain-inspired computing hardware such as neuromorphic computing and spiking neural networks (SNNs).\n* Emerging non-volatile memories and their crucial role in mimicking biological computing systems (e.g., membrane and synapses).\n* Emerging technologies for future ultralow power AI processors.\n* Brain-inspired computing algorithms such as novel hyperdimensional computing.",
        "voraussetzungen": "None.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=898744&pOrgNr=1",
        "name": "Seminar Audio-Informationsverarbeitung",
        "kennung": "EI7764",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, eigenständig Literatur zu aktuellen Fragestellungen der Audio-Informationsverarbeitung zu recherchieren, über die Bibliotheken zu erhalten, die englischsprachige Fachliteratur zu lesen, zu verstehen und inhaltlich zu bewerten und auf Basis der Literatur einen wissenschaftlichen Vortrag zu erstellen. Weiterhin lernen und üben die Teilnehmer, einen Fachvortrag vor Publikum zu halten und Fragen zum Thema zu beantworten, sowie Vorträge von anderen einzuschätzen. Durch das Erstellen eines wissenschaftlichen Berichts üben die Teilnehmer die Auswahl und Strukturierung von Material, die wissenschaftliche Zitierweise, das generell das Verfassen von präzisen Berichten.",
        "inhalt": "Wechselnde Schwerpunktthemen zu aktuellen Fragen aus der Audio-Informationsverarbeitung, beispielsweise zur Signalverarbeitung von Musik und Sprache, zur Psychoakustik, zu auditorischen Modellen, zu Schwerhörigkeit oder Cochlea Implantaten, oder zur Raumakustik und virtuellen Akustik.\nDie Studenten arbeiten einen Vortrag zu einem ausgewählten Thema aus, tragen ihn vor und üben sich im Beantworten von Fragen ähnlich einer Konferenzsituation. Ziel des Seminars ist es, die Studierenden fachlich und insbesondere in Vortragstechniken und Literaturrecherche zu schulen. Material zum Themeneinstieg wird bereitgestellt, von dem aus vertiefend recherchiert werden soll. Dadurch lernen die Teilnehmer aktuelle Fragestellungen aus der Audio-Informationsverarbeitung kennen und sie schulen das Lesen von englischsprachigen wissenschaftlichen Veröffentlichungen. Weiterhin erstellen die Studierenden einen wissenschaftlichen Bericht zum Vortragsthema.",
        "voraussetzungen": "Vorlesung Communication Acoustics oder\nVorlesung The Auditory System oder\nVorlesung Technische Akustik oder\nVorlesung Signal Processing for Audio Technology\nhilfreich, aber nicht Voraussetzung",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=973856&pOrgNr=1",
        "name": "Seminar Autonome Systeme",
        "kennung": "EI7766",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Moduls verfügt der Studierende Kenntnisse der autonomen Systeme.\n\nDer Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der autonomen Systeme selbstständig auf wissenschaftliche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen zu autonomen Systemen, insbesondere in den Bereichen Planung, Navigation, SLAM, autonomes Lernen, Lernalgorithmen, Vision, Perzeption, Interaktion zwischen Mensch und Roboter, Mobile Roboter, Probabilistische Robotik.\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=954630&pOrgNr=1",
        "name": "Seminar Bioanaloge Informationsverarbeitung",
        "kennung": "EI7756",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse in einem aktuellen Thema der bioanalogen Informationsverarbeitung.\n\nDer Studierende ist anschließend in der Lage, wissenschaftliche Literatur in Datenbanken, online und/oder der Bibliothek zu recherchieren, und so ein Themengebiet selbstständig auf wissenschaftilche Weise zu bearbeiten. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse in einer wissenschaftlichen Arbeit selbstständig unter Einhaltung des wissenschaftlichen code of conduct erstellen und die wesentlichen Ergebnisse seiner Arbeit vor Fachpublikum präsentieren.",
        "inhalt": "In diesem Seminar wird jeweils ein aktuelles Thema aus dem Gebiet der bioanalogen Informationsverarbeitung bearbeitet (z.B. Modellierung biologischer Systeme, Herzschrittmacher, Retinaimplantat, Cochleaimplantat, Deep-Brain Stimulation, Elektrische und Elektromagnetische Neuro-Stimulation, Brain-Computer Interface, neuronale Informationsverarbeitung, Computational Neuroscience).\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "Grundlagen der Informatik\nGrundlagen der Systemtheorie",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=759708&pOrgNr=1",
        "name": "Seminar Codegenerierung und Innovative Programmiermodelle",
        "kennung": "IN4590",
        "organisation": "Department Computer Engineering",
        "anmerkung": "nur für Studiengang CSE",
        "lernergebnisse": "The participants acquire the necessary methodological and interdisciplinary skills for dealing with an academically demanding topic in the area of innovative programming models and code generation. They know how to produce and present a scientific seminar paper. They can analyze and evaluate the results by contrasting them. They can work with scientific literature (search, evaluation, citation) and are able to present the constituent aspects of their topic in both a written paper and a presentation in front of the group.",
        "inhalt": "In this seminar we discuss novel programming models and code generation techniques with a focus on modern processor architectures like multiprocessors, graphic accelerators, high performance computers, and field programmable gate arrays (FPGAs).",
        "voraussetzungen": "first 2 years of the Bachelor's Program",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=979836&pOrgNr=1",
        "name": "Seminar Kognitive Systeme",
        "kennung": "EI7768",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse in der Auslegung und Anwendung kognitiver Systeme.\nDer Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der kognitiven Robotik selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Das Hauptseminar umfasst eine Literaturrecherche in Teilgebieten der humanoiden und allgemeinen Robotik sowie eine Abschlusspräsentation. Das Institut für Kognitive Systeme (ICS) kann in drei Hauptgebiete unterteilt werden welche weitere Untergebiete enthalten. Das Thema der Hauptseminararbeit kann in Absprache mit dem thematisch verantwortlichen wissenschaftlichen Mitarbeiter definiert werden (siehe: http://www.ics.ei.tum.de).\n\nSensoren und Aktoren, Steuerung und Regelung\n- Künstliche Haut für Robotersysteme\n- Humanoide dynamische Lokomotion\n- Restringierte Manipulation für sichere Aktuation\n- Navigation, Steuerung und Regelung von mobilen Robotern\n- Hochleistungs Aktoren\n\nBiologisch-inspirierte verkörperte Kognition\n- Biologisch-inspiriertes Sehen\n- Neurologisch-inspiriertes Lernen von zweibeinigem Gehen\n- Kognitive Architektur\n- Semantische Schlussfolgerung für die Erkennung menschlichen Handelns\n\nMensch-Maschine Schnittstelle\n- Humanoide kognitive Kommunikation\n- Roboter, Gesellschaft und Interaktion\n- Gehirn-Computer Schnittstelle (BCI)\n- Mensch-Roboter Interaktion",
        "voraussetzungen": "Englisch Kenntnisse für Literaturrecherche",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=954328&pOrgNr=1",
        "name": "Seminar Kommunikationsnetze",
        "kennung": "EI7743",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält die Studierende/der Studierende vertiefte Kenntnisse in einem Teilbereich moderner Kommunikationsnetze und ist in der Lage ein Kommunikationssystem eigenständig in schriftlicher und mündlicher Form zu bewerten. Die Studierende/der Studierende arbeitet selbstständig wissenschaftilch und fertigt eine schriftliche Ausarbeitung als wissenschaftlichen Aufsatz (Paper) dazu an. Darüber hinaus lernt die Studierende/der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum zu präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen aus dem Bereich der drahtlosen und drahtgebundenen Kommunikationsnetze. Der Fokus liegt auf aktuellen Forschungsthemen und neuen Technologien.\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "Keine spezifischen Voraussetzungen.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4035999&pOrgNr=1",
        "name": "Seminar Learning-based legged locomotion",
        "kennung": "CIT432006",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Warum sollten Sie dieses Seminar besuchen?\nDie Fortbewegung auf Beinen ist eines der spannendsten Teilgebiete der Robotik. Die Steuerung dieser Roboter ist aufgrund der hybriden und instabilen Natur ihrer Dynamik eine große Herausforderung. In den letzten Jahren haben sich fortgeschrittene (tiefe) Lerntechniken als dominante Ansätze zur Steuerung dieser Roboter durchgesetzt. In diesem Seminar erhalten Sie ein grundlegendes Verständnis für die Prinzipien dieser Algorithmen. Dies kann Ihnen helfen, die Vor- und Nachteile der einzelnen Ansätze zu verstehen. Außerdem werden offene Probleme in jedem Bereich vorgestellt, die als mögliche Richtungen für Ihre zukünftigen Forschungsbemühungen angesehen werden können.\nWas lernen Sie nach der Teilnahme an diesem Seminar?\nSie lernen die Grundlagen der Entscheidungsfindung und Algorithmen im Zusammenhang mit lernfähigen Robotern kennen. Indem Sie sich auf einen dieser Bereiche konzentrieren, erhalten Sie ein vertieftes Verständnis für einen der modernsten Ansätze, die zur Steuerung von Laufrobotern verwendet werden.",
        "inhalt": "- Einführung in die beidbeinige Fortbewegung\n- Entscheidungsfindung und Markov-Entscheidungsprozess (MDP)\n- Geschichte der lernbasierten Ansätze im Bereich der Fortbewegung\n- Offene Probleme und zukünftige Forschungsrichtungen\n- Vorstellung aktueller Forschungsartikel",
        "voraussetzungen": "Vertrautheit mit Robotik, maschinellem Lernen und Deep Learning ist von Vorteil, aber nicht zwingend erforderlich.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1625072&pOrgNr=1",
        "name": "Seminar Maschinelle Intelligenz",
        "kennung": "EI77691",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls\n\n• können Studierende aktuelle Informationen zu Maschinellen Intelligenz bzgl Ihrer Forschungsrelevanz analysieren und bewerten.\n• können Studierende basieren auf aktuellen Forschungstrends im Bereich der Maschinellen Intelligenz einen eigenen, in die Zukunft gerichteten Forschungsplan entwickeln und schriftlich ausdrücken.",
        "inhalt": "Das Seminar behandelt ein ausgewähltes und aktuelles Forschungsthema aus dem Bereich der Maschinellen Intelligenz, z. B. Moral Machines, What is Thought?. Zu diesem Thema führen die Studierenden ein Trendseminar durch mit dem Ziel Forschungstrends zu identifizieren und zu beschreiben. Der zugehörige Prozess baut auf mehrere Stufen auf.\n1 – Lektüre eines einführenden Buches zur Maschinellen Intelligenz\n2 – Erforschung des aktuellen Standes der Forschung/Technik im Bereich Maschinelle Intelligenz\n3 – Extrapolation von zukünftigen Forschungstrends in vorgegebenen Themenkreis\nZiel des Seminars ist es, die Forschungstrends in Form eines Trendreports zusammen zu fassen und als Buch herauszugeben.",
        "voraussetzungen": "Die Veranstaltung setzt grundlegende Kenntnisse um Bereich künstlicher Intelligenz und maschinellem Lernen voraus, sowie hinreichende Sprachkenntnisse in englischer Sprache.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=954337&pOrgNr=1",
        "name": "Seminar Medientechnik",
        "kennung": "EI7744",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse der modernen Medientechnik.\n\nDer Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet Medientechnik selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen aus dem Bereich der Medientechnik. Der Fokus liegt auf aktuellen Forschungsthemen und neuen Technologien.\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "Keine spezifischen Voraussetzungen.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2691271&pOrgNr=1",
        "name": "Seminar on Coding and Cryptography",
        "kennung": "EI77015",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhalten die Studierenden Kenntnisse aktueller wissenschaftlicher Entwicklungen auf den Gebieten der Kanalcodierung und Kryptographie.\n\nDie Studierenden sind anschließend in der Lage, eine Aufgabenstellung aus einem aktuellen Themengebiet der Kanalcodierung und Kryptographie selbstständig auf wissenschaftliche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Teilnehmer die selbst erarbeiteten Erkenntnisse vor einem fachkundigen Publikum präsentieren.",
        "inhalt": "Für das Seminar werden verschiedene aktuelle Themen aus den Gebieten der Kanalcodierung und Kryptographie ausgewählt, die von den Studierenden selbständig bearbeitet werden.\n\nJeder Teilnehmer fasst die Ergebnisse seiner Arbeit schriftlich zusammen und hält einen wissenschaftlichen Vortrag, an den sich eine fachliche Diskussion anschließt.",
        "voraussetzungen": "- Grundlegende Kenntnisse von linearer Algebra\n- Vorlesung Channel Coding empfohlen\n- Optional Vorlesungen \"Security in Communications and Storage\", \"Coding Theory for Storage and Networks\"",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2691269&pOrgNr=1",
        "name": "Seminar on Digital Communications",
        "kennung": "EI77013",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält der Student Kenntnisse aktueller wissenschaftlicher Entwicklungen auf dem Gebiet der digitalen Kommunikationstechnik.\nDer Student ist anschließend in der Lage, eine Aufgabenstellung aus einem aktuellen Themengebiet der Nachrichtentechnik selbstständig auf wissenschaftliche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Student die von ihm erarbeiteten Erkenntnisse vor einem fachkundigen Publikum präsentieren.",
        "inhalt": "Für das Seminar werden verschiedene aktuelle Themen aus den Gebieten der Digitalen Kommunikationstechnik (z.B. Quellen-, Kanal- und Netzcodierung, optische Übertragungstechnik, Informationstheorie) ausgewählt, die von den Studenten selbständig bearbeitet werden.\n\nJeder Student fasst die Ergebnisse seiner Arbeit schriftlich zusammen und hält einen wissenschaftlichen Vortrag, an den sich eine fachliche Diskussion anschließt.",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Vorlesung über Digitale Kommunikation\n- abhängig vom gestellten Thema ggf. einschlägige Fachvorlesungen",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2691270&pOrgNr=1",
        "name": "Seminar on Optical Communications",
        "kennung": "EI77014",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an der Modulveranstaltung erhält der/die Studierende Kenntnisse über aktuelle wissenschaftliche Entwicklungen auf dem Gebiet der Optischen Kommunikationstechnik.\nDie Studierenden sind anschließend in der Lage, Aufgabenstellungen aus aktuellen Themengebieten der optischen Kommunikationstechnik selbständig zu erfassen, wissenschaftlich zu bearbeiten, und wiederzugeben. Darüber hinaus können Teilnehmer selbst erarbeitete Ergebnisse vor einem fachkundigen Publikum präsentieren.",
        "inhalt": "Für das Seminar werden verschiedene aktuelle Themen aus unterschiedlichen Gebieten der Optischen Kommunikationstechnik (z.B. optische Modulations- und Detektionsverfahren, lineare und nichtlineare Eigenschaften optischer Kanäle und Subsysteme, optische Fasern und Wellenleiter, lineare / nichtlineare Entzerrung, ...) ausgewählt, die von den Studenten selbständig bearbeitet werden.\nJede(r) Student(in) fasst die Ergebnisse seiner/ihrer Arbeit schriftlich zusammen und hält einen wissenschaftlichen Vortrag, an den sich eine fachliche Diskussion anschließt.",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nOptical Communication Systems (EI5075)\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\nDigital Signal Processing for Optical Communication Systems (EI71067)",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1130050&pOrgNr=1",
        "name": "Seminar on Security in Information Technology",
        "kennung": "EI5092",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreeichem Abschluss des Moduls verfügen die Studierenden über Kenntnisse der aktuellen Probleme und Aufgabenstellungen im Bereich Sicherheit in informationstechnischen Systemen.\n\nDer Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Sicherheit in der Informationstechnik selbstständig auf wissenschaftliche Weise zu bearbeiten, eine schriftliche Ausarbeitung dazu anzufertigen sowie die Qualität von wissenschaftlichen Texten zu bewerten. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen zur Sicherheit in\nInformationstechnischen Systemen.\n\nDie Modulteilnehmer erarbeiten selbstständig aktuelle wissenschaftliche Beiträge und fertigen eine schriftliche Ausarbeitung. Die Resultate werden anschließend in Form von Vorträgen allen Teilnehmern präsentiert. Es erfolgt eine intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Kryptologie oder gleichwertige Grundlagenvorlesung\n\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n- Sichere Implementierung kryptographischer Verfahren\n- Selected Topics in System Security",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1158116&pOrgNr=1",
        "name": "Seminar on Signal Processing in Communications",
        "kennung": "EI5090",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students learn how to read and comprehend scientific literature. In addition, students learn how to structure the available information and how to extract the important parts. Furthermore, participants learn how to structure and prepare the scientific content for an oral presentation which targets both a genral audience and experts. Students learn how to write a scientific paper. after completing the course students will be able investigate a scientific topic from the corresponding scientific literature (in particular conference/workshop or journal publications).",
        "inhalt": "Varying topics on Signal Processing in Communications\n\nThe Seminar on Signal Processing in Communications is an elective course in the third semester of the Master of Science in Communications Engineering (MSCE) program.\n\nDuring the preparation of and the participation in the seminar, you will acquire hands-on experience of scientific research and improve your skills of presenting complex scientific information. During the course you will guided by experienced members of our scientific staff.",
        "voraussetzungen": "No special requirements.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=898613&pOrgNr=1",
        "name": "Seminar on Topics in Communications Networking",
        "kennung": "EI5087",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of the module, students are able to:\n- Perform a complete literature review of an assigned topic\n- Understand the assigned topic and be able to summarize it in a technical report.\n- Improve the writing skills but learning how to structure the report, what to include in the report, how to explain it in a clear and consistent way, refer to existing work, how to improve the abstract and the conclusion, etc.\n- Improve the presentation skills but preparing good slides, learning how to speak, move, look\n- Answer questions from the audience on the presented work.\n- Review available papers and technical reports.",
        "inhalt": "Introduction to selected current research topics in the fields of communication networking, communication protocols, network theory, information theory, queuing theory, communication systems, network resource management, signaling systems, wireless cellular and multihop communications, network planning and optimization, network performance analysis.\nIn the seminar the participants prepare their own contributions based on literature study in form of technical papers, presentations and intensive discussions to give all students a state-of-the-art introduction to important recent research areas.",
        "voraussetzungen": "Fundamentals of modern communication theory and communication networking principles\n\nThe following modules should be passed before taking the course:\n- Adaptive and Array Signal Processing\n- Broadband Communication Networks\n- Channel Coding\n- Information Theory and Source Coding",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3287416&pOrgNr=1",
        "name": "Seminar on Topics in Design Automation",
        "kennung": "CIT4320000",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, the participants are able to investigate a scientific topic based on the reading and further research of scientific publications in the area of Design Automation. The participants are able to critically reflect and discuss research outcomes. They are able to structure and write a scientific report. The participants are able to present the contents of their findings and participate in a scientific discussion.",
        "inhalt": "In this seminar, current topics from the area of Design Automation are discussed among the participants. A structured introduction into scientific literature regarding paper reading, literature research, presentation techniques, and scientific writing is given. The participants are enabled to independently perform all required steps to present a scientific topic in form of a review paper and an oral presentation.",
        "voraussetzungen": "No specific requirements",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1367248&pOrgNr=1",
        "name": "Seminar on Topics in Electronic Design Automation",
        "kennung": "EI77502",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Seminars sind die Studierenden in der Lage, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet des rechnergestützten Schaltungs- und Systementwurfs in verständlicher und überzeugender Weise zu präsentieren.\nZu diesem Zwecke werden im Einzelnen folgende Fähigkeiten erworben:\n• Die teilnehmende Person kann sich selbstständig ein wissenschaftliches Thema aus dem Bereich des rechnergestützten Schaltungs- und Systementwurfs aneignen.\n• Die teilnehmende Person ist fähig, ein Thema strukturiert nach Problemstellung, Stand der Technik, Ziele, Methoden und Ergebnisse darzustellen.\n• Die teilnehmende Person ist in der Lage, ein Thema in der genannten Strukturierung mündlich zu präsentieren, in einem Foliensatz zu visualisieren, und in einem wissenschaftlichen Bericht schriftlich darzustellen.",
        "inhalt": "Spezifische Seminarthemen aus dem Bereich der Entwurfsautomatisierung für elektronische Schaltungen werden angeboten. Beispiele sind Analogentwurfsmethodik, Entwurfsmethodik für digitale Schaltungen, Layoutsynthese, und Entwurfsmethodik auf der Systemebene.\nTeilnehmende arbeiten eigenständig auf einem wissenschaftlichen Thema und schreiben ein Paper von 4 Seiten. Abschließend präsentieren die Teilnehmenden ihr Thema in einem Vortrag. In einer anschließenden Diskussion wird ihr Thema detailliert behandelt.",
        "voraussetzungen": "Keine.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1367247&pOrgNr=1",
        "name": "Seminar on Topics in Integrated Systems",
        "kennung": "EI77501",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Seminars sind die Studierenden in der Lage, aktuelle Konzepte im Bereich integrierter Bausteine und Architekturen anhand einer Literaturstudie in verständlicher und überzeugender Weise zu präsentieren.\nDabei werden die folgenden Fähigkeiten erworben:\n* Der Teilnehmer kann selbständig aktuelle Konzepte im Bereich integrierter Systeme analysieren.\n* Der Teilnehmer ist fähig, ein Thema strukturiert nach Problemstellung, Stand der Technik, Ziele, Methoden, und Ergebnissen darzustellen.\n* Der Teilnehmer ist in der Lage, ein Thema in der genannten Strukturierung mündlich zu präsentieren, in einem Foliensatz zu visualisieren, und in einem wissenschaftlichen Bericht schriftlich darzustellen.",
        "inhalt": "Spezifische Seminarthemen aus dem Bereich der Entwurfsautomatisierung für elektronische Schaltungen werden angeboten. Beispiele sind anwendungsspezifische Beschleuniger und funktionsspezifische Prozessorarchitekturen.\nDie Teilnehmer arbeiten eigenständig auf einem wissenschaftlichen Thema, schreiben ein Paper von typisch 4 Seiten, und präsentieren ihr Thema in einem Vortrag. In der anschließenden Diskussion wird ihr Thema detailliert behandelt.",
        "voraussetzungen": "Keine.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=977166&pOrgNr=1",
        "name": "Seminar on Topics in Signal Processing",
        "kennung": "EI5084",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Students learn how to read and comprehend scientific literature. In addition, students learn how to structure the available information and how to extract the important parts. Furthermore, participants learn how to structure and prepare the scientific content for an oral presentation which targets both a genral audience and experts. Students learn how to write a scientific paper. after completing the course students will be able investigate a scientific topic from the corresponding scientific literature (in particular conference/workshop or journal publications).",
        "inhalt": "Varying topics on Signal Processing\n\nThe Seminar on Topics in Signal Processing is an elective course in the third semester of the Master of Science in Communications Engineering (MSCE) program. It is a joint seminar of the\n\n* Institute for Circuit Theory and Signal Processing: Prof. J.A. Nossek\n* Media Technology Group - Institute of Communication Networks: Prof. E. Steinbach\n\nDuring the preparation of and the participation in the seminar, you will acquire hands-on experience of scientific research and improve your skills of presenting complex scientific information. During the course you will guided by experienced members of our scientific staff.",
        "voraussetzungen": "No special requirements.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3589609&pOrgNr=1",
        "name": "Seminar Optimal Control and Learning for Legged Locomotion",
        "kennung": "CIT4320004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Why should you take this seminar?\nLegged locomotion is one of the most interesting subfields of robotics. Controlling these robots is highly challenging due to the hybrid and unstable nature of their dynamics. The past few years has witnessed the rise of advanced optimal control and (deep) reinforcement learning techniques as dominant approaches for controlling these robots. Throughout this seminar, you gain a basic understanding of the principles behind these algorithms. This can help you understand the pros and cons of each approach. Also, open problems in each field are presented that can be seen as potential directions for your future research endeavors.\nWhat do you learn after taking this seminar?\nYou learn about the fundamentals of modeling, control and low-level decision making of legged robots. Focusing on one of these areas, you gain an in-depth understanding of one of the state-of-the-art approaches that are used to control legged robots.",
        "inhalt": "● Introduction to legged locomotion\n● Modeling and control of legged robots\n● Optimal control of legged robots\n● Learning of locomotion skills\n● Open problems and future directions for research\n● Presentation of recent research articles",
        "voraussetzungen": "Familiarity with robotics, optimization, optimal control theory and deep learning will be beneficial but not mandatory.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3840773&pOrgNr=1",
        "name": "Seminar Quantum Information Processing Devices",
        "kennung": "CIT432005",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the module, the students will be able to understand the current state-of-the-art and limitations of quantum information processing devices and the platforms that can be used to implement qubits. They have developed the skills needed to read, comprehend, and critically evaluate scientific publications and present scientific results to an academic audience.",
        "inhalt": "The seminar offers an overview of current topics in the field of quantum information processing, presented by the participating students. The topics include basic quantum information; devices based on NMR, trapped ions, superconducting circuits, photons, neutral atoms in optical lattices, spins in solid-state systems; networking across different platforms.",
        "voraussetzungen": "No specific prerequisites. Introductory lectures on quantum computing or quantum communication are advantageous.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3576392&pOrgNr=1",
        "name": "Seminar Quantum Networks",
        "kennung": "CIT4320003",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the module, the students will be able to understand the current state-of-the-art and limitations of quantum networks. They have developed the skills needed to read, comprehend, and critically evaluate scientific publications and present scientific results to an academic audience. While the students demonstrate with both the report and the presentation that they have gained knowledge and expertise in the specific topic, with the report the students also learn the writing of scientific texts, and with the talk the students learn the presentation of scientific results in an academic environment.",
        "inhalt": "The seminar offers an overview of current topics in the field of quantum networks, presented by the participating students. The topics include basic quantum information; protocols; distributed quantum computing; multi-party quantum communication; elements of quantum networks; local realizations; satellite links; quantum internet.",
        "voraussetzungen": "No specific prerequisites. Introductory lectures on quantum computing or quantum communication are advantageous.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1234671&pOrgNr=1",
        "name": "Seminar Robotik, Automatisierungs- und Regelungstechnik",
        "kennung": "EI77581",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse der Regelung, Robotik und Automation.\n\nDer Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Regelung, Robotik und Automation selbstständig auf wissenschaftliche Weise zu bearbeiten und in einem Bericht einzuordnen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen zur Robotik, Automatisierungs- und\nRegelungstechnik, insbesonderen hybride Regelung, lernende Regelung,\nMensch-Roboter-Interaktion, hochdynamische Roboter, Identifikation,\nIntelligente Regelung, Nichtlinerare Regelung und Optimale Regelung.\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge und tragen ihre Resultate vor. Regelmässige Treffen mit einem Fachbetreuer unterstützen die Erarbeitung. Intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1120697&pOrgNr=1",
        "name": "Seminar Signal- und Informationstheorie",
        "kennung": "EI7774",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI7748 (FR 02/15)",
        "lernergebnisse": "Nach der erfolgreichen Teilnahme am Modul verfügen Studierende über Kenntnisse über eine aktuelle Thematik aus dem Bereich der Signal- und Systemtheorie und hat das wissenschaftliche Arbeiten in einer Forschungsgruppe erlernt.\n\nDer Studierende ist anschließend in der Lage sich in eine aktuelle wissenschaftliche Problemstellung einzuarbeiten, eine entsprechende wissenschaftliche Publikation zu verfassen, die erabeiteten Kenntnisse einem fachkundigen Publikum vorzutragen und in einer Diskussion zu verteidigen.",
        "inhalt": "Wechselnde Schwerpunktthemen aus dem Bereich der Signal- und Systemtheorie.\n\nDie Modulteilnehmer erarbeiten sich selbständig aktuelle wissenschaftliche Inhalte. Dazu gehört\n- Literaturrecherche\n- Lesen und verarbeiten aktueller wissenschaftlicher Artikel\n- die Anfertigung einer schriftlichen wisenschaftlicher Ausarbeitung\n- die Präsentation der Ergebnisse vor fachkundigem Publikum\n- wissenschaftliche Diskussion nach der Präsentation",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=759952&pOrgNr=1",
        "name": "Seminar Software Engineering in Computational Intensive Applications",
        "kennung": "IN4690",
        "organisation": "Department Computer Engineering",
        "anmerkung": "nur für Studiengang CSE",
        "lernergebnisse": "The participants acquire the necessary methodological and interdisciplinary skills for dealing with an academically demanding topic in the area of software engineering in computational intensive applications. They know how to produce and present a scientific seminar paper. They can analyze and evaluate the results by contrasting them. They can work with scientific literature (search, evaluation, citation) and are able to present the constituent aspects of their topic in both a written paper and a presentation in front of the group.",
        "inhalt": "Applications from the so-called 'Computational Domains' are becoming more and more complex, and thus have opened the door to many new possibilities but also to new challenges concerning software development. These applications are developed for simulation of scientific phenomina, engineering designs, scientific visualization and many other important problems that usually invovle enormous data set, complex modelling and calculations. High Performance Computing (HPC) is often associted with such applications to solve advanced computation problems.\n\nDesign, implementation, development, and maintenance of Computational Intensive Applications (CIA) differ in several ways from traditional software engineering, as the major focus is on performance over the complexity management of software applications. The main goals of CIAs are to evaluate the scientific computing approaches and generating the computation results. Therefore, most of the time and efforts are applied on how to achieve accurate and stable results while efficiently utilizing the computational power. On the other hand, the comprehensibility, maintainability, reusability and extensibility of the software remains a minor issue of concern. For this reason, it is necessary to optimize the quality of the CSE research software since they have to be evolved for a long period of time to better assist the research.\n\nIn this seminar, we will discuss how to apply and adapt software engineering methodologies and tools in the domain of CIAs development. This will give an opportunity to utilize the knowledge of traditional software engineering, to solve domain-specific problems.",
        "voraussetzungen": "",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=954707&pOrgNr=1",
        "name": "Seminar Vernetzte Systeme und Regelung",
        "kennung": "EI7759",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse der Analyse und Regelung komplexer, vernetzter, und verteilter Systeme.\n\nDer Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Analyse und Regelung komplexer, vernetzter, und verteilter Systeme selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen zur Robotik und Regelungstechnik, insbesondere vernetzte Regelung, lernende Regelung, Mensch-Roboter-Interaktion, dynamische Systeme mit Unsicherheiten, (verteilte) Identifikation, Nichtlineare Regelung und Optimale Regelung.\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
        "voraussetzungen": "Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=924864&pOrgNr=1",
        "name": "Seminar VLSI-Entwurfsverfahren",
        "kennung": "EI7750",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreichem Abschluss des Seminares sind die Studierenden in der Lage, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet des rechnergestützten Schaltungs- und Systementwurfs in verständlicher und überzeugender Weise zu präsentieren.\nZu diesem Zwecke werden im Einzelnen folgende Fähigkeiten erworben:\n• Die teilnehmende Person kann sich selbstständig ein wissenschaftliches Thema aus dem Bereich des rechnergestützten Schaltungs- und Systementwurfs aneignen.\n• Die teilnehmende Person ist fähig, ein Thema strukturiert nach Problemstellung, Stand der Technik, Ziele, Methoden und Ergebnisse darzustellen.\n• Die teilnehmende Person ist in der Lage, ein Thema in der genannten Strukturierung mündlich zu präsentieren, in einem Foliensatz zu visualisieren, und in einem wissenschaftlichen Bericht schriftlich darzustellen.",
        "inhalt": "Spezifische Seminarthemen aus dem Bereich der Entwurfsautomatisierung für elektronische Schaltungen und Systeme werden angeboten. Beispiele sind Analogentwurfsmethodik, Entwurfsmethodik für digitale Schaltungen, Layoutsynthese, und Entwurfsmethodik auf der Systemebene.\nTeilnehmende arbeiten eigenständig auf einem wissenschaftlichen Thema, schreiben ein Paper von 4 Seiten. Abschließend präsentieren die Teilnehmenden ihr Thema in einem Vortrag. In einer anschließenden Diskussion wird ihr Thema detailliert behandelt.",
        "voraussetzungen": "Keine spezifischen Voraussetzungen.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=261771&pOrgNr=1",
        "name": "Sensorgeführte Robotische Manipulation und Lokomotion",
        "kennung": "IN2068",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ab WS 13/14 2 SWS und 3 Credits",
        "lernergebnisse": "Nach erfolgreichem Absolvieren des Moduls kennen Teilnehmende die Werkzeuge zur Modellierung und Bewegungssteuerung komplexer (z.B. humanoider) Robotersysteme in Interaktion mit unbekannten Umgebungen und können die wichtigsten algorithmischen Methoden unterscheiden, die derzeit zur Manipulation und Lokomotion in der Robotik eingesetzt werden.",
        "inhalt": "Einführung: Manipulation und Lokomotion mit komplexen Robotersystemen\n- Grundbegriffe der Differentialgeometrie in der Robotik\n\nOrientierungsdarstellungen, so3, se3\n\nKoordinatentransformationen für Vektoren, Konvektoren, Tensoren\n- Aufgabenorientierte Regelung Entkopplung im Task-Raum\n\nAufstellung der Robotergleichungen und Regelung in aufgabenbezogenen Koordinaten\n- Redundante Systeme, Mikro-/Makromanipulation\n\nInverse Kinematik\n\nAufgaben-Priorisierung: kartesische und in Nullraum-Koordinaten\n- Bewegungssteuerung paralleler Roboter\n\nZweiarmsysteme\n\nAnthropomorphe Hände\n\nHumanoide Manipulatoren\n\nLaufroboter\n- Greifplanung\n- Mobile Manipulation\n- Visual Servoing\n- Mobile nichtholonome Robotersysteme",
        "voraussetzungen": "IN2067 Robotik, Grundkenntnisse der Beschreibung dynamischer Systeme in der Mechanik",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=669621&pOrgNr=1",
        "name": "Sichere Implementierung kryptographischer Verfahren",
        "kennung": "EI7243",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Abschluss dieser Modulveranstaltung sind deren Teilnehmer in der Lage kryptographische Verfahren in eingebetteten Systemen zu implementieren. Des Weiteren sind den Studierenden die Grundlagen der Angriffe bekannt, die auf solche Implementierungen in der Praxis typischerweise durchgeführt werden. Außerdem lernen sie die Prinzipen von zahlreichen Schutzmaßnahmen gegen diese Angriffe kennen.\nDas Wissen der Studierenden beschränkt sich nicht auf die Theorie, sondern wurde durch mehrere praktische Übungen an eigenen Programmbeispielen vertieft.",
        "inhalt": "Kryptographische Verfahren und die Geheimhaltung der darin verwendeten privaten Schlüssel stellen die Grundlage der Sicherheit sämtlicher digitaler Systeme dar. Gerade deshalb sind diese Elemente das klassische Ziel von Angriffen in der Praxis. Inhalte dieser Modulveranstaltung sind die Grundlagen der Implementierung von kryptographischen Verfahren in eingebetteten Systemen, die typischen Angriffe auf diese Verfahren sowie entsprechende Schutzmaßnahmen. Die Veranstaltung und gliedert sich in folgende Themenblöcke:\n1. Einführung:\nImplementierung kryptographischer Verfahren in eingebetteten Sytemen, Angriffsszenarien, Überblick Physikalische Angriffe, Bewertung der Relevanz\n2. Angriffe und Schutzmaßnahmen für symmetrische kryptographische Verfahren:\nLaufzeitangriffe (Timing Attacks), Stromangriffe (Power Analysis Attacks), Fehlerangriffe (Fault Attacks), Schutzmaßnahmen gegen Angriffe\n3. Angriffe und Schutzmaßnahmen für asymmetrische kryptographische Verfahren: :\nLaufzeitangriffe (Timing Attacks), Stromangriffe (Power Analysis Attacks), Fehlerangriffe (Fault Attacks), Schutzmaßnahmen gegen die Angriffe\n4. Spezialthemen:\nDiskussion aktueller Forschungsergebnisse\n\nZu jedem der Themenblöcke sind Hausaufgaben bzw. praktische Übungen im Labor durchzuführen.",
        "voraussetzungen": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nKryptologie oder gleichwertige Grundlagenvorlesung",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743546&pOrgNr=1",
        "name": "Signal Processing and Machine Learning",
        "kennung": "EI70380",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successfully passing the module, the students are able to understand, apply, evaluate, and create mathematical concepts and numerical algorithms in the field of signal processing and machine learning for communications and data processing applications. Furthermore, the students are able to reformulate typical problem formulations in order to apply sparse signal processing techniques and machine learning algorithms and have gained insight into current cutting-edge research problems in these fields.",
        "inhalt": "Introduction of advanced mathematical methods, concepts, and algorithms for selected topics in signal processing and machine learning and their application in current cutting-edge research in communications and data processing applications, which highlights a joint perspective on both paradigms. Introduction into the basics of estimation and classification theory, support vector machine and kernel methods, random forests, neural networks, deep neural networks, recurrent neural networks, sparse signal processing and compressive sensing for machine learning. The usage of popular toolboxes will be demonstrated in selected application examples. The curriculum may change in any semester and will be announced in time.",
        "voraussetzungen": "Linear Algebra and Calculus, Statistical Signal Processing, Convex Optimization",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1187932&pOrgNr=1",
        "name": "Signal Processing for Audio Technology",
        "kennung": "EI7493",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, grundlegende Techniken der Audio-Signalverarbeitung zu verstehen und praktisch anzuwenden. Im Modul werden weiterhin Kenntnisse in Matlab erworben.",
        "inhalt": "Das Modul setzt sich aus einer Vorlesung und einem Praktikum zusammen. Die Vorlesung behandelt folgende Themen:\n- AD-DA Wandlung (Sampling), z-Transformation, Ratenänderung, DFT\n- Prinzipien der Realzeitverarbeitung: blockweise Faltung mit DFT (overlap-add/overlap-save)\n- Filterung von Audiosignalen: IIR und FIR-Filter, Equalizers (Hochpass, Tiefpass und Bandpass/Shelving-Filter), Frequenzgruppenfilter (BARK-Filterbank, Gammatone)\n- Inverse Filterung zur Frequenzgangentzerrung\n- Dynamikbeeinflussung: Kompressor und Limiter, Attack- und Releasezeiten, Verzerrungen, Multiband-Kompressoren\n- Musikeffekte: Echo, Chorus und Phaseneffekte (Flanger, Phaser), Verzerrer, Gateing, Wah-Wah, Röhrenverstärker\n- Vocoder für Sprache und Musik (Time stretching, pitch shifting, Whisperization)\n- Richtmikrofone: Beamformer\n- Binauraltechnik: Messung und Anwendung von Außenohrübertragungsfunktionen und Raumimpulsantworten für die Auralisation,\n- Simulation von Raumhall,\n- Klangsynthese.\n\nIm Praktikum bearbeiten die Teilnehmer im Kleingruppen verschiedene Aufgaben, in denen grundlegende Methoden der digitalen Audio-Signalverarbeitung in Matlab praxisrelevant erarbeitet werden. Diese entsprechen ausgewählten Themen aus der begleitenden Vorlesung, beispielsweise für Implementierungen von Realzeitfilterung, Musikeffekten, Dynamikkompressoren, Raumhallgenerierung oder die binaurale Synthese. Neben den fachlichen Methoden werden Programmierkenntnisse in Matlab vermittelt.",
        "voraussetzungen": "Vorlesung Audiokommunikation (BSc) empfohlen\nVorlesung Psychoakustik und audiologische Anwendungen hilfreich\nGrundkenntnisse in Signalverarbeitung hilfreich\nProgrammierkenntnisse in Matlab hilfreich",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=834834&pOrgNr=1",
        "name": "Signaldarstellung",
        "kennung": "EI0204",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, sowohl kontinuierliche und diskrete als auch reelle und komplexe Signale und Systeme in ihren deterministischen Erscheinungsformen sowohl in ihren mathematischen Eigenschaften als auch im Zeit- und Frequenzbereich zu beschreiben, zu berechnen, zu skizzieren, zu analysieren, zu bewerten sowie diese ineinander zu überführen.\nDamit einhergehend haben die Studierenden grundlegende Kompetenzen für den Umgang mit den klassischen unilateralen und bilateralen Integraltransformationen der Signaltheorie sowie deren diskretisierten Varianten erworben, jeweils inklusive ihrer Rücktransformationen und mathematischen Eigenschaften.\nDie Studenten können ihre erworbenen Kompetenzen sowohl auf Papier als auch in MATLAB auf typische Problemstellungen der Signalverarbeitung anwenden und diese selbstständig lösen.",
        "inhalt": "Signaldarstellung:\nZeitkontinuierliche und zeitdiskrete Signale, lineare zeitinvariante Systeme (LTI-Systeme), Faltung, Faltungsintegral und Faltungssumme, Impulsantwort von LTI-Systemen, Stabilität und Kausalität, periodische Signale, orthogonale Funktionensysteme, zeitkontinuierliche Fourier-Reihe (FR), zeitkontinuierliche Fourier-Transformation (FT), Fourier-Integral, Zusammenhang zwischen FR und FT, korrespondierende FT-Paare, Amplitudenmodulation und Signalrückgewinnung, lineare Differentialgleichungen und Übertragungsfunktionen, Bode-Diagramm, Einführung in die Filtertechnik, zeitdiskrete Fourier-Transformation (ZDFT), lineare Differenzengleichungen, zeitdiskrete Filter, Abtasttheorem, Abtastung und Rekonstruktion eines Signals, Abtastung im Frequenzbereich, Laplace-Transformation (LT), Konvergenzeigenschaften der LT, z-Transformation, Residuensatz, Diskrete Fourier-Transformation (DFT).",
        "voraussetzungen": "Differentialrechnung, Komplexe Analysis, Mengenbegriff, Fourierintegral.\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Analysis 2",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458034&pOrgNr=1",
        "name": "Signaltheorie",
        "kennung": "EI00330",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, sowohl kontinuierliche und diskrete als auch reelle und komplexe Signale und Systeme in ihren deterministischen Erscheinungsformen sowohl in ihren mathematischen Eigenschaften als auch im Zeit- und Frequenzbereich zu beschreiben, zu berechnen, zu skizzieren, zu analysieren, zu bewerten sowie diese ineinander zu überführen.\nDamit einhergehend haben die Studierenden grundlegende Kompetenzen für den Umgang mit den klassischen unilateralen und bilateralen Integraltransformationen der Signaltheorie sowie deren diskretisierten Varianten erworben, jeweils inklusive ihrer Rücktransformationen und mathematischen Eigenschaften.\nDie Studierenden können ihre erworbenen Kompetenzen sowohl auf Papier als auch in MATLAB auf typische Problemstellungen der Signalverarbeitung anwenden und diese selbstständig lösen.",
        "inhalt": "Zeitkontinuierliche und zeitdiskrete Signale, lineare zeitinvariante Systeme (LTI-Systeme), Faltung, Faltungsintegral und Faltungssumme, Impulsantwort von LTI-Systemen, Stabilität und Kausalität, periodische Signale, orthogonale Funktionensysteme, zeitkontinuierliche Fourier-Reihe (FR), zeitkontinuierliche Fourier-Transformation (FT), Fourier-Integral, Zusammenhang zwischen FR und FT, korrespondierende FT-Paare, Amplitudenmodulation und Signalrückgewinnung, lineare Differentialgleichungen und Übertragungsfunktionen, Bode-Diagramm, Einführung in die Filtertechnik, zeitdiskrete Fourier-Transformation (ZDFT), lineare Differenzengleichungen, zeitdiskrete Filter, Abtasttheorem, Abtastung und Rekonstruktion eines Signals, Abtastung im Frequenzbereich, Laplace-Transformation (LT), Konvergenzeigenschaften der LT, z-Transformation, Residuensatz, Diskrete Fourier-Transformation (DFT), Fensterfunktionen. Visualisierung und Lösen von Beispielen in Matlab.",
        "voraussetzungen": "Differentialrechnung, Integralrechnung, Komplexe Analysis, Differentialgleichungen, Grundlagen der Programmierung\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Analysis 2\n- Systemtheorie",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=486967&pOrgNr=1",
        "name": "Simulation of Optical Communication Systems Laboratory",
        "kennung": "EI5030",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to model, simulate and optimize the function of optical components as well as complete single-channel or WDM systems, and to interpret the results correctly.",
        "inhalt": "This lab course offers an introduction into modelling, simulation and physical optimization of optical communication systems.\nThe course employs a commercial photonic system design software (Optiwave Photonic Design Tools) that is used world-wide.\nIn the first sessions, the transmitter and receiver components, i. e. laser, external modulator and photo detector are described and analyzed in the simulation. The following sessions are dedicated to model and understand systems using Intensity Modulation and Direct Detection, and coherent systems with advanced QAM-modulation. Final sessions treat linear and nonlinear fiber effects and the degradation of signal quality they cause, optical amplifiers, and the optimization of the link design of optical communication systems.",
        "voraussetzungen": "Differential / Integral calculus, Vector analysis, signal representation in time and frequency domain, statistical methods of communications engineering, electromagnetic field theory.\n\nLectures that generally cover the required topics:\nAdvanced mathematics\nCommunications engineering\nStatistical signal theory\nSignal representation\nElectromagnetic field theory / High frequency engineering\n\nFor a successful completion of the Laboratory it is essential to take the following module additionally:\nLecture: Optical communications systems (EI5075)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1498591&pOrgNr=1",
        "name": "Software Architecture for Distributed Embedded Systems",
        "kennung": "EI71036",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, the participants are able to explain, apply and develop software architectures for embedded and distributed systems. The students are able to discuss and evaluate different architectural design patterns and design paradigms for such systems. They are able use the learned methods for both the choice of appropriate software architectures and to solve specific problems for applications based on the insights provided in this course, as well as to apply the methods and architectural concepts in system design processes.",
        "inhalt": "Introduction to object oriented software development; Unified Markup Language (UML) representation; basic principles of pattern-oriented software design; specific requirements for embedded systems; challenges of distributed architectures; selected structural, behavioral and creational \"gang of four\" design patterns which are relevant to the targeted applications; design patterns in the context of resource constrained embedded systems: hardware access, concurrency and resource management, safety and reliability; patterns for event handling, service access, configuration and concurrency of distributed applications.",
        "voraussetzungen": "Principles of embedded computing systems, object oriented programming.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1810442&pOrgNr=1",
        "name": "Software Defined Radio Laboratory",
        "kennung": "EI78045",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Am Ende des Praktikums sind die Studierenden mit den Grundlagen der Entwicklungssprache LabVIEW vertraut und können die Sprachfeatures und Funktionsblöcke, die im Zusammenhang mit der Nachrichtenübertragung stehen, in eigenen Programmen einsetzen. Sie sind damit in der Lage, die SDRs anzusteuern, fremde Programme zu verstehen, sowie eigene Signalverarbeitungsalgorithmen und Programme zu schreiben. Darüber hinaus können die Studenten mit der SDR-Hardware umgehen und die Verbindung mit dem Steuercomputer herstellen. Durch die Bearbeitung der obligatorischen Vorbereitungsaufgaben haben die Studierenden die theoretischen Grundlagen der oben genannten Methoden der Nachrichtentechnik (Modulation, Synchronisation, Kanalkodierung, Kanalschätzung, Mehrantennenkonfigurationen (MIMO) und Sicherheit) verstanden und können deren Vor- und Nachteile bewerten. Nach Durchführung der Experimente sind sie zudem in der Lage diese Methoden auf ähnliche Szenarien anzuwenden und in eigene Programme einzubauen.",
        "inhalt": "Ziel des Praktikums ist es, den Teilnehmern ausgewählte Themen der Nachrichtentechnik praktisch mit Hilfe des Einsatzes von Software Defined Radios (SDRs) zu vermitteln. Dazu werden als Erstes die Grundlagen der visuellen Programmiersprache LabVIEW, mit der die SDRs programmiert werden können, gelehrt. Im Labor werden die wesentlichen Funktionsblöcke von modernen Kommunikationssystemen in LabVIEW implementiert und auf den SDRs ausgeführt. Der Kurs beinhaltet Versuche zu den Themen Modulation, Synchronisation, Kanalkodierung, Kanalschätzung, Mehrantennenkonfigurationen (MIMO) und Sicherheit. Zu jedem Versuch gibt es Vorbereitungsaufgaben, die bearbeitet werden müssen. Nach Abschluss eines Termins wird von den Studierenden ein Versuchsprotokoll erstellt, in dem die Ergebnisse dokumentiert werden.",
        "voraussetzungen": "Nachrichtentechnik 1, Kenntnisse in den Grundlagen der Nachrichtenübertragung, sowie über Signale und Systeme, insbesondere Signalbeschreibungen im Zeit- und Frequenzbereich.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3397169&pOrgNr=1",
        "name": "Software for Quantum Computing",
        "kennung": "CIT4330012",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module, students will have detailed expertise of software for quantum computing with which corresponding applications can be realized. More precisely, they will\n* understand the paradigm of quantum computing and will be able to evaluate how it differs from classical computing,\n* be able to analyze whether an application is suited for quantum computing,\n* be able to utilize and, if necessary, extend different data-structures as well as core methods that provide the basis for quantum computing software tools,\n* be able to utilize and, if necessary extend software solutions for quantum computing (e.g., for quantum circuit simulation, quantum circuit compilation, and quantum circuit verification), as well as\n* be able to realize, simulate, compile, verify, and execute quantum circuits using this software.",
        "inhalt": "Quantum computers have the potential to solve certain tasks that would take millennia to complete even with the fastest (conventional) supercomputer. Numerous quantum computing applications with a near-term perspective (e.g., for finance, chemistry, machine learning, optimization) and with a long-term perspective (i.e., cryptography, unstructured search) are currently investigated. However, while impressive accomplishments can be observed in the physical realization of quantum computers, the development of automated methods and software tools that provide assistance in the design and realization of applications for those devices is at risk of not being able to keep up with this development anymore. This may lead to a situation where we might have powerful quantum computers but hardly any proper means to actually use them.\n\nThis module provides an in-depth introduction into the internals of quantum computing software. This includes\n* an elaboration on the differences between classical computing and quantum computing,\n* an introduction to the design flow for quantum computing applications,\n* a detailed coverage of data-structures and method dedicated to quantum computing,\n* a detailed coverage of software tools and methods for important design tasks such as quantum circuit simulation, quantum circuit compilation, quantum circuit verification, etc., as well as\n* corresponding hands-on experiences of those tools considering actual quantum algorithms as well as quantum computing platforms.",
        "voraussetzungen": "Basic knowledge in programming (e.g., in Python, C++, etc.)\nBasic knowledge in the use of design tools such as compilers, debuggers, etc.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2734669&pOrgNr=1",
        "name": "Solving Inverse Problems with Deep Learning",
        "kennung": "EI71068",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, students will be able to i) apply learning based methods to inverse problems such as signal and image recovery from few and noisy images, ii) evaluate their theoretical foundations and limits, and iii) critically evaluate papers and methods in that area, and iv) design variations of existing methods.",
        "inhalt": "There is a long history of algorithmic development for solving inverse problems arising in sensing and imaging systems and beyond. Examples include medical and computational imaging, compressive sensing, as well as community detection in networks. Until recently, most algorithms for solving inverse problems in the imaging and beyond were based on static signal models derived from physics or intuition, such as wavelets or sparse representations.\n\nToday, the best performing approaches for the aforementioned image reconstruction and sensing problems are based on deep learning, which learn various elements of the method including i) signal representations, ii) stepsizes and parameters of iterative algorithms, iii) regularizers, and iv) entire inverse functions. Motivated by those success stories, researchers are redesigning traditional imaging and sensing systems, and deep learning based signal reconstruction methods are starting to be used in important imaging technologies, for example in GEs newest computational tomography scanners and in the newest generation of the iPhone.\n\nThis course gives a graduate/master level introduction to deep learning based imaging. The course first introduces classical approaches to solving inverse problems and then aims to explain the recent advances of deep neural network based approaches for solving inverse problems in the imaging sciences.\n\nTopics include classical sparse models, optimization for fitting classical methods and for training deep networks, unrolled algorithms, convolutional neural networks for image recovery and generation, generative models for image recovery, un-trained neural networks for signal recovery. The course ends with a brief outlook on how to apply those methods beyond image recovery for the recovery of a variety of other signals.",
        "voraussetzungen": "Analysis, an introduction to probability and statistics, and linear algebra. An introduction to machine learning is very helpful, but not necessary.",
        "modulniveau": "",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1536250&pOrgNr=1",
        "name": "Sprachbasierte Sicherheit",
        "kennung": "IN2362",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Studenten erwerben fundierte Kenntnisse zu aktuellen Angriffen und Verteidigungstechniken. Behandelte Techniken werden sowohl theoretisch als auch praktisch behandelt, sodass Studenten neben Faktenwissen zu den jeweiligen Techniken auch jene Methodenkompetenzen erwerben, die es ihnen erlaubt Sicherheitsfragestellungen aus Programmiersprachen-Sicht kompetent zu beantworten.",
        "inhalt": "+ Laufzeitstruktur von Programmen auf Maschinenebene\n+ Angriffe durch Injektion malignen Codes (\"code injection attacks\") und deren Abwehr\no Buffer Overflows und Stack Canaries\no Control-Flow Hijacking und Control-Flow Integrity\n+ Angriffe durch Wiederverwendung bereits existierenden Codes (\"code re-use attacks\") und deren Abwehr\no Return-Oriented Programming und Software Diversity\no Counterfeit Object-Oriented Programming\n+ Angriffe durch Daten\no Non-Control Data Attacks und Data-Flow Integrity bzw. Data Randomization\n+ Aktuelle Resultate\no Theoretische Sicherheit von Control-Flow Integrity\no Trends in Software Diversity\n\nRelevante Aspekte der vorgestellten Techniken werden im Übungsteil konkretisiert.",
        "voraussetzungen": "IN2227 - Compilerbau I\nIN2209 - IT Sicherheit",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743487&pOrgNr=1",
        "name": "Statistical Signal Processing",
        "kennung": "EI70240",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successfully passing the module, the students are able to understand, apply, evaluate, and create mathematical concepts and numerical algorithms in the field of statistical signal processing for communications and data processing applications. The students are able to analyze, evaluate, and create concepts, algorithms, and systems for statistical estimation of deterministic and random parameters, variables, sequences, and processes, as they widely appear in information and communication systems and beyond.",
        "inhalt": "Probability and stochastic processes: fundamentals revisited\nParameter estimation: statistical modeling, maximum likelihood estimation, Bayesian estimation, asymptotic optimality\nMinimum mean squared error estimation: conditional mean estimation and MMSE, linear MMSE estimation, orthogonality principle, Wiener filtering\nRecursive estimation of stochastic processes: Kalman filtering, particle filtering\nHypothesis testing: statistical model, Neyman-Pearson test, maximum-likelihood test, maximum-a-posteriori test, Bayesian test, risk functionals, sufficient statistics, asymptotic optimality\nSelected topics and applications: confidence analysis, kernel methods, neural networks, etc.",
        "voraussetzungen": "Basic classes in probability theory, calculus, linear algebra, and matrix theory.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458035&pOrgNr=1",
        "name": "Stochastische Signale",
        "kennung": "EI00340",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, Signale in ihren stochastischen Erscheinungsformen zu beschreiben, sowie grundlegende Konzepte der Wahrscheinlichkeitstheorie und die Grundlagen stochastischer Prozesse zu verstehen und anzuwenden.\n\nInsbesondere haben die Studierenden ein Verständnis für die fundamentalen Konzepte Zufallsexperiment, Zufallsvariable, Zufallsfolge, Zufallsprozess, insbesondere Markov-Prozess, sowie Ergebnis, Ereignis, Realisierung und Musterfolge/-funktion entwickelt und sie können mit Hilfe dieser Konzepte stochastische Phänomene aus der realen Welt und aus technischen Anwendungen modellieren (z.B. unter Verwendung einfacher Standardmodelle) um sie sodann unter Verwendung verschiedener mathematischer Werkzeuge und stochastischer Beschreibungsformen/Kenngrößen zu untersuchen und zu charakterisieren und schließlich die Ergebnisse zu interpretieren. Darüber hinaus haben die Studierenden gelernt zu untersuchen wie sich verschiedene Arten von Transformationen auf die stochastischen Phänomene und ihre Beschreibungsformen auswirken, sie können Zusammenhänge zwischen technischen Begriffen (z.B. Rauschen, Leistung) und stochastischen Modellen/Kenngrößen herstellen, kennen Zusammenhänge mit verwandten mathematischen Themenfeldern (z.B. mit Grundlagen der Maßtheorie) und sie kennen die Grundideen hinter einigen weiterführenden stochastischen Konzepten (z.B. Konvergenz).\n\nIm begleitenden Praktikum haben die Studierenden Grundkenntnisse in der Anwendung von MATLAB erworben, kennen die wichtigsten Funktion zur Erzeugung von Realisierungen und zur Untersuchung theoretischer Eigenschaften von Zufallsvariablen/-folgen, haben ein Verständnis für einfache Grundlagen der Schätztheorie entwickelt und können all diese Kenntnisse anwenden um einfache stochastische Sachverhalte und technische Anwendungen in MATLAB zu simulieren und die Ergebnisse zu interpretieren.",
        "inhalt": "Wahrscheinlichkeitstheorie:\n- Ergebnisraum\n- Sigma-Algebra\n- Wahrscheinlichkeitsmaß\n- bedingte Wahrscheinlichkeit\n- stochastische Unabhängigkeit\n- Satz von Bayes\n- diskrete und stetige reelle Zufallsvariablen\n- Wahrscheinlichkeitsverteilung und -dichte\n- Produktverteilung und -dichte\n- Funktionen von Zufallsvariablen\n- Erwartungswert und Varianz\n- erzeugende und charakteristische Funktion\n- zentraler Grenzwertsatz\n- Gesetz der großen Zahlen\n- Chebyshev-Ungleichung\nStochastische Standardmodelle:\n- Bernoulliverteilung\n- Binomialverteilung\n- Poissonverteilung\n- Geometrische Verteilung\n- Exponentialverteilung\n- Normalverteilung\nZufallsfolgen:\n- Ensemble von Zufallsvariablen vs. Pfadmodell\n- Verteilungen und Dichten von Zufallsfolgen\n- diskreter Random Walk\n- Konvergenz von Zufallsfolgen\n- Markoveigenschaft\n- Markovketten\nZufallsprozesse:\n- Auto- und Kreuzkorrelationsfunktion\n- Wiener-Levy Prozess\n- Poisson-Prozess\n- Markov-Prozesse\n- Klassifikation von Zufallsprozessen\n- Leistungsdichtespektrum\n- Wiener-Khintchine-Theorem\n- lineare Systeme und Zufallsprozesse\n- weißes Gaußsches Rauschen\nOptionale Themen, z.B.:\n- komplexe Zufallsvariablen\n- bedingte Erwartung\n- mittlerer quadratischer Fehler (MSE)\n- Ableitung und Integration stochastischer Pfade\n- Karhunen-Loeve-Entwicklung von Zufallsprozessen\nMATLAB:\n- Grundlagen\n- Realisierungen von Zufallsvariablen und darauf basierende Schätzungen\n- Beschreibung von Zufallsvariablen mit numerischen Werkzeugen\n- Funktionen von Zufallsvariablen und von deren Realisierungen\n- Verarbeitung von Zufallsvariablen (z.B. MAP- und ML-Detektion)\n- Umgang mit stochastischen Standardmodellen\n- numerische Beschreibung und Simulation von Zufallsfolgen und Zufallsprozessen\n- Verarbeitung von Zufallsfolgen und Prozessen (z.B. Filterung)",
        "voraussetzungen": "Differentialrechnung, Analysis, Mengenbegriff, Fourierintegral.\n\nEs wird empfohlen, die folgende Module (oder gleichwertige Module) vor der Teilnahme bereits erfolgreich absolviert zu haben:\n- Analysis 1 (EI)\n- Analysis 2 (EI)",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=834948&pOrgNr=1",
        "name": "Stochastische Signale",
        "kennung": "EI0205",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, Signale in ihren stochastischen Erscheinungsformen zu beschreiben, sowie grundliegende Konzepte der Wahrscheinlichkeitstheorie und die Grundlagen stochastischer Prozesse zu verstehen und anzuwenden.",
        "inhalt": "Wahrscheinlichkeitstheorie: Ergebnisraum, Sigma Algebra, Wahrscheinlichkeitsmaß, bedingte Wahrscheinlichkeit, stochastische Unabhängigkeit, Satz von Bayes, diskrete und reelle Zufallsvariablen, Wahrscheinlichkeitsverteilung und -dichte, Produktverteilung und -dichte, Funktionen von Zufallsvariablen, Erwartungwert und Varianz, bedingte Erwartung, erzeugende und charakteristische Funktion, zentraler Grenzwertsatz, Gesetz der großen Zahl, Chebyshev Ungleichung. Stochastische Standardmodelle: Bernoulliverteilung, Binomialverteilung, Poissionverteilung, Geometrische Verteilung, Exponentialverteilung, Normalverteilung, etc. Stochastische Zufallsfolgen: Ensemble von Zufallsvariablen vs. Pfadmodell, Verteilungen und Dichten von Zufallsfolgen, diskreter random walk, Konvergenz von Zufallsfolgen, Markoveigenschaft, Markovketten. Zufallsprozesse: Auto- und Kreuzkorrelationsfunktion, Wiener-Levy Prozess, Poisson Prozess, Markov Prozesse, Klassifikation von Zufallsprozessen, Leistungsdichtespektrum, Wiener-Khintchine Theorem, lineare Systeme und Zufallsprozesse, weißes Gaußsches Rauschen, Ableitung und Integration stochastischer Pfade, das MSE-Kalkül und die Karhunen-Loeve Entwicklung von Zufallsprozessen.",
        "voraussetzungen": "Differentialrechnung, Komplexe Analysis, Mengenbegriff, Fourierintegral.\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Analysis 2",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1321149&pOrgNr=1",
        "name": "Strategic Management for Engineers",
        "kennung": "EI04004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "findet ab 24W nur noch im WiSe statt",
        "lernergebnisse": "After successful completion of the module students have an overview on how strategic planning and decision-making processes are carried out in companies. They know the prerequisites (in addition to a suitable product or a suitable business idea) that are necessary in order to successfully position a business in the market. In addition, they are able to evaluate products or business ideas, taking into account the market environment and the competitive situation. They are closer to being able to prepare sound management decisions.",
        "inhalt": "Introduction\n- Strategic purpose (vision, mission, values; stakeholders)\n- Ownership models, Corporate social responsibility (CSR) and compliance\n- Shareholder value\n\nStrategic positioning\n- Business environment\n- Resources, competencies and strategic capabilities\n- Value chain and value system\n\nBusiness strategy\n- Strategic business units\n- Competitive strategies (cost leadership, differentiation)\n\nCorporate strategy\n- Value creation and the corporate parent\n- Portfolio management\n\nDigitalization\n- Technological achievements, new business models and social attractiveness\n- Platforms\n- Big data\n\nTechnology and Innovation\n\nInternationalization\n\nMergers, acquisitions and alliances\n\nOrganization of companies\n\nStrategy planning process\n\nBusiness plans",
        "voraussetzungen": "No requirements",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743553&pOrgNr=1",
        "name": "Synthesis of Digital Systems",
        "kennung": "EI70640",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls verstehen die Studierenden die grundlegenden Schritte des Entwurfsprozesses für digitale Systeme und können diese einsetzen und selbst weiterentwickeln. Sie können Software- und Hardware-Implementierungen bewerten und kennen die Grundlagen der statischen Code-Analyse und Optimierung.\nDie Studierenden können die einzelnen Schritte der High-Level-Hardware-Synthese in C-Algorithmen anwenden und entwickeln und die zugehörige RTL-Beschreibung synthetisieren. Zudem können die Studierenden die HW-Synthese mit einem industriellen High-level Synthese-Tool praktisch einsetzen.\n\nDie Teilnehmer kennen zudem die Grundlagen der SW-Kompilierung und können für kleine C-Funktionen das zugehörige ARM-Assembler-Programm erstellen. Auf Basis der ARM-Prozessoren können sie HW-abhängige Optimierungsschritte analysieren und können die Ausführungszeiten für SW-Programme abschätzen. Zusätzlich kennen die Teilnehmer die Grundlagen der HW/SW-Schnittstelle und können dieses Wissen praktisch umsetzen, um ein SW/HW-System auf einem FPGA-Board zu entwickeln.",
        "inhalt": "Die folgenden Inhalte werden in der Vorlesung behandelt und zudem in einem praktischem Teil bei der Entwicklung eines HW/SW Systems auf einem FPGA Board angewendet:\n- Entwurfsprozess digitaler Systeme\n- Grundlagen der statischen Code Analyse und Optimierung\n- High-Level-Hardware-Synthese mit Scheduling, Binding und Allokation zur Synthese einer RTL-Beschreibung eines Hardware Blocks ausgehend von einem C-Algorithmus\n- Grundlagen der SW-Compilierung\n- ARM Instruction Set und RISC Pipeline\n- Abschätzung der SW Ausführungszeiten\n- On-chip Bussysteme und das HW/SW-Interface",
        "voraussetzungen": "Grundlagen des Entwurfs digitaler Schaltungen sollten bekannt sein. Es wird empfohlen, ein VHDL-Praktikum vor oder neben dem Kurs zu absolvieren. Grundlagen der Programmierung mit C werden vorausgesetzt.",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1022002&pOrgNr=1",
        "name": "System Aspects in Communications",
        "kennung": "EI7432",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI7382",
        "lernergebnisse": "At the end of the module students are able to put all details which they have learned in previous modules (Signal Processing, Mobile Communications, etc.) into the context of a mobile and cellular communication system such as LTE. They understand practical constraints and interactions of many different mechanisms (Cross-layer view). Furthermore the students are able to understand dependencies between commercial and technical aspects. Finally the student are able to set up own simulations of a mobile communication network. He or she is thereby able to apply, analyse, and evaluate the knowledge and methods of modulation techniques like ODFM, and to create simulation tools for mobile communication networks.",
        "inhalt": "1. Basic Propagation Effects: Antenna Pattern, Pathloss, Shadowing, Mobility/Handover/Cell Selection, Link Budget Calculations (Cell Sizes), SINR Calculations, Cell Layout\n2. OFDM: Cyclic Convolution, FFT, Subcarrier Spacing/Symbol Length, Cyclic Prefix, Delay/Doppler Spread, Aliasing, Synchronization,\n3. Access Systems: Broadcast/Multiple Access, Uplink/Donwlink, TDMA/FDMA/CDMA, CDMA with orthogonal and non-orthogonal codes, OFDMA, Single Carrier FDMA, Duplex Methods\n4. Link Adaptation: Power Control, Adaptive Modulation and Coding, Hybrid/Outer ARQ, Link Adaptive Scheduling\n5. Intercell Interference: Downlink/Uplink, Statistical Properties, Frequency Reuse, Interference Averaging, Soft Handover, Interference Coordination, Interference Cancellation\n6. Protocol Stack: Packet/Circuit Switched, Segmentation/Concatenation, Protocol Headers, PDCP/RLC/MAC Layer, OSI Model, X-Layer Design\n7. Scheduler: Multi-user Diversity, Fairness, Quality of Service, Frequency Domain Scheduling\n8. System Architecture: Network Elements/Nodes, Interfaces, Hierarchical Structure, Impact on Performance and Costs\n9. Traffic Types: Voice/VoIP, Streaming, Gaming, WWW, FTP, Full Buffer\n10. (depending on time) Operator's business case, MIMO, Relaying, Self-organizing Networks",
        "voraussetzungen": "- Signal description in the time- and frequency-domains\n- Knowledge of digital signal processing\n- Basic knowledge of mobile communications (e.g. Rayleigh Fading), system theory and in statistics\n\nThe following modules should be passed before taking the course:\n- Digital Communications 1 and 2, Mobile Communications",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1329289&pOrgNr=1",
        "name": "System Design for the Internet of Things",
        "kennung": "EI71013",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon successful completion of the module, the participants are able to make informed design decisions for the development of Internet of Things (IoT) devices and applications. They will be able to evaluate, compare and apply different platforms, algorithms, protocols and system architectures for IoT applications, considering sensing, computation, communication and energy aspects. They will be able to apply the learned design methodologies, algorithms and protocols to develop new applications based on examples from, e.g., the smart energy domain which are presented in the course. Critical reflection on the societal impact of the IoT together with safety, security and privacy aspects will be encouraged.",
        "inhalt": "Introduction to embedded and cyber-physical systems and the IoT; application scenarios for IoT; wireless sensor networks and IoT; design and modeling of embedded platforms; sensors, actuators and computation/control; processing of large data sets; energy supply and constraints; architectures of distributed systems; Internet principles; communication frameworks and protocols; consumer-producer and publisher-subscriber communication patterns; safety, information security and privacy concepts; software design patterns for dependable systems; system simulation and validation; application examples, among others, from the smart energy, smart manufacturing and automotive domains.",
        "voraussetzungen": "Basic principles of embedded systems, internet communication, programming.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=899351&pOrgNr=1",
        "name": "SystemC Laboratory",
        "kennung": "EI7402",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls kennt der Studierende die Grundkonzepte der System-level Beschreibungssprache SystemC und ist in der Lage, entsprechende Modelle zu erstellen, zu simulieren und damit unterschiedliche Architekturkonzepte zu bewerten.",
        "inhalt": "Das SystemC Praktikum bietet eine Einführung in die System-Level Beschreibungssprache SystemC, mit der digitale Systeme aus Hard- und Softwarekomponenten modelliert und simuliert werden können. Die folgenden Hauptaspekte werden behandelt: Motivation für SystemC, Einsatz im Entwurfsablauf, Anwendung auf unterschiedlichen Abstraktionsebenen, Sprachelemente von SystemC. Ein besonderer Schwerpunkt liegt auf der Modellierung auf der Transaktions-Ebene (TLM, transaction level modeling). Als Anwendungsbeispiel wird eine Applikation aus dem Bereich der Datenkommunikation (IP packet processing) auf einer HW/SW Plattform exploriert, um die Möglichkeiten und den praktischen Einsatz von SystemC zu zeigen. Die einzelnen Teilaufgaben werden von den Teilnehmern selbständig an Linux-Rechnern gelöst, auf denen frei verfügbare Tools zum Einsatz kommen.",
        "voraussetzungen": "Programmierkenntnisse in C++ (oder zumindest C)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452558&pOrgNr=1",
        "name": "Systeme - Nachrichtentechnik 1 und Regelungssysteme 1",
        "kennung": "EI0300",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, die Grundlagen der digitalen Nachrichtentechnik und der charakteristischen Eigenschaften von Übertragungssystemen zu verstehen.\n\nDarüber hinaus hat der Studierende Kenntnisse zu den Grundlagen der Regelungs- und Steuerungstechnik.",
        "inhalt": "Nachrichtentechnik:\nQuellensignale und ihre Spektren. Abtasttheorem, Quantisierung, Pulsecode-Modulation (PCM), differentielle PCM, Sigma-Delta-Modulator. Basisbandübertragung: Impulsformen und ihre Spektren, Nyquistbedingungen, Augendiagramm. Übertragungskanal (z.B. AWGN-Kanal), Detektion im Rauschen, Matched-Filter, Fehlerwahrscheinlichkeiten bei antipodischer und orthogonaler Übertragung, lineare digitale Modulationsverfahren (PSK, QAM), Realisierungsaspekte (Takt-, Phasen- und Frequenzschätzung).\n\nRegelungstechnik:\nSteuerung, Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme. - Systemdynamische Bausteine. - Stabilität von LTI-Systemen. - Grundlagen der Regelung und Standardregler. - Stabilitätsanalyse von Regelkreisen im Frequenzbereich. - Reglerentwurf. - Strukturelle Erweiterungen der einschleifigen Regelungsstruktur. - Zustandsbasierter Reglerentwurf. - Digitale Implementierung von Steuerungs-, Regelungs- und Filtergesetzen. - Ereignisdiskrete Steuerungen und Petri-Netz-Modellierung. - Technik von Regelungs-, Steuerungs- und Automatisierungssystemen. - Anwendungsbeispiele.",
        "voraussetzungen": "Mathematisches Verständnis, Signalbeschreibung im Zeit- und Frequenzbereich, Systemtheorie, Grundlagen der Wahrscheinlichkeitsrechnung und der Statistik, Lineare Algebra\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Mathematik 1 bis 3\n- Signale\n- Schaltungstechnik 2\n\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n-",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1191740&pOrgNr=1",
        "name": "Systeme der Signalverarbeitung",
        "kennung": "EI0705",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, zeitkontinuierliche und zeitdiskrete Systeme zu analysieren, deren Zeitantworten und Übertragungsfunktionen zu bestimmen, deren Stabilitätseigenschaften zu beurteilen und Realisierungsformen anzugeben. Sie können zeitkontinuierliche und zeitdiskrete Filter für realistische Anforderungen entwerfen. Die Studierenden beherrschen die Stabilisierung instabiler Systeme mithilfe der Zustandsvariablen-Rückführung und können einen asymptotischen Beobachter entwerfen. Die Studierenden sind in der Lage, basierend auf dem Konzept der suffizienten Statistik und mithilfe des Maximum Likelihood oder des Maximum A-Posteriori Kriteriums praktische Schätzprobleme zu formulieren sowie zu lösen und können lineare Filter für Schätzaufgaben in linearen Systemen entwickeln. Sie können die Eigenschaften der resultierenden Schätzer beurteilen. Die Studierenden sind auch in der Lage, die obigen Konzepte auf das Problem der MIMO Detektion anzuwenden.",
        "inhalt": "Grundlagen der Synthese linearer zeitkontinuierlicher und zeitdiskreter Filter sowie des Entwurfs statischer Schätzer.\nZeitkontinuierliche Systeme: Zustandsraum-Darstellung, Zeitantwort, Impulsantwort, Übertragungsfunktion, Realisierungsformen, Empfindlichkeit, Standardapproximationen, Frequenztransformationen.\nZeitdiskrete Systeme: Zustandsraum-Darstellung, Zeitantwort, Impulsantwort, Übertragungsfunktion, FIR- und IIR-Systeme, Fensterung, linearphasige FIR-Filter, Remez-Algorithmus, minimalphasige FIR-Filter, IIR-Filterentwurf, Frequenztransformationen.\nStabilität: externe Stabilität, Beobachtbarkeit, Steuerbarkeit, asymptotische Stabilität, Rundungsfehler, Feedback der Zustandsvariablen, asymptotische Beobachter.\nStatistische Signalverarbeitung: suffiziente Statistik, lineares Gaußmodell, Maximum-Likelihood (ML) Schätzung, Maximum-A-Posteriori (MAP) Schätzung, Least Squares (LS) Schätzung, lineare Schätzer, Best-Linear Unbiased Estimator (BLUE), linearer Minimum Mean Square Error (MMSE) Schätzer, Bias-Variance Trade-Off, Multiple-Input Multiple-Output (MIMO) Detektion, ML Detektion, Suboptimalität der symbolweisen Detektion, MMSE Metrik, Sphere Decoder.",
        "voraussetzungen": "Lineare Algebra, Analysis, Signaldarstellung, elementare Stochastik.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=899952&pOrgNr=1",
        "name": "System-on-Chip Technologies",
        "kennung": "EI7384",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to analyze and evaluate the structure and operation of systems-on-chip, including its main building blocks, e.g. processor, on-/off-chip memories, and interconnect, as well as implementation methods and techniques for low power consumption.",
        "inhalt": "This course provides basics, current trends and challenges in the development of digital system-on-chip (SoC). We start with the main steps for building arbitrary CMOS-based combinatorial logic and sequential digital data processing and control circuitry (e.g. Finite State Machines) and explaining their role and significance in the scope of key system-on-chip components: microprocessors, memories and interconnects. The microarchitectural structure and building blocks of processor elements (RISC cores), on-/off-chip memory technology (SRAM, DRAM, Flash), bus and point-to-point interconnect standards (Processor Local Bus, Advanced Microcontroller Bus Architecture, FIFO) as well as the design of communications specific arithmetic blocks (adder, multipliers, shift and comparators) will be introduced and analyzed. Finally, we will introduce main implementation methods for SoCs, such as FPGA, standard cell and full custom design, and discuss methods for low power design, which is vital for the development of SoCs in embedded systems.",
        "voraussetzungen": "Bachelor courses on semiconductor devices and digital circuits, basics in computer architecture",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1458032&pOrgNr=1",
        "name": "Systemtheorie",
        "kennung": "EI00220",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, mathematische Modelle für nichtlineare dynamische Schaltungen und Systeme ersten und zweiten Grades im Zeitbereich zu finden und diese zu kategorisieren. Sie können die Zustandsraumdarstellung für lineare dynamische Systeme ersten, zweiten und höheren Grades im Zeit- wie auch im Frequenzbereich bestimmen. Die Studierenden können die Lösbarkeit des Modells beurteilen und die Lösungen für lineare Systeme beliebigen Grades im Zeit- und im Frequenzbereich berechnen. Insbesondere können sie die Impulsantwort und Übertragungsfunktion im Laplace-Bereich bestimmen, deren Eigenschaften und Beziehung diskutieren und damit die Stabilität des Systems beurteilen.",
        "inhalt": "Modellierung und Analyse linearer und nichtlinearer dynamischer Schaltungen und Systeme.\nSchaltungen ersten Grades: Lösung für die Verschaltung eines linearen, resistiven Netzwerkes mit einem linearen, reaktiven Eintor bei allgemeiner, konstanter und stückweise konstanter Erregung, dynamischer Pfad bei nichtlinearem dynamischen Netzwerk, Sprungphänomene, Relaxationsoszillatoren, bistabile Kippstufen, Schaltungen ersten Grades mit polynomialer Nichtlinearität, Systeme ersten Grades.\nLineare Systeme zweiten Grades: System mit zwei linearen dynamischen Elementen bei konstanter und allgemeiner Erregung, Normalformen, Phasenportrait, Zeitantwort, autonome Systeme.\nNichtlineare Systeme zweiten Grades: Satz von Hartman-Grobman, konservative Systeme, bistabile Schaltung, harmonischer Oszillator, Relaxationsoszillator.\nAllgemeine dynamische Systeme: verallgemeinerte Zustandsgleichungen, Zustandsraum-Darstellung, Zero-Input und Zero-State response, Impulsantwort, Stabilität.\nAnalyse im Laplace-Bereich: Ableitungsoperator, Übertragungsfunktion, Eigenfrequenzen, Stabilität, Bodediagramm, Ortskurve.",
        "voraussetzungen": "Differentiation und Integration, gewöhnliche Differentialgleichungen, lineare Algebra, komplexe Zahlen, Analyse resistiver Schaltungen.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Lineare Algebra\n- Schaltungstechnik 1\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n- Analysis 2\n- Elektrizität und Magnetismus\n- Physikalische Grundlagen für die EI",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743485&pOrgNr=1",
        "name": "Systemtheorie der Sinnesorgane",
        "kennung": "EI70250",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Die Studierenden sind nach dem erfolgreichen Abschluss des Moduls in der Lage:\n- Programme zur Analyse dynamischer Systeme zu erstellen (fortgeschrittene Programmierkenntnisse)\n- nichtlineare Systeme zu modellieren sowie ihre Dynamik zu berechnen und analysieren\n- Akustik und akustische Größen zu kennen\n- die Anatomie der Sinnesorgane zu skizzieren sowie deren Funktion zu analysieren\n- grundlegende physikalische und biologische Prinzipien zu generalisieren, zu vereinfachen und zu modellieren\n- Strategien der Informationsverarbeitung der Sinnesorgane zu analysieren und auf technische Systeme zu übertragen.",
        "inhalt": "Diese Vorlesung und das dazugehörige Praktikum behandelt die Funktion der Sinnessysteme sowie die Grundlagen der neuronalen Verarbeitung aus Sicht der Nachrichtentechnik. Im Fokus stehen dabei das Hörsystem und das visuelle System. Neben biologischen Grundlagen wird auch die Psychophysik vorgestellt, die objektiv messbare Eingangsgrößen mit der subjektiven Wahrnehmung verknüpft.\n\nIm Modul (insbesondere im praktischen Teil) werden zudem Programmierkenntnisse vertieft. Hier werden die meist nichtlinearen Verarbeitungsschritte der biologischen Systeme vereinfacht und in Matlab oder Python modelliert. Zudem lernen die Studenten wie sie Ergebnisse und Daten in Grafiken sinnvoll darstellen und zu einem Bericht zusammenfassen.\n\nIm Detail:\n- Grundlagen: Aufbau einer Zelle, lineare und nichtlineare Systemtheorie\n- Grundlagen Akustik und akustische Größen\n- Aufbau des Gehörs\n- Die Hörbahn: neuronale Kodierung im auditorischen System\n- Neuronale Erregung, Modulationsschwellen\n- Grundlagen der Optik und lichttechnische Größen: Linsen, Beugung, mehr-dimensionale Systemtheorie, Modulationsübertragungsfunktionen\n- Das Auge: Orts- und Zeitfrequenzauflösung, Farbsehen, Augenbewegungen",
        "voraussetzungen": "Grundlagen der Systemtheorie\nProgrammieren in Matlab oder Python",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1351980&pOrgNr=1",
        "name": "Technik autonomer Systeme",
        "kennung": "EI74371",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI7437",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, Probleme in der autonomen Robotik zu analysieren und Lösungsansätze zu entwickeln. Weitere angestrebte Lernergebnisse sind Kompetenzen im effizienten und problemorientieren Bearbeiten von Projekten im Team.",
        "inhalt": "Einführung: automatisierte und autonome technische System mit engem Kontakt zu Menschen, Semiautonomie, autonomes Verhalten,\n- Perzeption: Multisensordatenfusion, Lokalisierung, Navigation und Kartographierung, Objekt Erkennung;\n- Planung und Ausführung: Aufgabenzerlegung, reaktives Verhalten, vorgeplantes auf Wissen und Fähigkeiten basiertes Verhalten, Verhaltensübermittlung, Lernen;\n- Architekturen: verhaltensorientiertes Vorgehen, Experten Systeme, Wissensbasen, Mehrebenen-Steuerungs-/Regelungskonzepte;\n- Anwendungen: autonome mobile Service Roboter, humanoide Laufmaschinen, Telepräsenzsysteme.",
        "voraussetzungen": "Programmieren in Python oder C/C++\nGrundkenntnisse der Regelungstechnik und Robotik\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nGrundlagen intelligenter Roboter\nProjektkurs C++",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1365538&pOrgNr=1",
        "name": "Technische Akustik und Lärmbekämpfung",
        "kennung": "EI73871",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, das erworbene Verständnis von akustischen Grundlagen auf Geräuschprobleme anzuwenden, diese zu analysieren und Vorschläge zur Lösung der Geräuschprobleme zu entwickeln. Dafür lernen die Studierenden einfache akustische Messungen selbständig durchzuführen und die Ausbreitung von Schallen und Schalldämm-Maßnahmen zu berechnen. Weiterhin lernen Studierende Lärmschutzsituationen hinsichtlich wichtiger Normen, Messvorschriften und Grenzwerte der Technischen Akustik zu bewerten.",
        "inhalt": "Einführung: Akustik und Lärmbekämpfung, Prinzipien der Lärmminderung, Schallfeldgrößen, Pegelrechnung.\nEntstehung und Ausbreitung von Schallen: Einfache Schwinger, Resonatoren, Wellenarten. Punktstrahler, geometrische Akustik, Absorption, Schallfeldern in Räumen: Raummoden, statistische Raumakustik, Nachhallzeit, Simulationsmethoden, Perzeptive Aspekte in Räumen.\nLuftschalldämmung, Körperschalldämmung.\nSchallmesstechnik und Schallwirkungen: Messmikrofone, Bewertete Schallpegel (A, C, D), Zeitkonstanten (I, F, S), äquivalenter Dauerschallpegel, Leq. Schallanalyse mit absolut und relativ konstanter Bandbreite, Drehklang. Terzpegelanalyse, Einfügungsdämm-Maß,\nBerechnungsverfahren. Lautstärke, Lautheit, Lästigkeit, Psychoakustische Lästigkeit, speech interference level (SIL), Hörschwellenverschiebung (TTS), permanenter Hörverlust (PTS).\nSchallabwehr, Vorschriften und Normen: Arbeitslärm, Maschinenlärm, Gewerbelärm (TA Lärm), Straßenlärm, Schienenlärm, Fluglärm.\nPraktische Einführung in akustische Messungen: Anwendbare Normen, Nutzung von Messgeräten, Durchführung von Messungen im reflexionsarmen Raum, Analyse der Messungen, Erstellen eines Messberichts.",
        "voraussetzungen": "Grundlegende Ingeniersmathematik, Grundlagen der Schallausbreitung aus der Vorlesung Audiokommunikation erwünscht.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1453274&pOrgNr=1",
        "name": "Technische Elektrizitätslehre I für Lehramt",
        "kennung": "EI31811",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul ist der Student in der Lage: # elektrotechnische Grundbegriffe zu verstehen, # die elementaren elektrischen Eintore darzulegen und nach physikalischen Prinzipien einzuordnen, # resistive Netzwerke mathematisch zu charakterisieren, # die grundlegenden mathematischen Methoden der Netzwerkanalyse auf resistive Netzwerke anzuwenden, # einfache resistive Netzwerke zu entwerfen und zu dimensionieren, # die fundamentalen Zusammenhänge der elektromagnetischen Felder zu verstehen und auf einfache Problemstellungen der Elektro- und Magnetostatik anzuwenden.",
        "inhalt": "Ladung, Spannung, Strom, Energie, Leistung,\nPole, Tore, Mehrtore, Dissipativität, Passivität, Verlustlosigkeit, Elementare Eintore, Linearität, Modellbildung, Resistive Netzwerke,\nKirchhoffsche Gesetze, Netzwerkgraphen, Analysemethoden, gesteuerte Quellen, Schaltungssimulation, Mehrtore, Transformatoren, Operationsverstärker, Grundlagen der elektromagnetische Felder und Anwendungen in der Statik.",
        "voraussetzungen": "Befähigung in der Differential- und Integralrechnung ist empfohlen. Darüber hinaus benötigten mathematische Methoden werden in der Vorlesung zusammen mit deren Anwendung in der Elektrotechnik erarbeitet.",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1453275&pOrgNr=1",
        "name": "Technische Elektrizitätslehre II für Lehramt",
        "kennung": "EI31831",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach erfolgreicher Teilnahme am Modul ist der Student in der Lage: # lineare dynamische Systeme zu beschreiben (z.B. im Zustandsraum), # komplexe Wechselstromrechnung anzuwenden, # dynamische Netzwerke zu bewerten (z.B. hinsichtlich Stabilität), # einfache dynamische Schaltungen zu entwerfen und dimensionieren, # Netzwerke mit unendlich vielen Freiheitsgraden (z.B. Fernleitungen) mathematisch zu behandeln und ihre praktische Bedeutung zu verstehen, # die fundamentalen Zusammenhänge der elektromagnetischen Wellen zu verstehen",
        "inhalt": "Wechselgrößen, komplexe Wechselstromrechnung, Analyse und Entwurf elektrischer Filterschaltungen, Oszillatoren, Zustandsraumbeschreibung, Stabilität, Numerische Schaltungsberechnung, Fernleitungen, Schaltungssimulation, Einschaltvorgänge, Fouriermethoden, Drehstrom, Elemente der Elektromagnetischen Feldtheorie",
        "voraussetzungen": "Technische Elektrizitätslehre 1 (LB)",
        "modulniveau": "Bachelor",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=889445&pOrgNr=1",
        "name": "Techno-Economic Analysis of Telecommunication Networks",
        "kennung": "EI7624",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After completion of the module, students understand the different processes of telecommunication networks (life cycle) as well as how their economic cost can be evaluated. They are able to apply important economic concepts as well as their application on networks. Students will also have the opportunity to model the process, its implementation, and simulation using a tool such as Arena or TIBCO.",
        "inhalt": "Value analysis studies are an integral part of every strategic marketing and business plan related with new products and services in the ICT industry. They are commonly used to compare important parameters such as capital and operational expenditures (CapEx, OpEx), life cycle costs, revenue streams, discounted cash flows, and techno economic evaluation measures such as the net present value (NPV) and the internal rate of return (IRR). Such studies offer a measurable output and can be used to support the decision making process related with the business or the market that a company should be in, the potential of certain technology solutions, or, the future of internal R&D projects, etc. A good modelling of the network operational process is necessary to identify the key cost factors and find ways to reduce cost and increase benefits. Some process modeling exercises will be performed with the students to perform consistent and complete cost assessments.",
        "voraussetzungen": "The knowledge of following modules are recommended:\n- Broadband Communication Networks",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1707681&pOrgNr=1",
        "name": "Testing Digital Circuits",
        "kennung": "EI50141",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Intended Learning Outcomes\nAt the end of the module students know about the following topics and are able to employ this knowledge to define and evaluate test solutions for digital ICs and systems:\n- Definition of testing and the difference to verification\n- Fundamentals of testing: fault models, fault detection, redundant faults, fault coverage\n- Methods for test generation: Boolean differences, D-algorithm, fault simulation\n- Analysis of test complexity with the help of complexity theory\n- Principles of passive test methods: Ad-hoc measures, scan path / Principles of active test methods: BIST\n- Overview over memory fault models and memory test algorithms.\n- Outline of test standards (IEEE boundary scan test) and additional topics like IDDQ testing, analog testing, fault analysis",
        "inhalt": "Principles of testing digital circuits; fault models and test quality; functional and structural test generation; fault simulation; complexity theory; design for test (passive, active test methods); memory test; test standards; miscellaneous topics (Iddq test, analog test, test pattern compression, yield management);\n\nIn detail:\n\nThe manufacturing process of integrated circuits introduces a large variety of physical defects. In order to prevent the delivery of failing silicon devices to the customer, the correct function of delivered integrated circuits has to be guaranteed by testing all devices after they have been fabricated.\n\nTesting integrated circuits is one of the core competencies of a semiconductor company. It represents a significant factor in costs and quality. Therefore, testing is considered as an outstanding part of the entire design and manufacturing process of ICs.\n\nFurthermore, testing is a domain-crossing topic: The test engineer within a semiconductor company requires a broad expertise covering circuit and system design, circuit simulation and design verification, and physical design.\n\nOne of the main challenges in testing is costs which have drastically increased over the past years. The access to circuit internal transistors and nodes has to be accomplished by a limited number of external pins. This is increasingly difficult due to the continuous shrinking of device structures.\n\nThis lecture conveys:\n* The basic idea of testing.\n* Relevant failure mechanisms of integrated circuits and the common fault models.\n* The complexity problem of testing and its resulting limitations.\n* Methods for test pattern generation (e.g. fault simulation and automatic test generation).\n* Fundamental measures for designing integrated circuits in order to raise their testability (Design-for-Testability).\n* Techniques for insertion of built-in self-test (BIST) in integrated circuits.\n* Techniques for memory testing.",
        "voraussetzungen": "Basics of digital circuit design.\nThe following modules should be passed before taking the course:\n- Digital IC-Design\n- Electronic Design Automation",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1743491&pOrgNr=1",
        "name": "The Auditory System",
        "kennung": "EI70260",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, wichtige physiologische und perzeptive Mechanismen der menschlichen sensorischen Systeme zu verstehen, hier am Beispiel des Hörsystems für das Sprachverstehen, das Richtungshören, das Hören im Störschall und Schwerhörigkeit, und auf Modelle des Hörsystems anzuwenden. Basierend auf dem Verständnis der Mechanismen und Modelle sind die Studierenden in der Lage, Lösungen für Ingenieursanwendungen im Audiobereich (z.B. mp3) und zu Hörhilfen (Hörgeräte und Cochlea Implantate) zu finden.\nDie Studierenden verstehen weiterhin die Methoden für die Wissensfindung über menschliche perzeptive Prozesse, hier zur Durchführung und Analyse von Hörversuchen, und sind in der Lage, diese in Forschung und Audiologie anzuwenden.",
        "inhalt": "Am Beispiel des Hörsystems vermittelt der Kurs ein tiefgehendes Verständnis menschlicher perzeptiver Mechanismen und der Grundlagen der Modellierung physiologischer und perzeptiver Prozesse für Studenten, die an Bio- und Neuroengineering interessiert sind. Basierend auf dem Verständnis der Mechnismen und Modelle lernen die Studenten, Lösungen für technische Anwendungen im Audiobereich (z.B. mp3, hearables) und zu Hörhilfen (z.B. Hörgeräte, Cochlea Implantate) zu finden.\nDer Kurs deckt die folgenden Themengebiete ab:\n- Physiologie des auditorischen Systems: Außen- und Mittelohr, Cochlea, Hörnerv, Hirnstamm;\n- Mechanismen und Modelle des Außen- und Mittelohres; Außenohrübertragungsfunktionen;\n- Die Cochlea: Physiologie und Wahrnehmung, auditorische Filter-Modelle (DRNL, Meddis Innere Haarzelle);\n- Auditorische/psychoakustische Maskierung: Simultanverdeckung, Nachverdeckung;\n- Unterschiedsschwellen: Intensität, binaurale Merkmale;\n- Lautheit: spektrale Lautheitsmodelle;\n- Binaurales Hören: Binaurale Merkmale, Richtungshören, Physiologie und Modelle, binaurale Entmaskierung, Präzedenzeffekt;\n- Schwerhörigkeit: Arten von Schwerhörigkeit, Frequenzauflösung und auditorische Filter, Maskierung, Lautheit und Recruitment, zeitliche und spektrale Verarbeitung, Tonhöhenwahrnehmung, Modelle der Innenohrschwerhörigkeit;\n- Sprachverstehen: Einflussgrößen, Modelle (Speech Intelligibility Index), binaurales Sprachverstehen, Einfluss von Raumhall und Störschall auf das Sprachverstehen;\n- Auditorische Szenenanalyse;\n- Audio Anwendungen: Virtuelle Akustik, mp3;\n- Hörgeräte: Aufbau, Algorithmen;\n- Cochlea Implantate: Aufbau, Algorithmen, zeitliche und spektrale Auflösung, Modellierung der neuronalen Antwort, Sprachverstehen;\n\nÜbung: Methoden für Hörversuche und deren Auswertung; Grundlagen der statistischen Auswertung von Experimentalergebnissen; Ethische Randbedingungen für die klinische Forschung mit Menschen; Wörter- und Satztests für die Sprachaudiometrie; Modellierung der auditorischen Verarbeitung in Matlab (monaural, binaural); Audio-Demonstrationen.",
        "voraussetzungen": "keine",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=644592&pOrgNr=1",
        "name": "Themen der Signaltheorie",
        "kennung": "EI7564",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Erzielt ist, dass Teilnehmer ein theoretisches Verständnis für Approximationen bezüglich unterschiedlichen Basen entwickeln.",
        "inhalt": "Wir werden unteschiedliche Basen für Signalen auf dem Einheitsinterval untersuchen. Wir fangen mit einigen mathematischen Voraussetzungen an, vor allem einigen Theoremen der Funktionanalysis, und wenden dies dann an die Fourier, Walsh und Prolate Spheroidal Wave Functions an. Zu untersuchen ist bei jeder Basis vor allem die Konvergenz von Approximationen unter unterschiedlichen Normen.",
        "voraussetzungen": "Kenntnisse der mathematischen Analysis und der Grundzügen von Banachräumen",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=2809326&pOrgNr=1",
        "name": "Time Integration and Differential Equations",
        "kennung": "IN2387",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Upon completion of the module students will be able to develop solvers for initial value problems of certain classes of partial differential equations. Furthermore, they will be able to evaluate some of them regarding various numerical properties. They will be able to understand the interplay between time and various space discretizations. Finally, they will be able to apply advanced time integration methods.",
        "inhalt": "- Basics\n-- Basics of ordinary differential equations\n-- Basics of standard time integration (Runge-Kutta)\n-- Dispersion properties\n-- Splitting methods\n- Partial differential equations (PDEs)\n-- Classification\n-- Analytical properties and solutions\n- Discretization of spatial dimension\n- Discretization of PDE operators\n- DE solvers on high-performance computers\n- Advanced time integration (examples)\n-- Semi-Lagrangian Methods\n-- Spectral Deferred Correction Methods\n-- Exponential time integration\n-- Parareal\n-- Parallel Full Approximation Scheme in Space and Time (PFASST)",
        "voraussetzungen": "MA0902 Analysis for Informatics\nBasic knowledge on numerics (e.g. via course on numerical programming), Basic Python programming skills for the tutorials",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=452550&pOrgNr=1",
        "name": "Time-Varying Systems and Computations",
        "kennung": "EI5052",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After the course the student can create Matlab programs implementing efficient algorithms for solving large-scale and structured computational linear algebra problems for engineering applications. Students can analyse the effectiveness and efficiency of comutational linear algebra algorithms. The can analyse compuational engineering problems and express them in terms of linear time-varying systems concepts. Students can read and understand current research papers on the subject of efficient computations and explain their learnings to others in terms of oral and written communication.",
        "inhalt": "Review of time-invariant systems and signals, Large scale computations in engineering and science, Computational problems involving Toeplitz matrices, Realization theory for LTI systems, Computational linear algebra and time-varying systems, State-space representation of LTV systems, Realization theory for LTV systems, Isometric and inner operators, inner-outer factorization, and operator inversion, Semi-seperable matrix structure. Mapping algorithms onto GPU architectures.",
        "voraussetzungen": "Working Knowledge of (numerical) Linearer Algebra, Linear Time-Invariant System Theory, Fundamentals of Signal Processing, Programming Skills in Matlab;\n\nWe expect students to have knowledge of material, which is taught in the following Bachelor courses at TUM:\n- Signale, Systeme, Regelungstechnik, Lineare Algebra (1.Semester), Numerische Mathematik (4.Semester)\n\nIt is recommended to have particpated in the courses:\n- Projektkurs Matlab (MSc)\n- Numerical Methods of Electrical Engineering (MSc)",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1815849&pOrgNr=1",
        "name": "Topics in Audio Information Processing Research",
        "kennung": "EI76251",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, aktuelle Fragestellungen der Audio-Informationsverarbeitung zu identifizieren, aktuelle Lösungsansätze zu verstehen und zu bewerten, englischsprachige wissenschaftliche Veröffentlichungen aus dem Gebiet zu lesen und zu verstehen, sowie an wissenschaftlichen Diskussionen teilzunehmen und diese zu leiten.",
        "inhalt": "Wissenschaftliche Veröffentlichungen (Zeitschriftenartikel, Patente) zu aktuellen Themen aus der Audio-Informationsverarbeitung werden in einer kleinen Gruppe vorgestellt und umfangreich besprochen („Journal Club“). Jeder Teilnehmer stellt mindestens einmal eine Veröffentlichungen vor und leitet die Diskussion. Um die Diskussion zu ermöglichen, ist das Material vor jedem Termin von jedem Teilnehmer vorab zu lesen. Der Fokus liegt auf dem Verständnis und der Diskussion des Inhalts. Die Teilnehmer lernen aktuelle Fragestellungen der Audio-Informationsverarbeitung kennen, schulen das Lesen von englischsprachigen wissenschaftlichen Veröffentlichungen und üben sich in der wissenschaftlichen Diskussion sowie der Diskussionsleitung. Das Seminar wendet sich an fortgeschrittene Studenten, Doktoranden und Post-Docs mit Schwerpunkt Audio-Informationsverarbeitung.",
        "voraussetzungen": "Vorlesung \"The Auditory System\" oder\nVorlesung \"Audiokommunikation\";\nModul \"Signalverarbeitung für die Audiotechnik\" hilfreich",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=679232&pOrgNr=1",
        "name": "Trend Seminar in Digital Technologies and Management",
        "kennung": "EI0531",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the Trend Seminar students are capable of understanding the challenges of working together in interdisciplinary project teams. They are able to apply trend and futures research methodology in a project team. They are able to create and give presentations and gain experience in working on extensive real world problems.\nSpecific learning outcomes for the Trend Seminar are as follows. Students are able to:\n\" distinguish between trend and futures research, as well as to apply portfolio related research methodologies\n\" analyze the status quo of a given topic and to apply the methods of an interdisciplinary trend analysis considering perspectives like economic, technological, social, environmental, political and legal frameworks under high time pressure\n\" apply the scenario planning methodology in real-world contexts in interdisciplinary project teams\n\" create possible future scenarios based on a driver analysis and understand the process of developing and describing an innovative product or service idea\n\" apply the basics of academic writing to document their work results in a comprehensive report in a short amount of time\n\" discuss topics in an interactive setup and elicit different opinions on the matter\n\" create and give trend and futures research result presentations\n\" accept and implement given feedback\n\nhttps://www.cdtm.de/collaborate/innovation-research/cooperate-trend-seminar/",
        "inhalt": "Each semester students from diverse academic backgrounds collectively write a trend report on a certain topic in the field of emerging digital technologies. This trend report includes a status quo analysis, identification of trends, future developments as well as product or service ideas for the future.\nEach student is assigned to a team to work on a certain perspective of the trend report topic. The resulting interdisciplinary teams ensure a thorough analysis of the trend report topic.\nThe Trend Seminar takes place in two phases:\n\" The Basic Seminar phase looks at the near future, summarizes the status quo and identifies upcoming trends. An interdisciplinary approach ensures that for example technological, economic, social, political, legal and environmental trends are taken into account. Each team has the task to research the topic from a different perspective and to summarize the findings in a report.\n\" In the Scenario Planning Seminar phase students build upon the trend analysis from the Basic Seminar phase and analyze the trend report topic with a perspective lying further in the future. They investigate possible developments in areas such as economy, technology, politics, law, environment or society in the future. Based on the results the teams develop innovative products or service ideas for which technical as well as business considerations are analyzed. The teams summarize their findings in a report.",
        "voraussetzungen": "This module will be complemented by module CDTM0120, therefore students are requested to register for both modules at the same time.",
        "modulniveau": "Bachelor",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3195637&pOrgNr=1",
        "name": "Trendweeks on the Future of Digital Technologies",
        "kennung": "CIT4330004",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the Trend Weeks, students are able to apply trend and futures research methodology in a project team. Moreover, they are capable of coping with the challenges of working in interdisciplinary project teams. They are able to create and give presentations and gain experience in working on extensive real world problems.\nSpecific learning outcomes for the Trend Seminar are as follows. Students are able to:\n● distinguish between trend and futures research, as well as to apply portfolio related research methodologies\n● analyze the status quo of a given topic and to apply the methods of an interdisciplinary trend analysis considering perspectives like economic, technological, social, environmental, political and legal frameworks under high time pressure\n● apply the scenario planning methodology in real-world contexts in interdisciplinary project teams\n● apply the basics of academic writing to document their work results in a comprehensive report in a short amount of time\n● discuss topics in an interactive setup and elicit different opinions on the matter\n● organize themselves in a team, communicate openly and address problems in teamwork",
        "inhalt": "Each year, students from diverse academic backgrounds collectively write a trend report on a certain topic in the field of communication technologies. This trend report includes a status quo analysis, identification of trends, future developments as well plausible scenario developments.\nEach student is assigned to a team to work on a certain perspective of the trend report topic. The resulting interdisciplinary teams ensure a thorough analysis of the trend report topic. The trend report is published online and is part of a related research project, e.g. BMBF 6G-life.\nThe Trend Weeks takes place in two phases:\n● The Trend Phase looks at the near future, summarizes the status quo and identifies upcoming trends. An interdisciplinary approach ensures that for example technological, economic, social, political, legal and environmental trends are taken\ninto account. Each team has the task to research the topic from a different perspective and to summarize the findings in a report.\n● In the Scenario Phase, students build upon the trend analysis from the Trend Phase and analyze the trend report topic with a perspective lying further in the future. They create four different extreme, but plausible scenarios of what the future might look\nlike in 20 years. The teams summarize their findings in a report.",
        "voraussetzungen": "none",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3573501&pOrgNr=1",
        "name": "Trustworthy Machine Learning Systems",
        "kennung": "CIT4330017",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to evaluate the need, benefits, as well as the particular challenges of trustworthy systems with modules created with machine learning in various application fields. They will understand the connection between trusted components and their use for dependable functions. They know the European Ai Act the relevant standards and can evaluate concerns about the use of machine learning in dedicated applications. They can create an appropriate risk analysis for applications. Graduates know the dimensions of trustworthiness and the scientific and practical foundations of creating trustworthy systems with machine learning components.",
        "inhalt": "- Motivation to create trustworthy systems with components built with machine learning\n- Fields of application\n- Dimensions of trustworthiness\n- Concerns regarding the trustworthiness of machine learning systems\n- Relationship between trustworthiness and safety\n- \"European AI Act\" and relevant standards\n- Development processes\n- Requirements definition\n- Risk Analysis\n- Architectures for building trustworthy systems\n- Creation of trusted components with machine learning\n- Dimensions of data quality\n- Failure Mode and Effects Analysis\n- Learning assurance\n- Trustworthiness Assessment",
        "voraussetzungen": "Foundations of machine learning and deep neural networks.",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1810440&pOrgNr=1",
        "name": "Turing Berechenbarkeit für Kommunikationsnetze und Informationstheorie",
        "kennung": "EI71063",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "nach dem erfolgreicehn Abschluss des Moduls ist der Student mit den Grundlagen der Turing Berechenbarkeit vertraut. Er kann auch die behandelten Algorithmen in der Entwicklung bzw. im Entwurf von SDN- und NFV-Systemen einsetzen.",
        "inhalt": "Ziel der Vorlesung ist es, die Teilnehmer an die Turing Berechenbarkeit und deren Anwendung für die Berechnung von Kommunikationsnetzen heranzuführen - ein Forschungsgebiet, welches sich insbesondere in den letzten Jahren rasant entwickelt und etabliert hat. Die Turing Berechenbarkeit liefert das stärkste Modell für Simulationen, die auf einer perfekten digitalen Hardware implementiert werden kann. Sie liefert damit auch die Grundlage für Software Defined Networking (SDN) und Network Function Virtualization (NFV). Neben einer grundsätzlichen Einführung in die Turing Berechenbarkeit und Gödelschen Theorie der rekursiven Funktionen werden weitergehende Zusammenhänge zu SDN und NFV und fundamentale Grenzen für SDN und NFV vermittelt.",
        "voraussetzungen": "Lineare Algebra, Analysis 1-3",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=948544&pOrgNr=1",
        "name": "Übertragungstechnik für Lehramt",
        "kennung": "EI0910",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI0544",
        "lernergebnisse": "Durch die Teilnahme an den Modulveranstaltungen erhalten die Studierenden vertiefte Kenntnis über den Aufbau aktueller Übertragungstechnologien über leitungegebundene Medien. Sie haben die Fähigkeit, physikalische und systemtheoretische Modelle zur Beschreibung von Sender, Übertragungskanal, Empfänger, Entzerrer und Detektor auf die betrachteten Systeme anzuwenden und zur Bewertung der Übertragungsqualität (Analyse entstehender Verzerrungen, Berechnung der Bitfehlerrate) zu nutzen.\nDurch die Teilnahme an den Modulveranstaltungen baut der Studierende darüber hinaus ein Verständnis der quantenoptischen Beschreibung des Lichts und des Quantenrauschens auf und erlernt die Unterschiede bei Übertragung mit chaotischem und kohärentem Träger.\nDer Studierendeist in der Lage die Wellenausbreitung im dielektrischen Wellenleiter, Dispersion und Dämpfung zu beschreiben.\nDer Studierende kann das Betriebsverhalten von Halbleiterlichtquellen (HL-Laser und LED), das Betriebsverhalten der optischen Empfänger (Photodiode und Lawinenphotodiode, Vorverstärker) sowie die Kopplung optischer Komponenten nachvollziehen.\nDer Studierende ist in der Lage, eine Aufgabenstellung aus einem aktuellen Themengebiet der Nachrichtentechnik selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Student die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "V. Leitungsgebundene Übertagungstechnik:\nStruktur des Kommunikationsnetzes. Sendesignalformen und Leistungsdichtespektren digitaler Übertragungssysteme: NRZ, RZ, AMI, Duobinär, HDB3, 4B3T, QAM, CAP. Übertragungsmedium Kupfer-Doppelader: Leitungsgleichungen, Dämpfungs- und Phasenfunktion, Reflexionen, Nebensprechen. Eigenschaften von Koaxialkabeln. Digitale Übertragung: Augenmuster, Intersymbol-Interferenz, Augenöffnung, Rauschen, Bitfehlerwahrscheinlichkeit. Lineare und nichtlineare Entzerrung, optimale Empfänger. Übertragungssysteme über Kupferkabel: analoge / digitale Sprachübertragung, ISDN, xDSL, Kabel-TV. Optische Signalübertragung: Laser, Standardfaser, Photodiode, optische Verstärker, Dispersionskompensation. Optisches Netz.\nV. Optische Übertragungstechnik: Grundlagen: Wellenoptik, Wellengleichung, ebene Welle, Gaußscher Strahl; geometrische Optik, Brechung, Reflexion; Quanteneigenschaften, Übertragung mit chaotischem und kohärentem Träger. Lichtwellenleiter: Materialdispersion, planarer Wellenleiter; einmodige und vielwellige Fasern; Phasenraumdiagramm; Dämpfung; Herstellung. Lichtquellen: Lumineszenzdioden, Laserdioden; dynmisches Verhalten, Abstrahlcharakteristik, Modulation. Optische Empfänger: pin-Photodiode, Lawinen-Photodiode; dynamisches Verhalten; Empfängerprinzipien; Rauschen des optischen Empfängers. Verbindungstechniken: Prinzipien; Kopplung im einwelligen und vielwelligen Fall.\nHS. Digirtale Kommunikationssysteme: Für das Seminar werden verschiedene Themen aus den Gebieten der Digitalen Kommunikationstechnik ausgewählt, die von den Studenten selbständig bearbeitet werden. Jeder Student fasst die Ergebnisse seiner Arbeit schriftlich zusammen und hält anschließend einen wissenschaftlichen Vortrag.",
        "voraussetzungen": "Höhere Mathematik, Signaldarstellung im Zeit- und Frequenzbereich, Statistische Methoden der Nachrichtentechnik, Wellenausbreitung. Grundlagen der Halbleiterbauelemente, Grundlagen der geometrischen und physikalischen Optik, Vorlesungen, die dieses Wissen vermitteln, sind z. B.:Höhere Mathematik, Nachrichtentechnik 1, Signaldarstellung, Wellenausbreitung und Übertragungstechnik.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=957640&pOrgNr=1",
        "name": "Vernetzte Regelungssysteme",
        "kennung": "EI7391",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ersetzt EI7166 FR 07/13",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, vernetzte Regelungssysteme zu modellieren und deren Verhalten zu analysieren. Die Studierenden erhalten ein vertieftes Verständnis ueber das Verhalten von vernetzten Regelungssystemen und deren Analyse. Desweiteren, werden Kompetenzen im Bereich der Synthese von verteilten Regelungen vernetzter dynamischer Systeme vermittelt.",
        "inhalt": "Einführung in vernetzte Regelungssysteme (NCS): Regelung von Multi-Agentensystemen, kooperative Regelung, Konsensus, Synchronisation, Methoden der Regelung und Optimierung in verteilten dynamischen Systemen, Stabilisierung und optimale Regelung, Regelung über Kommunikationsnetze, regelungstechnische Modellierung von Kommunikationsprotokollen, Stabilität bei Totzeit, Paketverlust, Kommunikationsbeschränkungen, Regelungsentwurf für determininistische/stochastische Kommunikationskanäle, Anwendung in Infrastruktursystemen, Robotik, vernetzten eingebetteten Systemen.",
        "voraussetzungen": "Grundlagen der Regelungstechnik\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=899394&pOrgNr=1",
        "name": "VHDL System Design Laboratory",
        "kennung": "EI7403",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students will be able to analyze and evaluate System-on-Chip and embedded system concepts. They are capable of designing and creating SoCs and embedded systems with their complex system components.",
        "inhalt": "Concept of System-on-Chip (SoC); build an example of an embedded system with microcontroller, bus and peripherals; first implement an encryption algorithm using a standard hardware description language; then wrap the security module as a peripheral attached to bus; design an interface between peripheral and bus; apply an FPGA design flow for embedded systems, and embedded software for testing the encryption algorithm.",
        "voraussetzungen": "Fundamentals of digital logic design\nFundamentals of programming",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=457032&pOrgNr=1",
        "name": "Virtualisierungstechniken",
        "kennung": "IN2125",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "At the end of the module students are able to classify and evaluate different virtual machines, both concepts and actual products in use today. They can analyse their usefulness in various scenarios, and they understand the technical design trade-offs, implementation challenges as well as typical solutions for better performance.",
        "inhalt": "- Classification of Virtual Machines\n- Operating system Virtualization\n- ISA Virtualization\n++ Interpretation\n++ Binary Translation\n++ Dynamic Optimization\n- Process Virtual Machines\n- High-Level Language Virtual Machines\n- HW/SW-Codesign Virtual Machines\n- system Virtual Machines\n- Multiprocessor Virtualization\n- Applications",
        "voraussetzungen": "IN2076 Advanced Computer Architecture, IN0009 Basic Principles: Operating Systems and System Software",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=456398&pOrgNr=1",
        "name": "Virtuelle Maschinen",
        "kennung": "IN2040",
        "organisation": "Department Computer Engineering",
        "anmerkung": "ab SoSe 13 5 SWS und 6 Credits",
        "lernergebnisse": "Teilnehmer kennen virtuelle Maschinen für imperative, funktionale, logische und objekt-orientierte Programmiersprachen.\nSie beherrschen die Prinzipien, wie unterschiedliche Programmiersprachen-Konzepte auf Folgen von Maschinen-Instruktionen abgebildet werden. Sie sind in der Lage, selbst für Ausschnitte von Programmen Code in einer virtuellen Maschine zu erzeugen, und sie können die gelernten Prinzipien anwenden, um für gegebene Konstrukte eigenständig Übersetzungsschemata zu entwickeln.",
        "inhalt": "Will man für eine Programmiersprache wie Prolog Code erzeugen, wird man schnell feststellen, dass man bei der Übersetzung gerne Befehle verwenden würde, die so von einer konkreten Maschine nicht bereit gestellt werden. Andererseits ändern sich die Instruktionssätze moderner Rechner so schnell, dass es auch gar nicht sinnvoll erscheint, den Compiler zu sehr auf zufälligerweise bereitgestellte Operationen festzulegen. Eine solche Festlegung könnte nämlich bedeuten, dass man sich nach wenigen Jahren bereits gemüßigt fühlen müsste, den Compiler gänzlich neu zu schreiben.\nBereits bei der Implementierung des ersten Pascal Compilers kam man darum auf die Idee, zuerst Code für eine leicht idealisierte Maschine zu erzeugen, deren Befehle dann jeweils nur noch auf den verschiedenen konkreten Zielrechnern zu implementieren waren. Auch die Übersetzung moderner Programmiersprachen wie Prolog, Haskell oder Java basieren auf diesem Prinzip. Einerseits erleichtert dieses Vorgehen die Portierbarkeit des Compilers. Andererseits vereinfacht dies auch die Übersetzung selbst, da man den Befehlssatz entsprechend der jeweiligen zu übersetzenden Programmiersprache geeignet wählen kann.\nSpeziell behandeln wir:\n- die Übersetzung von C;\n- die Übersetzung einer funktionalen Sprache;\n- die Übersetzung von Prolog;\n- die Übersetzung von einer nebenläufigen Variante von C.",
        "voraussetzungen": "Zumindest rudimentäre Kenntnisse verschiedener Programmiersprachen.",
        "modulniveau": "Bachelor/Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=611935&pOrgNr=1",
        "name": "Virtuelle Physik: Moderne Modellierungstechnik und ihr Einsatz in der Computersimulation",
        "kennung": "IN2236",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach Teilnahme der Veranstaltung besitzen die Studenten die Fähigkeit zur gleichungsbasierten Modellierung von physikalischen Systemen.\nSie erwerben ein Verständnis für die dazugehörigen Computersprachen und Compilertechnik und können für die Simulation das passende Integrationsverfahren auswählen.",
        "inhalt": "Die Entwicklung von Computerspielen, die Erstellung von Fahrzeugsimulatoren, die Regelung von Roboteranlagen oder die Optimierung von Flugzeugsystemen: All diese Anwendungen verlangen nach möglichst korrekten und effizienten Modellen ihrer physikalischen Prozesse. Diese Vorlesung bietet eine Einführung in die moderne Modellierungstechnik mit Hilfe objektorientierter, deklarativer Sprachen wie Modelica und erklärt deren Anwendung in der Computersimulation.\n\nIn der Vorlesung werden die physikalischen Grundlagen erklärt und dargelegt wie sich damit elektrische und mechanische Systeme modellieren lassen. Es wird der Aufbau von Modelbibliotheken erläutert und verschiedene Anwendungen in der Mechatronik demonstriert. Weitere Bereiche der Physik werden kurz angeschnitten.\n\nZusätzlich widmet sich ein begleitender Teil der Vorlesung den Methoden zur Computersimulation und erklärt die wichtigsten Algorithmen zur Modelverarbeitung sowie die wichtigsten Rechenverfahren zur Zeitintegration.\n\nIn den Übungen zur Vorlesung, können die Teilnehmer eine eigene mechanische Modelbibliothek erstellen sowie eine Echtzeitsimulation eines Elektrofahrzeugs entwickeln. Vorkenntnisse in der Physik, die über den Gymnasialstoff hinausgehen werden nicht erwartet, jedoch ist reges Interesse von Vorteil. Alle wichtigen Grundlagen werden in der Vorlesung erklärt.\n\nSprache: Die Vorlesungsunterlagen werden in Englisch zur Verfügung gestellt, die Unterrichtssprache (D/E) richtet sich nach dem Wunsch der Hörer und wird in der ersten Vorlesungsstunde festgelegt.",
        "voraussetzungen": "Grundlagen Algebra, Grundlagen Numerik, Programmierkenntnisse, Grundlagen Physik (Gymnasialstoff)",
        "modulniveau": "Master",
        "sprache": "Deutsch/Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3832345&pOrgNr=1",
        "name": "Wireless Communications Laboratory",
        "kennung": "CIT431009",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "After successful completion of the module, the student is able to develop and apply coding and modulation techniques relevant to current and upcoming wireless communication standards. Furthermore, he or she is able to understand the connection to information theory and can reason about performances of optimal and practical systems. In particular, the student is able to compute and interpret achievable rates and facilitate these quantities in the design of coded communication systems.",
        "inhalt": "Background: Overview over architecture of digital transceivers;\n1. channel coding using low-density parity-check (LDPC) codes and polar codes;\n2. computing the capacity and the normal approximation;\n3. combining symbol mapping, channel coding, and demodulation focusing on bit-interleaved coded modulation (BICM) and multi-level coding;\n4. computing achievable rates for unknown channels or channels with no closed-form capacity formula using generalized mutual information (GMI);\n5. employing channel estimation, equalization, and detection in coded systems; basics of probabilistic shaping to improve spectral efficiency",
        "voraussetzungen": "- Channel Coding or Channel Codes for Iterative Decoding\n- Information Theory",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=1369744&pOrgNr=1",
        "name": "Wireless Sensor Networks Laboratory",
        "kennung": "EI50471",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage:\n- die grundlegenden Konzepte drahtloser Sensor-Netzwerkknoten und Sensor-Netzwerke zu erklären und zu diskutieren\n- einen Überblick über MAC-Layer Protokolle und Routingalgorithmen zu geben\n- einfache Protokolle und Algorithmen selbständig auf den in der Lehrveranstaltung eingesetzten Software- und Hardwareplattformen zu implementieren\n- einfache Programme in C/C++ mittels einer integrierten Entwicklungsumgebung zu erstellen, kompilieren, testen und auf den in der Lehrveranstaltung eingesetzten Software- und Hardwareplattformen einzusetzen",
        "inhalt": "Das Praktikum \"Wireless Sensor Networks Laboratory\" erlaubt den Studierenden, einen theoretischen und praktischen Einblick in die Konzepte drahtloser Sensor-Netzwerke zu erhalten, wobei der Fokus auf Netzwerkaspekten liegt. Der Kurs besteht aus 3 Teilen:\n1. Vorlesungsteil: Einführung und theoretische Aspekte drahtloser Sensor-Netzwerk, MAC-Layer Protokolle und Routing-Algorithmen\n2. Praktische Einführung in die Programmierung von drahtlosen Sensor-Netzwerk-Knoten\n3. Hands-On Bestandteile: Implementierung einer Anwendung für drahtlose Sensor-Netzwerke durch Teams von Studierenden\n\nIm Rahmen der Lehrveranstaltung wird eine dedizierte Sensor-Netzwerk-Hardwareplattform eingesetzt. In Dreiergruppen werden die Teilnehmer in der ersten Phase Gelegenheit haben, sich im Rahmen von betreuten Programmieraufgaben in die Plattform einzuarbeiten. In der zweiten Phase wenden die Studierenden ihr Wissen zur Implementierung einer größeren Beispielaufgabe an.",
        "voraussetzungen": "Teilnahmevoraussetzungen sind:\n- Programmierkenntnisse in C, Algorithmen und Datenstrukturen\n- Grundkenntnisse Linux (IDEs und Tools zur Softwareentwicklung, Shells, Makefiles)\n\nOptionale Teilnahmevoraussetzungen sind:\n- Grundlagen drahtloser Kommunikationssysteme\n- Grundlagen Kommunikationsnetze\n\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Programmierpraktikum C",
        "modulniveau": "Master",
        "sprache": "Englisch",
        "gültig bis": ""
    },
    {
        "url": "https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=4435381&pOrgNr=1",
        "name": "Wissenschaftliches Seminar Integrierte Systeme",
        "kennung": "CIT432009",
        "organisation": "Department Computer Engineering",
        "anmerkung": "",
        "lernergebnisse": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage Problemstellungen aus dem Bereich integrierter Systeme und deren Anwendungen zu analysieren und Lösungsansätze zu bewerten. Aufgabenstellungen aus einem aktuellen Themengebiet der integrierten Systeme können selbstständig auf wissenschaftliche Weise bearbeitet, selbstständige Literaturrecherchen dazu durchgeführt und eine schriftliche Ausarbeitung dazu angefertigt werden. Darüber hinaus können die Studierenden die erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
        "inhalt": "Wechselnde Schwerpunktthemen zu integrierten Schaltungen und Systemen, sowie deren Anwendungen.\n\nDie Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung, präsentieren ihren Beitrag im Rahmen eines Kolloquiums und tragen mit Diskussionsbeiträgen zum Kolloquium bei.",
        "voraussetzungen": "Keine spezifischen Voraussetzungen.",
        "modulniveau": "Master",
        "sprache": "Deutsch",
        "gültig bis": ""
    }
]